/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.routines;


import java.time.OffsetDateTime;

import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.Public;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Getalljobsbystatus extends AbstractRoutine<java.lang.Void> {

    private static final long serialVersionUID = 957053347;

    /**
     * The parameter <code>public.getalljobsbystatus._status</code>.
     */
    public static final Parameter<String> _STATUS = createParameter("_status", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getalljobsbystatus.job_id</code>.
     */
    public static final Parameter<Integer> JOB_ID = createParameter("job_id", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.getalljobsbystatus.name</code>.
     */
    public static final Parameter<String> NAME = createParameter("name", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getalljobsbystatus.type</code>.
     */
    public static final Parameter<String> TYPE = createParameter("type", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getalljobsbystatus.payload_type</code>.
     */
    public static final Parameter<String> PAYLOAD_TYPE = createParameter("payload_type", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getalljobsbystatus.message</code>.
     */
    public static final Parameter<String> MESSAGE = createParameter("message", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getalljobsbystatus.submitted_by</code>.
     */
    public static final Parameter<String> SUBMITTED_BY = createParameter("submitted_by", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getalljobsbystatus.submitted_date</code>.
     */
    public static final Parameter<OffsetDateTime> SUBMITTED_DATE = createParameter("submitted_date", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE, false, false);

    /**
     * Create a new routine call instance
     */
    public Getalljobsbystatus() {
        super("getalljobsbystatus", Public.PUBLIC);

        addInParameter(_STATUS);
        addOutParameter(JOB_ID);
        addOutParameter(NAME);
        addOutParameter(TYPE);
        addOutParameter(PAYLOAD_TYPE);
        addOutParameter(MESSAGE);
        addOutParameter(SUBMITTED_BY);
        addOutParameter(SUBMITTED_DATE);
    }

    /**
     * Set the <code>_status</code> parameter IN value to the routine
     */
    public void set_Status(String value) {
        setValue(_STATUS, value);
    }

    /**
     * Get the <code>job_id</code> parameter OUT value from the routine
     */
    public Integer getJobId() {
        return get(JOB_ID);
    }

    /**
     * Get the <code>name</code> parameter OUT value from the routine
     */
    public String getName_() {
        return get(NAME);
    }

    /**
     * Get the <code>type</code> parameter OUT value from the routine
     */
    public String getType() {
        return get(TYPE);
    }

    /**
     * Get the <code>payload_type</code> parameter OUT value from the routine
     */
    public String getPayloadType() {
        return get(PAYLOAD_TYPE);
    }

    /**
     * Get the <code>message</code> parameter OUT value from the routine
     */
    public String getMessage() {
        return get(MESSAGE);
    }

    /**
     * Get the <code>submitted_by</code> parameter OUT value from the routine
     */
    public String getSubmittedBy() {
        return get(SUBMITTED_BY);
    }

    /**
     * Get the <code>submitted_date</code> parameter OUT value from the routine
     */
    public OffsetDateTime getSubmittedDate() {
        return get(SUBMITTED_DATE);
    }
}
