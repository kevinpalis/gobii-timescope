/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.routines;


import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.Public;
import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Upsertkvpfromforeigntable extends AbstractRoutine<Integer> {

    private static final long serialVersionUID = -1520108574;

    /**
     * The parameter <code>public.upsertkvpfromforeigntable.RETURN_VALUE</code>.
     */
    public static final Parameter<Integer> RETURN_VALUE = createParameter("RETURN_VALUE", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.upsertkvpfromforeigntable.foreigntable</code>.
     */
    public static final Parameter<String> FOREIGNTABLE = createParameter("foreigntable", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.upsertkvpfromforeigntable.sourcekeycol</code>.
     */
    public static final Parameter<String> SOURCEKEYCOL = createParameter("sourcekeycol", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.upsertkvpfromforeigntable.sourcevaluecol</code>.
     */
    public static final Parameter<String> SOURCEVALUECOL = createParameter("sourcevaluecol", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.upsertkvpfromforeigntable.targettable</code>.
     */
    public static final Parameter<String> TARGETTABLE = createParameter("targettable", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.upsertkvpfromforeigntable.targetidcol</code>.
     */
    public static final Parameter<String> TARGETIDCOL = createParameter("targetidcol", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.upsertkvpfromforeigntable.targetjsonbcol</code>.
     */
    public static final Parameter<String> TARGETJSONBCOL = createParameter("targetjsonbcol", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * Create a new routine call instance
     */
    public Upsertkvpfromforeigntable() {
        super("upsertkvpfromforeigntable", Public.PUBLIC, org.jooq.impl.SQLDataType.INTEGER);

        setReturnParameter(RETURN_VALUE);
        addInParameter(FOREIGNTABLE);
        addInParameter(SOURCEKEYCOL);
        addInParameter(SOURCEVALUECOL);
        addInParameter(TARGETTABLE);
        addInParameter(TARGETIDCOL);
        addInParameter(TARGETJSONBCOL);
    }

    /**
     * Set the <code>foreigntable</code> parameter IN value to the routine
     */
    public void setForeigntable(String value) {
        setValue(FOREIGNTABLE, value);
    }

    /**
     * Set the <code>foreigntable</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setForeigntable(Field<String> field) {
        setField(FOREIGNTABLE, field);
    }

    /**
     * Set the <code>sourcekeycol</code> parameter IN value to the routine
     */
    public void setSourcekeycol(String value) {
        setValue(SOURCEKEYCOL, value);
    }

    /**
     * Set the <code>sourcekeycol</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setSourcekeycol(Field<String> field) {
        setField(SOURCEKEYCOL, field);
    }

    /**
     * Set the <code>sourcevaluecol</code> parameter IN value to the routine
     */
    public void setSourcevaluecol(String value) {
        setValue(SOURCEVALUECOL, value);
    }

    /**
     * Set the <code>sourcevaluecol</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setSourcevaluecol(Field<String> field) {
        setField(SOURCEVALUECOL, field);
    }

    /**
     * Set the <code>targettable</code> parameter IN value to the routine
     */
    public void setTargettable(String value) {
        setValue(TARGETTABLE, value);
    }

    /**
     * Set the <code>targettable</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setTargettable(Field<String> field) {
        setField(TARGETTABLE, field);
    }

    /**
     * Set the <code>targetidcol</code> parameter IN value to the routine
     */
    public void setTargetidcol(String value) {
        setValue(TARGETIDCOL, value);
    }

    /**
     * Set the <code>targetidcol</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setTargetidcol(Field<String> field) {
        setField(TARGETIDCOL, field);
    }

    /**
     * Set the <code>targetjsonbcol</code> parameter IN value to the routine
     */
    public void setTargetjsonbcol(String value) {
        setValue(TARGETJSONBCOL, value);
    }

    /**
     * Set the <code>targetjsonbcol</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setTargetjsonbcol(Field<String> field) {
        setField(TARGETJSONBCOL, field);
    }
}
