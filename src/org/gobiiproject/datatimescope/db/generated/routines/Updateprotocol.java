/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.routines;


import java.sql.Date;

import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.Public;
import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Updateprotocol extends AbstractRoutine<Integer> {

    private static final long serialVersionUID = 187798452;

    /**
     * The parameter <code>public.updateprotocol.RETURN_VALUE</code>.
     */
    public static final Parameter<Integer> RETURN_VALUE = createParameter("RETURN_VALUE", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.updateprotocol.pid</code>.
     */
    public static final Parameter<Integer> PID = createParameter("pid", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.updateprotocol.pname</code>.
     */
    public static final Parameter<String> PNAME = createParameter("pname", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.updateprotocol.pdescription</code>.
     */
    public static final Parameter<String> PDESCRIPTION = createParameter("pdescription", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.updateprotocol.ptypeid</code>.
     */
    public static final Parameter<Integer> PTYPEID = createParameter("ptypeid", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.updateprotocol.pplatformid</code>.
     */
    public static final Parameter<Integer> PPLATFORMID = createParameter("pplatformid", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.updateprotocol.pcreatedby</code>.
     */
    public static final Parameter<Integer> PCREATEDBY = createParameter("pcreatedby", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.updateprotocol.pcreateddate</code>.
     */
    public static final Parameter<Date> PCREATEDDATE = createParameter("pcreateddate", org.jooq.impl.SQLDataType.DATE, false, false);

    /**
     * The parameter <code>public.updateprotocol.pmodifiedby</code>.
     */
    public static final Parameter<Integer> PMODIFIEDBY = createParameter("pmodifiedby", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.updateprotocol.pmodifieddate</code>.
     */
    public static final Parameter<Date> PMODIFIEDDATE = createParameter("pmodifieddate", org.jooq.impl.SQLDataType.DATE, false, false);

    /**
     * The parameter <code>public.updateprotocol.pstatus</code>.
     */
    public static final Parameter<Integer> PSTATUS = createParameter("pstatus", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * Create a new routine call instance
     */
    public Updateprotocol() {
        super("updateprotocol", Public.PUBLIC, org.jooq.impl.SQLDataType.INTEGER);

        setReturnParameter(RETURN_VALUE);
        addInParameter(PID);
        addInParameter(PNAME);
        addInParameter(PDESCRIPTION);
        addInParameter(PTYPEID);
        addInParameter(PPLATFORMID);
        addInParameter(PCREATEDBY);
        addInParameter(PCREATEDDATE);
        addInParameter(PMODIFIEDBY);
        addInParameter(PMODIFIEDDATE);
        addInParameter(PSTATUS);
    }

    /**
     * Set the <code>pid</code> parameter IN value to the routine
     */
    public void setPid(Integer value) {
        setValue(PID, value);
    }

    /**
     * Set the <code>pid</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPid(Field<Integer> field) {
        setField(PID, field);
    }

    /**
     * Set the <code>pname</code> parameter IN value to the routine
     */
    public void setPname(String value) {
        setValue(PNAME, value);
    }

    /**
     * Set the <code>pname</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPname(Field<String> field) {
        setField(PNAME, field);
    }

    /**
     * Set the <code>pdescription</code> parameter IN value to the routine
     */
    public void setPdescription(String value) {
        setValue(PDESCRIPTION, value);
    }

    /**
     * Set the <code>pdescription</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPdescription(Field<String> field) {
        setField(PDESCRIPTION, field);
    }

    /**
     * Set the <code>ptypeid</code> parameter IN value to the routine
     */
    public void setPtypeid(Integer value) {
        setValue(PTYPEID, value);
    }

    /**
     * Set the <code>ptypeid</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPtypeid(Field<Integer> field) {
        setField(PTYPEID, field);
    }

    /**
     * Set the <code>pplatformid</code> parameter IN value to the routine
     */
    public void setPplatformid(Integer value) {
        setValue(PPLATFORMID, value);
    }

    /**
     * Set the <code>pplatformid</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPplatformid(Field<Integer> field) {
        setField(PPLATFORMID, field);
    }

    /**
     * Set the <code>pcreatedby</code> parameter IN value to the routine
     */
    public void setPcreatedby(Integer value) {
        setValue(PCREATEDBY, value);
    }

    /**
     * Set the <code>pcreatedby</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPcreatedby(Field<Integer> field) {
        setField(PCREATEDBY, field);
    }

    /**
     * Set the <code>pcreateddate</code> parameter IN value to the routine
     */
    public void setPcreateddate(Date value) {
        setValue(PCREATEDDATE, value);
    }

    /**
     * Set the <code>pcreateddate</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPcreateddate(Field<Date> field) {
        setField(PCREATEDDATE, field);
    }

    /**
     * Set the <code>pmodifiedby</code> parameter IN value to the routine
     */
    public void setPmodifiedby(Integer value) {
        setValue(PMODIFIEDBY, value);
    }

    /**
     * Set the <code>pmodifiedby</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPmodifiedby(Field<Integer> field) {
        setField(PMODIFIEDBY, field);
    }

    /**
     * Set the <code>pmodifieddate</code> parameter IN value to the routine
     */
    public void setPmodifieddate(Date value) {
        setValue(PMODIFIEDDATE, value);
    }

    /**
     * Set the <code>pmodifieddate</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPmodifieddate(Field<Date> field) {
        setField(PMODIFIEDDATE, field);
    }

    /**
     * Set the <code>pstatus</code> parameter IN value to the routine
     */
    public void setPstatus(Integer value) {
        setValue(PSTATUS, value);
    }

    /**
     * Set the <code>pstatus</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPstatus(Field<Integer> field) {
        setField(PSTATUS, field);
    }
}
