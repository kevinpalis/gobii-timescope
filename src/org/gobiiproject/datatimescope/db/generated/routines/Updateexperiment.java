/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.routines;


import java.sql.Date;

import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.Public;
import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Updateexperiment extends AbstractRoutine<Integer> {

    private static final long serialVersionUID = 1804931877;

    /**
     * The parameter <code>public.updateexperiment.RETURN_VALUE</code>.
     */
    public static final Parameter<Integer> RETURN_VALUE = createParameter("RETURN_VALUE", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.updateexperiment.pid</code>.
     */
    public static final Parameter<Integer> PID = createParameter("pid", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.updateexperiment.pname</code>.
     */
    public static final Parameter<String> PNAME = createParameter("pname", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.updateexperiment.pcode</code>.
     */
    public static final Parameter<String> PCODE = createParameter("pcode", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.updateexperiment.pprojectid</code>.
     */
    public static final Parameter<Integer> PPROJECTID = createParameter("pprojectid", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.updateexperiment.pvendorprotocolid</code>.
     */
    public static final Parameter<Integer> PVENDORPROTOCOLID = createParameter("pvendorprotocolid", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.updateexperiment.pmanifestid</code>.
     */
    public static final Parameter<Integer> PMANIFESTID = createParameter("pmanifestid", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.updateexperiment.pdatafile</code>.
     */
    public static final Parameter<String> PDATAFILE = createParameter("pdatafile", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.updateexperiment.pcreatedby</code>.
     */
    public static final Parameter<Integer> PCREATEDBY = createParameter("pcreatedby", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.updateexperiment.pcreateddate</code>.
     */
    public static final Parameter<Date> PCREATEDDATE = createParameter("pcreateddate", org.jooq.impl.SQLDataType.DATE, false, false);

    /**
     * The parameter <code>public.updateexperiment.pmodifiedby</code>.
     */
    public static final Parameter<Integer> PMODIFIEDBY = createParameter("pmodifiedby", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.updateexperiment.pmodifieddate</code>.
     */
    public static final Parameter<Date> PMODIFIEDDATE = createParameter("pmodifieddate", org.jooq.impl.SQLDataType.DATE, false, false);

    /**
     * The parameter <code>public.updateexperiment.pstatus</code>.
     */
    public static final Parameter<Integer> PSTATUS = createParameter("pstatus", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * Create a new routine call instance
     */
    public Updateexperiment() {
        super("updateexperiment", Public.PUBLIC, org.jooq.impl.SQLDataType.INTEGER);

        setReturnParameter(RETURN_VALUE);
        addInParameter(PID);
        addInParameter(PNAME);
        addInParameter(PCODE);
        addInParameter(PPROJECTID);
        addInParameter(PVENDORPROTOCOLID);
        addInParameter(PMANIFESTID);
        addInParameter(PDATAFILE);
        addInParameter(PCREATEDBY);
        addInParameter(PCREATEDDATE);
        addInParameter(PMODIFIEDBY);
        addInParameter(PMODIFIEDDATE);
        addInParameter(PSTATUS);
    }

    /**
     * Set the <code>pid</code> parameter IN value to the routine
     */
    public void setPid(Integer value) {
        setValue(PID, value);
    }

    /**
     * Set the <code>pid</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPid(Field<Integer> field) {
        setField(PID, field);
    }

    /**
     * Set the <code>pname</code> parameter IN value to the routine
     */
    public void setPname(String value) {
        setValue(PNAME, value);
    }

    /**
     * Set the <code>pname</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPname(Field<String> field) {
        setField(PNAME, field);
    }

    /**
     * Set the <code>pcode</code> parameter IN value to the routine
     */
    public void setPcode(String value) {
        setValue(PCODE, value);
    }

    /**
     * Set the <code>pcode</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPcode(Field<String> field) {
        setField(PCODE, field);
    }

    /**
     * Set the <code>pprojectid</code> parameter IN value to the routine
     */
    public void setPprojectid(Integer value) {
        setValue(PPROJECTID, value);
    }

    /**
     * Set the <code>pprojectid</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPprojectid(Field<Integer> field) {
        setField(PPROJECTID, field);
    }

    /**
     * Set the <code>pvendorprotocolid</code> parameter IN value to the routine
     */
    public void setPvendorprotocolid(Integer value) {
        setValue(PVENDORPROTOCOLID, value);
    }

    /**
     * Set the <code>pvendorprotocolid</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPvendorprotocolid(Field<Integer> field) {
        setField(PVENDORPROTOCOLID, field);
    }

    /**
     * Set the <code>pmanifestid</code> parameter IN value to the routine
     */
    public void setPmanifestid(Integer value) {
        setValue(PMANIFESTID, value);
    }

    /**
     * Set the <code>pmanifestid</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPmanifestid(Field<Integer> field) {
        setField(PMANIFESTID, field);
    }

    /**
     * Set the <code>pdatafile</code> parameter IN value to the routine
     */
    public void setPdatafile(String value) {
        setValue(PDATAFILE, value);
    }

    /**
     * Set the <code>pdatafile</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPdatafile(Field<String> field) {
        setField(PDATAFILE, field);
    }

    /**
     * Set the <code>pcreatedby</code> parameter IN value to the routine
     */
    public void setPcreatedby(Integer value) {
        setValue(PCREATEDBY, value);
    }

    /**
     * Set the <code>pcreatedby</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPcreatedby(Field<Integer> field) {
        setField(PCREATEDBY, field);
    }

    /**
     * Set the <code>pcreateddate</code> parameter IN value to the routine
     */
    public void setPcreateddate(Date value) {
        setValue(PCREATEDDATE, value);
    }

    /**
     * Set the <code>pcreateddate</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPcreateddate(Field<Date> field) {
        setField(PCREATEDDATE, field);
    }

    /**
     * Set the <code>pmodifiedby</code> parameter IN value to the routine
     */
    public void setPmodifiedby(Integer value) {
        setValue(PMODIFIEDBY, value);
    }

    /**
     * Set the <code>pmodifiedby</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPmodifiedby(Field<Integer> field) {
        setField(PMODIFIEDBY, field);
    }

    /**
     * Set the <code>pmodifieddate</code> parameter IN value to the routine
     */
    public void setPmodifieddate(Date value) {
        setValue(PMODIFIEDDATE, value);
    }

    /**
     * Set the <code>pmodifieddate</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPmodifieddate(Field<Date> field) {
        setField(PMODIFIEDDATE, field);
    }

    /**
     * Set the <code>pstatus</code> parameter IN value to the routine
     */
    public void setPstatus(Integer value) {
        setValue(PSTATUS, value);
    }

    /**
     * Set the <code>pstatus</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPstatus(Field<Integer> field) {
        setField(PSTATUS, field);
    }
}
