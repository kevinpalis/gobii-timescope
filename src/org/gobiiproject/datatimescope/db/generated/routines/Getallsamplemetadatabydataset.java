/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.routines;


import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.Public;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Getallsamplemetadatabydataset extends AbstractRoutine<java.lang.Void> {

    private static final long serialVersionUID = 2088258785;

    /**
     * The parameter <code>public.getallsamplemetadatabydataset.datasetid</code>.
     */
    public static final Parameter<Integer> DATASETID = createParameter("datasetid", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.getallsamplemetadatabydataset.dnarun_name</code>.
     */
    public static final Parameter<String> DNARUN_NAME = createParameter("dnarun_name", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getallsamplemetadatabydataset.sample_name</code>.
     */
    public static final Parameter<String> SAMPLE_NAME = createParameter("sample_name", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getallsamplemetadatabydataset.germplasm_name</code>.
     */
    public static final Parameter<String> GERMPLASM_NAME = createParameter("germplasm_name", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getallsamplemetadatabydataset.external_code</code>.
     */
    public static final Parameter<String> EXTERNAL_CODE = createParameter("external_code", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getallsamplemetadatabydataset.germplasm_type</code>.
     */
    public static final Parameter<String> GERMPLASM_TYPE = createParameter("germplasm_type", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getallsamplemetadatabydataset.species</code>.
     */
    public static final Parameter<String> SPECIES = createParameter("species", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getallsamplemetadatabydataset.platename</code>.
     */
    public static final Parameter<String> PLATENAME = createParameter("platename", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getallsamplemetadatabydataset.num</code>.
     */
    public static final Parameter<String> NUM = createParameter("num", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getallsamplemetadatabydataset.well_row</code>.
     */
    public static final Parameter<String> WELL_ROW = createParameter("well_row", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getallsamplemetadatabydataset.well_col</code>.
     */
    public static final Parameter<String> WELL_COL = createParameter("well_col", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * Create a new routine call instance
     */
    public Getallsamplemetadatabydataset() {
        super("getallsamplemetadatabydataset", Public.PUBLIC);

        addInParameter(DATASETID);
        addOutParameter(DNARUN_NAME);
        addOutParameter(SAMPLE_NAME);
        addOutParameter(GERMPLASM_NAME);
        addOutParameter(EXTERNAL_CODE);
        addOutParameter(GERMPLASM_TYPE);
        addOutParameter(SPECIES);
        addOutParameter(PLATENAME);
        addOutParameter(NUM);
        addOutParameter(WELL_ROW);
        addOutParameter(WELL_COL);
    }

    /**
     * Set the <code>datasetid</code> parameter IN value to the routine
     */
    public void setDatasetid(Integer value) {
        setValue(DATASETID, value);
    }

    /**
     * Get the <code>dnarun_name</code> parameter OUT value from the routine
     */
    public String getDnarunName() {
        return get(DNARUN_NAME);
    }

    /**
     * Get the <code>sample_name</code> parameter OUT value from the routine
     */
    public String getSampleName() {
        return get(SAMPLE_NAME);
    }

    /**
     * Get the <code>germplasm_name</code> parameter OUT value from the routine
     */
    public String getGermplasmName() {
        return get(GERMPLASM_NAME);
    }

    /**
     * Get the <code>external_code</code> parameter OUT value from the routine
     */
    public String getExternalCode() {
        return get(EXTERNAL_CODE);
    }

    /**
     * Get the <code>germplasm_type</code> parameter OUT value from the routine
     */
    public String getGermplasmType() {
        return get(GERMPLASM_TYPE);
    }

    /**
     * Get the <code>species</code> parameter OUT value from the routine
     */
    public String getSpecies() {
        return get(SPECIES);
    }

    /**
     * Get the <code>platename</code> parameter OUT value from the routine
     */
    public String getPlatename() {
        return get(PLATENAME);
    }

    /**
     * Get the <code>num</code> parameter OUT value from the routine
     */
    public String getNum() {
        return get(NUM);
    }

    /**
     * Get the <code>well_row</code> parameter OUT value from the routine
     */
    public String getWellRow() {
        return get(WELL_ROW);
    }

    /**
     * Get the <code>well_col</code> parameter OUT value from the routine
     */
    public String getWellCol() {
        return get(WELL_COL);
    }
}
