/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.routines;


import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.Public;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Getallprojectmetadatabydataset extends AbstractRoutine<java.lang.Void> {

    private static final long serialVersionUID = -724511729;

    /**
     * The parameter <code>public.getallprojectmetadatabydataset.datasetid</code>.
     */
    public static final Parameter<Integer> DATASETID = createParameter("datasetid", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.getallprojectmetadatabydataset.project_pi_contact</code>.
     */
    public static final Parameter<String> PROJECT_PI_CONTACT = createParameter("project_pi_contact", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getallprojectmetadatabydataset.project_name</code>.
     */
    public static final Parameter<String> PROJECT_NAME = createParameter("project_name", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getallprojectmetadatabydataset.project_genotyping_purpose</code>.
     */
    public static final Parameter<String> PROJECT_GENOTYPING_PURPOSE = createParameter("project_genotyping_purpose", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getallprojectmetadatabydataset.project_date_sampled</code>.
     */
    public static final Parameter<String> PROJECT_DATE_SAMPLED = createParameter("project_date_sampled", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getallprojectmetadatabydataset.project_division</code>.
     */
    public static final Parameter<String> PROJECT_DIVISION = createParameter("project_division", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getallprojectmetadatabydataset.project_study_name</code>.
     */
    public static final Parameter<String> PROJECT_STUDY_NAME = createParameter("project_study_name", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getallprojectmetadatabydataset.experiment_name</code>.
     */
    public static final Parameter<String> EXPERIMENT_NAME = createParameter("experiment_name", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getallprojectmetadatabydataset.platform_name</code>.
     */
    public static final Parameter<String> PLATFORM_NAME = createParameter("platform_name", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getallprojectmetadatabydataset.vendor_protocol_name</code>.
     */
    public static final Parameter<String> VENDOR_PROTOCOL_NAME = createParameter("vendor_protocol_name", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getallprojectmetadatabydataset.vendor_name</code>.
     */
    public static final Parameter<String> VENDOR_NAME = createParameter("vendor_name", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getallprojectmetadatabydataset.protocol_name</code>.
     */
    public static final Parameter<String> PROTOCOL_NAME = createParameter("protocol_name", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getallprojectmetadatabydataset.analysis_name</code>.
     */
    public static final Parameter<String> ANALYSIS_NAME = createParameter("analysis_name", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getallprojectmetadatabydataset.dataset_name</code>.
     */
    public static final Parameter<String> DATASET_NAME = createParameter("dataset_name", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getallprojectmetadatabydataset.dataset_type</code>.
     */
    public static final Parameter<String> DATASET_TYPE = createParameter("dataset_type", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * Create a new routine call instance
     */
    public Getallprojectmetadatabydataset() {
        super("getallprojectmetadatabydataset", Public.PUBLIC);

        addInParameter(DATASETID);
        addOutParameter(PROJECT_PI_CONTACT);
        addOutParameter(PROJECT_NAME);
        addOutParameter(PROJECT_GENOTYPING_PURPOSE);
        addOutParameter(PROJECT_DATE_SAMPLED);
        addOutParameter(PROJECT_DIVISION);
        addOutParameter(PROJECT_STUDY_NAME);
        addOutParameter(EXPERIMENT_NAME);
        addOutParameter(PLATFORM_NAME);
        addOutParameter(VENDOR_PROTOCOL_NAME);
        addOutParameter(VENDOR_NAME);
        addOutParameter(PROTOCOL_NAME);
        addOutParameter(ANALYSIS_NAME);
        addOutParameter(DATASET_NAME);
        addOutParameter(DATASET_TYPE);
    }

    /**
     * Set the <code>datasetid</code> parameter IN value to the routine
     */
    public void setDatasetid(Integer value) {
        setValue(DATASETID, value);
    }

    /**
     * Get the <code>project_pi_contact</code> parameter OUT value from the routine
     */
    public String getProjectPiContact() {
        return get(PROJECT_PI_CONTACT);
    }

    /**
     * Get the <code>project_name</code> parameter OUT value from the routine
     */
    public String getProjectName() {
        return get(PROJECT_NAME);
    }

    /**
     * Get the <code>project_genotyping_purpose</code> parameter OUT value from the routine
     */
    public String getProjectGenotypingPurpose() {
        return get(PROJECT_GENOTYPING_PURPOSE);
    }

    /**
     * Get the <code>project_date_sampled</code> parameter OUT value from the routine
     */
    public String getProjectDateSampled() {
        return get(PROJECT_DATE_SAMPLED);
    }

    /**
     * Get the <code>project_division</code> parameter OUT value from the routine
     */
    public String getProjectDivision() {
        return get(PROJECT_DIVISION);
    }

    /**
     * Get the <code>project_study_name</code> parameter OUT value from the routine
     */
    public String getProjectStudyName() {
        return get(PROJECT_STUDY_NAME);
    }

    /**
     * Get the <code>experiment_name</code> parameter OUT value from the routine
     */
    public String getExperimentName() {
        return get(EXPERIMENT_NAME);
    }

    /**
     * Get the <code>platform_name</code> parameter OUT value from the routine
     */
    public String getPlatformName() {
        return get(PLATFORM_NAME);
    }

    /**
     * Get the <code>vendor_protocol_name</code> parameter OUT value from the routine
     */
    public String getVendorProtocolName() {
        return get(VENDOR_PROTOCOL_NAME);
    }

    /**
     * Get the <code>vendor_name</code> parameter OUT value from the routine
     */
    public String getVendorName() {
        return get(VENDOR_NAME);
    }

    /**
     * Get the <code>protocol_name</code> parameter OUT value from the routine
     */
    public String getProtocolName() {
        return get(PROTOCOL_NAME);
    }

    /**
     * Get the <code>analysis_name</code> parameter OUT value from the routine
     */
    public String getAnalysisName() {
        return get(ANALYSIS_NAME);
    }

    /**
     * Get the <code>dataset_name</code> parameter OUT value from the routine
     */
    public String getDatasetName() {
        return get(DATASET_NAME);
    }

    /**
     * Get the <code>dataset_type</code> parameter OUT value from the routine
     */
    public String getDatasetType() {
        return get(DATASET_TYPE);
    }
}
