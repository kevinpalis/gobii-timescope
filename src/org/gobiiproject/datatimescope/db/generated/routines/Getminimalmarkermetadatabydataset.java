/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.routines;


import java.math.BigDecimal;

import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.Public;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Getminimalmarkermetadatabydataset extends AbstractRoutine<java.lang.Void> {

    private static final long serialVersionUID = -1965625337;

    /**
     * The parameter <code>public.getminimalmarkermetadatabydataset.datasetid</code>.
     */
    public static final Parameter<Integer> DATASETID = createParameter("datasetid", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.getminimalmarkermetadatabydataset.marker_name</code>.
     */
    public static final Parameter<String> MARKER_NAME = createParameter("marker_name", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getminimalmarkermetadatabydataset.alleles</code>.
     */
    public static final Parameter<String> ALLELES = createParameter("alleles", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.getminimalmarkermetadatabydataset.chrom</code>.
     */
    public static final Parameter<String> CHROM = createParameter("chrom", org.jooq.impl.SQLDataType.VARCHAR, false, false);

    /**
     * The parameter <code>public.getminimalmarkermetadatabydataset.pos</code>.
     */
    public static final Parameter<BigDecimal> POS = createParameter("pos", org.jooq.impl.SQLDataType.NUMERIC, false, false);

    /**
     * The parameter <code>public.getminimalmarkermetadatabydataset.strand</code>.
     */
    public static final Parameter<String> STRAND = createParameter("strand", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * Create a new routine call instance
     */
    public Getminimalmarkermetadatabydataset() {
        super("getminimalmarkermetadatabydataset", Public.PUBLIC);

        addInParameter(DATASETID);
        addOutParameter(MARKER_NAME);
        addOutParameter(ALLELES);
        addOutParameter(CHROM);
        addOutParameter(POS);
        addOutParameter(STRAND);
    }

    /**
     * Set the <code>datasetid</code> parameter IN value to the routine
     */
    public void setDatasetid(Integer value) {
        setValue(DATASETID, value);
    }

    /**
     * Get the <code>marker_name</code> parameter OUT value from the routine
     */
    public String getMarkerName() {
        return get(MARKER_NAME);
    }

    /**
     * Get the <code>alleles</code> parameter OUT value from the routine
     */
    public String getAlleles() {
        return get(ALLELES);
    }

    /**
     * Get the <code>chrom</code> parameter OUT value from the routine
     */
    public String getChrom() {
        return get(CHROM);
    }

    /**
     * Get the <code>pos</code> parameter OUT value from the routine
     */
    public BigDecimal getPos() {
        return get(POS);
    }

    /**
     * Get the <code>strand</code> parameter OUT value from the routine
     */
    public String getStrand() {
        return get(STRAND);
    }
}
