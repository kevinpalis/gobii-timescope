/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.udt.records;


import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.udt.KeyvaluepairType;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UDTRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class KeyvaluepairTypeRecord extends UDTRecordImpl<KeyvaluepairTypeRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = -1422853948;

    /**
     * Setter for <code>public.keyvaluepair_type.key</code>.
     */
    public void setKey(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.keyvaluepair_type.key</code>.
     */
    public Integer getKey() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.keyvaluepair_type.val</code>.
     */
    public void setVal(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.keyvaluepair_type.val</code>.
     */
    public String getVal() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return KeyvaluepairType.KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return KeyvaluepairType.VAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getVal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getVal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KeyvaluepairTypeRecord value1(Integer value) {
        setKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KeyvaluepairTypeRecord value2(String value) {
        setVal(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KeyvaluepairTypeRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached KeyvaluepairTypeRecord
     */
    public KeyvaluepairTypeRecord() {
        super(KeyvaluepairType.KEYVALUEPAIR_TYPE);
    }

    /**
     * Create a detached, initialised KeyvaluepairTypeRecord
     */
    public KeyvaluepairTypeRecord(Integer key, String val) {
        super(KeyvaluepairType.KEYVALUEPAIR_TYPE);

        set(0, key);
        set(1, val);
    }
}
