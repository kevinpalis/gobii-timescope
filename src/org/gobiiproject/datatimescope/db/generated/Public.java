/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.tables.Analysis;
import org.gobiiproject.datatimescope.db.generated.tables.Contact;
import org.gobiiproject.datatimescope.db.generated.tables.Cv;
import org.gobiiproject.datatimescope.db.generated.tables.Cvgroup;
import org.gobiiproject.datatimescope.db.generated.tables.Databasechangelog;
import org.gobiiproject.datatimescope.db.generated.tables.Databasechangeloglock;
import org.gobiiproject.datatimescope.db.generated.tables.Dataset;
import org.gobiiproject.datatimescope.db.generated.tables.Dbxref;
import org.gobiiproject.datatimescope.db.generated.tables.Display;
import org.gobiiproject.datatimescope.db.generated.tables.Dnarun;
import org.gobiiproject.datatimescope.db.generated.tables.Dnasample;
import org.gobiiproject.datatimescope.db.generated.tables.Experiment;
import org.gobiiproject.datatimescope.db.generated.tables.Germplasm;
import org.gobiiproject.datatimescope.db.generated.tables.Getallanalysisparameters;
import org.gobiiproject.datatimescope.db.generated.tables.Getallchrlenbydataset;
import org.gobiiproject.datatimescope.db.generated.tables.Getallchrlenbydatasetandmap;
import org.gobiiproject.datatimescope.db.generated.tables.Getallchrlenbymarkerlist;
import org.gobiiproject.datatimescope.db.generated.tables.Getallcontactsbyrole;
import org.gobiiproject.datatimescope.db.generated.tables.Getalljobsbystatus;
import org.gobiiproject.datatimescope.db.generated.tables.Getallmarkermetadatabydataset;
import org.gobiiproject.datatimescope.db.generated.tables.Getallmarkermetadatabydatasetandmap;
import org.gobiiproject.datatimescope.db.generated.tables.Getallmarkersinmarkergroup;
import org.gobiiproject.datatimescope.db.generated.tables.Getallmarkersinmarkergroups;
import org.gobiiproject.datatimescope.db.generated.tables.Getallmarkersinmarkergroupsbyid;
import org.gobiiproject.datatimescope.db.generated.tables.Getallprojectmetadatabydataset;
import org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofdnarun;
import org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofdnasample;
import org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofgermplasm;
import org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofmapset;
import org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofmarker;
import org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofplatform;
import org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofproject;
import org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofprotocol;
import org.gobiiproject.datatimescope.db.generated.tables.Getallsamplemetadatabydataset;
import org.gobiiproject.datatimescope.db.generated.tables.Getcvtermsbycvgroupname;
import org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbydnasamplenames;
import org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbydnasamplenamesandpi;
import org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbydnasamplenamesandproject;
import org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbyexternalcodes;
import org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbyexternalcodesandpi;
import org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbyexternalcodesandproject;
import org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbygermplasmnames;
import org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbygermplasmnamesandpi;
import org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbygermplasmnamesandproject;
import org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbypi;
import org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbyproject;
import org.gobiiproject.datatimescope.db.generated.tables.Getdnarunnamesbydataset;
import org.gobiiproject.datatimescope.db.generated.tables.Getdnarunpropertybyname;
import org.gobiiproject.datatimescope.db.generated.tables.Getdnasamplepropertybyname;
import org.gobiiproject.datatimescope.db.generated.tables.Getexperimentnamesbyprojectid;
import org.gobiiproject.datatimescope.db.generated.tables.Getexperimentsbyprojectid;
import org.gobiiproject.datatimescope.db.generated.tables.Getgermplasmpropertybyname;
import org.gobiiproject.datatimescope.db.generated.tables.Getmanifestbyexperimentid;
import org.gobiiproject.datatimescope.db.generated.tables.Getmapsetpropertybyname;
import org.gobiiproject.datatimescope.db.generated.tables.Getmarkerallmapsetinfobydataset;
import org.gobiiproject.datatimescope.db.generated.tables.Getmarkerids;
import org.gobiiproject.datatimescope.db.generated.tables.Getmarkeridsbymarkernames;
import org.gobiiproject.datatimescope.db.generated.tables.Getmarkeridsbymarkernamesandplatformlist;
import org.gobiiproject.datatimescope.db.generated.tables.Getmarkeridsbyplatformlist;
import org.gobiiproject.datatimescope.db.generated.tables.Getmarkeridsbysamplesanddatasettype;
import org.gobiiproject.datatimescope.db.generated.tables.Getmarkeridsbysamplesplatformsanddatasettype;
import org.gobiiproject.datatimescope.db.generated.tables.Getmarkerinmarkergroupbyname;
import org.gobiiproject.datatimescope.db.generated.tables.Getmarkermapsetinfobydataset;
import org.gobiiproject.datatimescope.db.generated.tables.Getmarkermapsetinfobymarkerlist;
import org.gobiiproject.datatimescope.db.generated.tables.Getmarkernamesbydataset;
import org.gobiiproject.datatimescope.db.generated.tables.Getmarkernamesbydatasetandmap;
import org.gobiiproject.datatimescope.db.generated.tables.Getmarkerpropertybyname;
import org.gobiiproject.datatimescope.db.generated.tables.Getmarkerqcmetadatabydataset;
import org.gobiiproject.datatimescope.db.generated.tables.Getmarkerqcmetadatabymarkerlist;
import org.gobiiproject.datatimescope.db.generated.tables.Getmatrixposofmarkers;
import org.gobiiproject.datatimescope.db.generated.tables.Getmatrixposofsamples;
import org.gobiiproject.datatimescope.db.generated.tables.Getminimalmarkermetadatabydataset;
import org.gobiiproject.datatimescope.db.generated.tables.Getminimalmarkermetadatabydatasetandmap;
import org.gobiiproject.datatimescope.db.generated.tables.Getminimalsamplemetadatabydataset;
import org.gobiiproject.datatimescope.db.generated.tables.Getplatformpropertybyname;
import org.gobiiproject.datatimescope.db.generated.tables.Getprojectpropertybyname;
import org.gobiiproject.datatimescope.db.generated.tables.Getprotocolpropertybyname;
import org.gobiiproject.datatimescope.db.generated.tables.Getrolesofcontact;
import org.gobiiproject.datatimescope.db.generated.tables.Getsampleqcmetadatabydataset;
import org.gobiiproject.datatimescope.db.generated.tables.Getsampleqcmetadatabymarkerlist;
import org.gobiiproject.datatimescope.db.generated.tables.Getsampleqcmetadatabymarkerlistx;
import org.gobiiproject.datatimescope.db.generated.tables.Getsampleqcmetadatabysamplelist;
import org.gobiiproject.datatimescope.db.generated.tables.Gobiiprop;
import org.gobiiproject.datatimescope.db.generated.tables.Job;
import org.gobiiproject.datatimescope.db.generated.tables.LinkageGroup;
import org.gobiiproject.datatimescope.db.generated.tables.Manifest;
import org.gobiiproject.datatimescope.db.generated.tables.Mapset;
import org.gobiiproject.datatimescope.db.generated.tables.Marker;
import org.gobiiproject.datatimescope.db.generated.tables.MarkerGroup;
import org.gobiiproject.datatimescope.db.generated.tables.MarkerLinkageGroup;
import org.gobiiproject.datatimescope.db.generated.tables.Organization;
import org.gobiiproject.datatimescope.db.generated.tables.Platform;
import org.gobiiproject.datatimescope.db.generated.tables.Project;
import org.gobiiproject.datatimescope.db.generated.tables.Protocol;
import org.gobiiproject.datatimescope.db.generated.tables.Reference;
import org.gobiiproject.datatimescope.db.generated.tables.RegexpMatches;
import org.gobiiproject.datatimescope.db.generated.tables.RegexpSplitToTable;
import org.gobiiproject.datatimescope.db.generated.tables.Role;
import org.gobiiproject.datatimescope.db.generated.tables.Timescoper;
import org.gobiiproject.datatimescope.db.generated.tables.VJobsSummary;
import org.gobiiproject.datatimescope.db.generated.tables.VMarkerLinkageGenetic;
import org.gobiiproject.datatimescope.db.generated.tables.VMarkerLinkagePhysical;
import org.gobiiproject.datatimescope.db.generated.tables.Variant;
import org.gobiiproject.datatimescope.db.generated.tables.VendorProtocol;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetallanalysisparametersRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetallchrlenbydatasetRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetallchrlenbydatasetandmapRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetallchrlenbymarkerlistRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetallcontactsbyroleRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetalljobsbystatusRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetallmarkermetadatabydatasetRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetallmarkermetadatabydatasetandmapRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetallmarkersinmarkergroupRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetallmarkersinmarkergroupsRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetallmarkersinmarkergroupsbyidRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetallprojectmetadatabydatasetRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetallpropertiesofdnarunRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetallpropertiesofdnasampleRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetallpropertiesofgermplasmRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetallpropertiesofmapsetRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetallpropertiesofmarkerRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetallpropertiesofplatformRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetallpropertiesofprojectRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetallpropertiesofprotocolRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetallsamplemetadatabydatasetRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetcvtermsbycvgroupnameRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetdnarunidsbydnasamplenamesRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetdnarunidsbydnasamplenamesandpiRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetdnarunidsbydnasamplenamesandprojectRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetdnarunidsbyexternalcodesRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetdnarunidsbyexternalcodesandpiRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetdnarunidsbyexternalcodesandprojectRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetdnarunidsbygermplasmnamesRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetdnarunidsbygermplasmnamesandpiRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetdnarunidsbygermplasmnamesandprojectRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetdnarunidsbypiRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetdnarunidsbyprojectRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetdnarunnamesbydatasetRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetdnarunpropertybynameRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetdnasamplepropertybynameRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetexperimentnamesbyprojectidRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetexperimentsbyprojectidRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetgermplasmpropertybynameRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetmanifestbyexperimentidRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetmapsetpropertybynameRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetmarkerallmapsetinfobydatasetRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetmarkeridsRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetmarkeridsbymarkernamesRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetmarkeridsbymarkernamesandplatformlistRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetmarkeridsbyplatformlistRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetmarkeridsbysamplesanddatasettypeRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetmarkeridsbysamplesplatformsanddatasettypeRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetmarkerinmarkergroupbynameRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetmarkermapsetinfobydatasetRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetmarkermapsetinfobymarkerlistRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetmarkernamesbydatasetRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetmarkernamesbydatasetandmapRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetmarkerpropertybynameRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetmarkerqcmetadatabydatasetRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetmarkerqcmetadatabymarkerlistRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetmatrixposofmarkersRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetmatrixposofsamplesRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetminimalmarkermetadatabydatasetRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetminimalmarkermetadatabydatasetandmapRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetminimalsamplemetadatabydatasetRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetplatformpropertybynameRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetprojectpropertybynameRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetprotocolpropertybynameRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetrolesofcontactRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetsampleqcmetadatabydatasetRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetsampleqcmetadatabymarkerlistRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetsampleqcmetadatabymarkerlistxRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetsampleqcmetadatabysamplelistRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.RegexpMatchesRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.RegexpSplitToTableRecord;
import org.gobiiproject.datatimescope.db.generated.udt.DistinctSourceKeys;
import org.gobiiproject.datatimescope.db.generated.udt.KeyvaluepairType;
import org.gobiiproject.datatimescope.db.generated.udt.Myrowtype;
import org.jooq.Catalog;
import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Result;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.UDT;
import org.jooq.impl.DSL;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = -1124645773;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.analysis</code>.
     */
    public final Analysis ANALYSIS = org.gobiiproject.datatimescope.db.generated.tables.Analysis.ANALYSIS;

    /**
     * The table <code>public.contact</code>.
     */
    public final Contact CONTACT = org.gobiiproject.datatimescope.db.generated.tables.Contact.CONTACT;

    /**
     * A term, class, universal or type within an
ontology or controlled vocabulary.  This table is also used for
relations and properties. cvterms constitute nodes in the graph
defined by the collection of cvterms and cvterm_relationships.
     */
    public final Cv CV = org.gobiiproject.datatimescope.db.generated.tables.Cv.CV;

    /**
     * A controlled vocabulary or ontology. A cv is
composed of cvterms (AKA terms, classes, types, universals - relations
and properties are also stored in cvterm) and the relationships
between them.
     */
    public final Cvgroup CVGROUP = org.gobiiproject.datatimescope.db.generated.tables.Cvgroup.CVGROUP;

    /**
     * The table <code>public.databasechangelog</code>.
     */
    public final Databasechangelog DATABASECHANGELOG = org.gobiiproject.datatimescope.db.generated.tables.Databasechangelog.DATABASECHANGELOG;

    /**
     * The table <code>public.databasechangeloglock</code>.
     */
    public final Databasechangeloglock DATABASECHANGELOGLOCK = org.gobiiproject.datatimescope.db.generated.tables.Databasechangeloglock.DATABASECHANGELOGLOCK;

    /**
     * The table <code>public.dataset</code>.
     */
    public final Dataset DATASET = org.gobiiproject.datatimescope.db.generated.tables.Dataset.DATASET;

    /**
     * A unique, global, public, stable identifier. Not necessarily an external reference - can reference data items inside the particular instance being used. Typically a row in a table can be uniquely identified with a primary identifier (called dbxref_id); a table may also have secondary identifiers (in a linking table &lt;T&gt;_dbxref). A dbxref is generally written as &lt;DB&gt;:&lt;ACCESSION&gt; or as &lt;DB&gt;:&lt;ACCESSION&gt;:&lt;VERSION&gt;.
     */
    public final Dbxref DBXREF = org.gobiiproject.datatimescope.db.generated.tables.Dbxref.DBXREF;

    /**
     * The table <code>public.display</code>.
     */
    public final Display DISPLAY = org.gobiiproject.datatimescope.db.generated.tables.Display.DISPLAY;

    /**
     * The table <code>public.dnarun</code>.
     */
    public final Dnarun DNARUN = org.gobiiproject.datatimescope.db.generated.tables.Dnarun.DNARUN;

    /**
     * The table <code>public.dnasample</code>.
     */
    public final Dnasample DNASAMPLE = org.gobiiproject.datatimescope.db.generated.tables.Dnasample.DNASAMPLE;

    /**
     * The table <code>public.experiment</code>.
     */
    public final Experiment EXPERIMENT = org.gobiiproject.datatimescope.db.generated.tables.Experiment.EXPERIMENT;

    /**
     * The table <code>public.germplasm</code>.
     */
    public final Germplasm GERMPLASM = org.gobiiproject.datatimescope.db.generated.tables.Germplasm.GERMPLASM;

    /**
     * The table <code>public.getallanalysisparameters</code>.
     */
    public final Getallanalysisparameters GETALLANALYSISPARAMETERS = org.gobiiproject.datatimescope.db.generated.tables.Getallanalysisparameters.GETALLANALYSISPARAMETERS;

    /**
     * Call <code>public.getallanalysisparameters</code>.
     */
    public static Result<GetallanalysisparametersRecord> GETALLANALYSISPARAMETERS(Configuration configuration, Integer id) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getallanalysisparameters.GETALLANALYSISPARAMETERS.call(id)).fetch();
    }

    /**
     * Get <code>public.getallanalysisparameters</code> as a table.
     */
    public static Getallanalysisparameters GETALLANALYSISPARAMETERS(Integer id) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallanalysisparameters.GETALLANALYSISPARAMETERS.call(id);
    }

    /**
     * Get <code>public.getallanalysisparameters</code> as a table.
     */
    public static Getallanalysisparameters GETALLANALYSISPARAMETERS(Field<Integer> id) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallanalysisparameters.GETALLANALYSISPARAMETERS.call(id);
    }

    /**
     * The table <code>public.getallchrlenbydataset</code>.
     */
    public final Getallchrlenbydataset GETALLCHRLENBYDATASET = org.gobiiproject.datatimescope.db.generated.tables.Getallchrlenbydataset.GETALLCHRLENBYDATASET;

    /**
     * Call <code>public.getallchrlenbydataset</code>.
     */
    public static Result<GetallchrlenbydatasetRecord> GETALLCHRLENBYDATASET(Configuration configuration, Integer datasetid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getallchrlenbydataset.GETALLCHRLENBYDATASET.call(datasetid)).fetch();
    }

    /**
     * Get <code>public.getallchrlenbydataset</code> as a table.
     */
    public static Getallchrlenbydataset GETALLCHRLENBYDATASET(Integer datasetid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallchrlenbydataset.GETALLCHRLENBYDATASET.call(datasetid);
    }

    /**
     * Get <code>public.getallchrlenbydataset</code> as a table.
     */
    public static Getallchrlenbydataset GETALLCHRLENBYDATASET(Field<Integer> datasetid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallchrlenbydataset.GETALLCHRLENBYDATASET.call(datasetid);
    }

    /**
     * The table <code>public.getallchrlenbydatasetandmap</code>.
     */
    public final Getallchrlenbydatasetandmap GETALLCHRLENBYDATASETANDMAP = org.gobiiproject.datatimescope.db.generated.tables.Getallchrlenbydatasetandmap.GETALLCHRLENBYDATASETANDMAP;

    /**
     * Call <code>public.getallchrlenbydatasetandmap</code>.
     */
    public static Result<GetallchrlenbydatasetandmapRecord> GETALLCHRLENBYDATASETANDMAP(Configuration configuration, Integer datasetid, Integer mapid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getallchrlenbydatasetandmap.GETALLCHRLENBYDATASETANDMAP.call(datasetid, mapid)).fetch();
    }

    /**
     * Get <code>public.getallchrlenbydatasetandmap</code> as a table.
     */
    public static Getallchrlenbydatasetandmap GETALLCHRLENBYDATASETANDMAP(Integer datasetid, Integer mapid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallchrlenbydatasetandmap.GETALLCHRLENBYDATASETANDMAP.call(datasetid, mapid);
    }

    /**
     * Get <code>public.getallchrlenbydatasetandmap</code> as a table.
     */
    public static Getallchrlenbydatasetandmap GETALLCHRLENBYDATASETANDMAP(Field<Integer> datasetid, Field<Integer> mapid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallchrlenbydatasetandmap.GETALLCHRLENBYDATASETANDMAP.call(datasetid, mapid);
    }

    /**
     * The table <code>public.getallchrlenbymarkerlist</code>.
     */
    public final Getallchrlenbymarkerlist GETALLCHRLENBYMARKERLIST = org.gobiiproject.datatimescope.db.generated.tables.Getallchrlenbymarkerlist.GETALLCHRLENBYMARKERLIST;

    /**
     * Call <code>public.getallchrlenbymarkerlist</code>.
     */
    public static Result<GetallchrlenbymarkerlistRecord> GETALLCHRLENBYMARKERLIST(Configuration configuration, String markerlist) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getallchrlenbymarkerlist.GETALLCHRLENBYMARKERLIST.call(markerlist)).fetch();
    }

    /**
     * Get <code>public.getallchrlenbymarkerlist</code> as a table.
     */
    public static Getallchrlenbymarkerlist GETALLCHRLENBYMARKERLIST(String markerlist) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallchrlenbymarkerlist.GETALLCHRLENBYMARKERLIST.call(markerlist);
    }

    /**
     * Get <code>public.getallchrlenbymarkerlist</code> as a table.
     */
    public static Getallchrlenbymarkerlist GETALLCHRLENBYMARKERLIST(Field<String> markerlist) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallchrlenbymarkerlist.GETALLCHRLENBYMARKERLIST.call(markerlist);
    }

    /**
     * The table <code>public.getallcontactsbyrole</code>.
     */
    public final Getallcontactsbyrole GETALLCONTACTSBYROLE = org.gobiiproject.datatimescope.db.generated.tables.Getallcontactsbyrole.GETALLCONTACTSBYROLE;

    /**
     * Call <code>public.getallcontactsbyrole</code>.
     */
    public static Result<GetallcontactsbyroleRecord> GETALLCONTACTSBYROLE(Configuration configuration, Integer roleid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getallcontactsbyrole.GETALLCONTACTSBYROLE.call(roleid)).fetch();
    }

    /**
     * Get <code>public.getallcontactsbyrole</code> as a table.
     */
    public static Getallcontactsbyrole GETALLCONTACTSBYROLE(Integer roleid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallcontactsbyrole.GETALLCONTACTSBYROLE.call(roleid);
    }

    /**
     * Get <code>public.getallcontactsbyrole</code> as a table.
     */
    public static Getallcontactsbyrole GETALLCONTACTSBYROLE(Field<Integer> roleid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallcontactsbyrole.GETALLCONTACTSBYROLE.call(roleid);
    }

    /**
     * The table <code>public.getalljobsbystatus</code>.
     */
    public final Getalljobsbystatus GETALLJOBSBYSTATUS = org.gobiiproject.datatimescope.db.generated.tables.Getalljobsbystatus.GETALLJOBSBYSTATUS;

    /**
     * Call <code>public.getalljobsbystatus</code>.
     */
    public static Result<GetalljobsbystatusRecord> GETALLJOBSBYSTATUS(Configuration configuration, String _Status) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getalljobsbystatus.GETALLJOBSBYSTATUS.call(_Status)).fetch();
    }

    /**
     * Get <code>public.getalljobsbystatus</code> as a table.
     */
    public static Getalljobsbystatus GETALLJOBSBYSTATUS(String _Status) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getalljobsbystatus.GETALLJOBSBYSTATUS.call(_Status);
    }

    /**
     * Get <code>public.getalljobsbystatus</code> as a table.
     */
    public static Getalljobsbystatus GETALLJOBSBYSTATUS(Field<String> _Status) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getalljobsbystatus.GETALLJOBSBYSTATUS.call(_Status);
    }

    /**
     * The table <code>public.getallmarkermetadatabydataset</code>.
     */
    public final Getallmarkermetadatabydataset GETALLMARKERMETADATABYDATASET = org.gobiiproject.datatimescope.db.generated.tables.Getallmarkermetadatabydataset.GETALLMARKERMETADATABYDATASET;

    /**
     * Call <code>public.getallmarkermetadatabydataset</code>.
     */
    public static Result<GetallmarkermetadatabydatasetRecord> GETALLMARKERMETADATABYDATASET(Configuration configuration, Integer datasetid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getallmarkermetadatabydataset.GETALLMARKERMETADATABYDATASET.call(datasetid)).fetch();
    }

    /**
     * Get <code>public.getallmarkermetadatabydataset</code> as a table.
     */
    public static Getallmarkermetadatabydataset GETALLMARKERMETADATABYDATASET(Integer datasetid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallmarkermetadatabydataset.GETALLMARKERMETADATABYDATASET.call(datasetid);
    }

    /**
     * Get <code>public.getallmarkermetadatabydataset</code> as a table.
     */
    public static Getallmarkermetadatabydataset GETALLMARKERMETADATABYDATASET(Field<Integer> datasetid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallmarkermetadatabydataset.GETALLMARKERMETADATABYDATASET.call(datasetid);
    }

    /**
     * The table <code>public.getallmarkermetadatabydatasetandmap</code>.
     */
    public final Getallmarkermetadatabydatasetandmap GETALLMARKERMETADATABYDATASETANDMAP = org.gobiiproject.datatimescope.db.generated.tables.Getallmarkermetadatabydatasetandmap.GETALLMARKERMETADATABYDATASETANDMAP;

    /**
     * Call <code>public.getallmarkermetadatabydatasetandmap</code>.
     */
    public static Result<GetallmarkermetadatabydatasetandmapRecord> GETALLMARKERMETADATABYDATASETANDMAP(Configuration configuration, Integer datasetid, Integer mapid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getallmarkermetadatabydatasetandmap.GETALLMARKERMETADATABYDATASETANDMAP.call(datasetid, mapid)).fetch();
    }

    /**
     * Get <code>public.getallmarkermetadatabydatasetandmap</code> as a table.
     */
    public static Getallmarkermetadatabydatasetandmap GETALLMARKERMETADATABYDATASETANDMAP(Integer datasetid, Integer mapid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallmarkermetadatabydatasetandmap.GETALLMARKERMETADATABYDATASETANDMAP.call(datasetid, mapid);
    }

    /**
     * Get <code>public.getallmarkermetadatabydatasetandmap</code> as a table.
     */
    public static Getallmarkermetadatabydatasetandmap GETALLMARKERMETADATABYDATASETANDMAP(Field<Integer> datasetid, Field<Integer> mapid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallmarkermetadatabydatasetandmap.GETALLMARKERMETADATABYDATASETANDMAP.call(datasetid, mapid);
    }

    /**
     * The table <code>public.getallmarkersinmarkergroup</code>.
     */
    public final Getallmarkersinmarkergroup GETALLMARKERSINMARKERGROUP = org.gobiiproject.datatimescope.db.generated.tables.Getallmarkersinmarkergroup.GETALLMARKERSINMARKERGROUP;

    /**
     * Call <code>public.getallmarkersinmarkergroup</code>.
     */
    public static Result<GetallmarkersinmarkergroupRecord> GETALLMARKERSINMARKERGROUP(Configuration configuration, Integer id) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getallmarkersinmarkergroup.GETALLMARKERSINMARKERGROUP.call(id)).fetch();
    }

    /**
     * Get <code>public.getallmarkersinmarkergroup</code> as a table.
     */
    public static Getallmarkersinmarkergroup GETALLMARKERSINMARKERGROUP(Integer id) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallmarkersinmarkergroup.GETALLMARKERSINMARKERGROUP.call(id);
    }

    /**
     * Get <code>public.getallmarkersinmarkergroup</code> as a table.
     */
    public static Getallmarkersinmarkergroup GETALLMARKERSINMARKERGROUP(Field<Integer> id) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallmarkersinmarkergroup.GETALLMARKERSINMARKERGROUP.call(id);
    }

    /**
     * The table <code>public.getallmarkersinmarkergroups</code>.
     */
    public final Getallmarkersinmarkergroups GETALLMARKERSINMARKERGROUPS = org.gobiiproject.datatimescope.db.generated.tables.Getallmarkersinmarkergroups.GETALLMARKERSINMARKERGROUPS;

    /**
     * Call <code>public.getallmarkersinmarkergroups</code>.
     */
    public static Result<GetallmarkersinmarkergroupsRecord> GETALLMARKERSINMARKERGROUPS(Configuration configuration, String _Namelist) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getallmarkersinmarkergroups.GETALLMARKERSINMARKERGROUPS.call(_Namelist)).fetch();
    }

    /**
     * Get <code>public.getallmarkersinmarkergroups</code> as a table.
     */
    public static Getallmarkersinmarkergroups GETALLMARKERSINMARKERGROUPS(String _Namelist) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallmarkersinmarkergroups.GETALLMARKERSINMARKERGROUPS.call(_Namelist);
    }

    /**
     * Get <code>public.getallmarkersinmarkergroups</code> as a table.
     */
    public static Getallmarkersinmarkergroups GETALLMARKERSINMARKERGROUPS(Field<String> _Namelist) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallmarkersinmarkergroups.GETALLMARKERSINMARKERGROUPS.call(_Namelist);
    }

    /**
     * The table <code>public.getallmarkersinmarkergroupsbyid</code>.
     */
    public final Getallmarkersinmarkergroupsbyid GETALLMARKERSINMARKERGROUPSBYID = org.gobiiproject.datatimescope.db.generated.tables.Getallmarkersinmarkergroupsbyid.GETALLMARKERSINMARKERGROUPSBYID;

    /**
     * Call <code>public.getallmarkersinmarkergroupsbyid</code>.
     */
    public static Result<GetallmarkersinmarkergroupsbyidRecord> GETALLMARKERSINMARKERGROUPSBYID(Configuration configuration, String _Idlist) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getallmarkersinmarkergroupsbyid.GETALLMARKERSINMARKERGROUPSBYID.call(_Idlist)).fetch();
    }

    /**
     * Get <code>public.getallmarkersinmarkergroupsbyid</code> as a table.
     */
    public static Getallmarkersinmarkergroupsbyid GETALLMARKERSINMARKERGROUPSBYID(String _Idlist) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallmarkersinmarkergroupsbyid.GETALLMARKERSINMARKERGROUPSBYID.call(_Idlist);
    }

    /**
     * Get <code>public.getallmarkersinmarkergroupsbyid</code> as a table.
     */
    public static Getallmarkersinmarkergroupsbyid GETALLMARKERSINMARKERGROUPSBYID(Field<String> _Idlist) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallmarkersinmarkergroupsbyid.GETALLMARKERSINMARKERGROUPSBYID.call(_Idlist);
    }

    /**
     * The table <code>public.getallprojectmetadatabydataset</code>.
     */
    public final Getallprojectmetadatabydataset GETALLPROJECTMETADATABYDATASET = org.gobiiproject.datatimescope.db.generated.tables.Getallprojectmetadatabydataset.GETALLPROJECTMETADATABYDATASET;

    /**
     * Call <code>public.getallprojectmetadatabydataset</code>.
     */
    public static Result<GetallprojectmetadatabydatasetRecord> GETALLPROJECTMETADATABYDATASET(Configuration configuration, Integer datasetid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getallprojectmetadatabydataset.GETALLPROJECTMETADATABYDATASET.call(datasetid)).fetch();
    }

    /**
     * Get <code>public.getallprojectmetadatabydataset</code> as a table.
     */
    public static Getallprojectmetadatabydataset GETALLPROJECTMETADATABYDATASET(Integer datasetid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallprojectmetadatabydataset.GETALLPROJECTMETADATABYDATASET.call(datasetid);
    }

    /**
     * Get <code>public.getallprojectmetadatabydataset</code> as a table.
     */
    public static Getallprojectmetadatabydataset GETALLPROJECTMETADATABYDATASET(Field<Integer> datasetid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallprojectmetadatabydataset.GETALLPROJECTMETADATABYDATASET.call(datasetid);
    }

    /**
     * The table <code>public.getallpropertiesofdnarun</code>.
     */
    public final Getallpropertiesofdnarun GETALLPROPERTIESOFDNARUN = org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofdnarun.GETALLPROPERTIESOFDNARUN;

    /**
     * Call <code>public.getallpropertiesofdnarun</code>.
     */
    public static Result<GetallpropertiesofdnarunRecord> GETALLPROPERTIESOFDNARUN(Configuration configuration, Integer id) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofdnarun.GETALLPROPERTIESOFDNARUN.call(id)).fetch();
    }

    /**
     * Get <code>public.getallpropertiesofdnarun</code> as a table.
     */
    public static Getallpropertiesofdnarun GETALLPROPERTIESOFDNARUN(Integer id) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofdnarun.GETALLPROPERTIESOFDNARUN.call(id);
    }

    /**
     * Get <code>public.getallpropertiesofdnarun</code> as a table.
     */
    public static Getallpropertiesofdnarun GETALLPROPERTIESOFDNARUN(Field<Integer> id) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofdnarun.GETALLPROPERTIESOFDNARUN.call(id);
    }

    /**
     * The table <code>public.getallpropertiesofdnasample</code>.
     */
    public final Getallpropertiesofdnasample GETALLPROPERTIESOFDNASAMPLE = org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofdnasample.GETALLPROPERTIESOFDNASAMPLE;

    /**
     * Call <code>public.getallpropertiesofdnasample</code>.
     */
    public static Result<GetallpropertiesofdnasampleRecord> GETALLPROPERTIESOFDNASAMPLE(Configuration configuration, Integer id) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofdnasample.GETALLPROPERTIESOFDNASAMPLE.call(id)).fetch();
    }

    /**
     * Get <code>public.getallpropertiesofdnasample</code> as a table.
     */
    public static Getallpropertiesofdnasample GETALLPROPERTIESOFDNASAMPLE(Integer id) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofdnasample.GETALLPROPERTIESOFDNASAMPLE.call(id);
    }

    /**
     * Get <code>public.getallpropertiesofdnasample</code> as a table.
     */
    public static Getallpropertiesofdnasample GETALLPROPERTIESOFDNASAMPLE(Field<Integer> id) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofdnasample.GETALLPROPERTIESOFDNASAMPLE.call(id);
    }

    /**
     * The table <code>public.getallpropertiesofgermplasm</code>.
     */
    public final Getallpropertiesofgermplasm GETALLPROPERTIESOFGERMPLASM = org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofgermplasm.GETALLPROPERTIESOFGERMPLASM;

    /**
     * Call <code>public.getallpropertiesofgermplasm</code>.
     */
    public static Result<GetallpropertiesofgermplasmRecord> GETALLPROPERTIESOFGERMPLASM(Configuration configuration, Integer id) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofgermplasm.GETALLPROPERTIESOFGERMPLASM.call(id)).fetch();
    }

    /**
     * Get <code>public.getallpropertiesofgermplasm</code> as a table.
     */
    public static Getallpropertiesofgermplasm GETALLPROPERTIESOFGERMPLASM(Integer id) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofgermplasm.GETALLPROPERTIESOFGERMPLASM.call(id);
    }

    /**
     * Get <code>public.getallpropertiesofgermplasm</code> as a table.
     */
    public static Getallpropertiesofgermplasm GETALLPROPERTIESOFGERMPLASM(Field<Integer> id) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofgermplasm.GETALLPROPERTIESOFGERMPLASM.call(id);
    }

    /**
     * The table <code>public.getallpropertiesofmapset</code>.
     */
    public final Getallpropertiesofmapset GETALLPROPERTIESOFMAPSET = org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofmapset.GETALLPROPERTIESOFMAPSET;

    /**
     * Call <code>public.getallpropertiesofmapset</code>.
     */
    public static Result<GetallpropertiesofmapsetRecord> GETALLPROPERTIESOFMAPSET(Configuration configuration, Integer id) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofmapset.GETALLPROPERTIESOFMAPSET.call(id)).fetch();
    }

    /**
     * Get <code>public.getallpropertiesofmapset</code> as a table.
     */
    public static Getallpropertiesofmapset GETALLPROPERTIESOFMAPSET(Integer id) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofmapset.GETALLPROPERTIESOFMAPSET.call(id);
    }

    /**
     * Get <code>public.getallpropertiesofmapset</code> as a table.
     */
    public static Getallpropertiesofmapset GETALLPROPERTIESOFMAPSET(Field<Integer> id) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofmapset.GETALLPROPERTIESOFMAPSET.call(id);
    }

    /**
     * The table <code>public.getallpropertiesofmarker</code>.
     */
    public final Getallpropertiesofmarker GETALLPROPERTIESOFMARKER = org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofmarker.GETALLPROPERTIESOFMARKER;

    /**
     * Call <code>public.getallpropertiesofmarker</code>.
     */
    public static Result<GetallpropertiesofmarkerRecord> GETALLPROPERTIESOFMARKER(Configuration configuration, Integer id) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofmarker.GETALLPROPERTIESOFMARKER.call(id)).fetch();
    }

    /**
     * Get <code>public.getallpropertiesofmarker</code> as a table.
     */
    public static Getallpropertiesofmarker GETALLPROPERTIESOFMARKER(Integer id) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofmarker.GETALLPROPERTIESOFMARKER.call(id);
    }

    /**
     * Get <code>public.getallpropertiesofmarker</code> as a table.
     */
    public static Getallpropertiesofmarker GETALLPROPERTIESOFMARKER(Field<Integer> id) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofmarker.GETALLPROPERTIESOFMARKER.call(id);
    }

    /**
     * The table <code>public.getallpropertiesofplatform</code>.
     */
    public final Getallpropertiesofplatform GETALLPROPERTIESOFPLATFORM = org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofplatform.GETALLPROPERTIESOFPLATFORM;

    /**
     * Call <code>public.getallpropertiesofplatform</code>.
     */
    public static Result<GetallpropertiesofplatformRecord> GETALLPROPERTIESOFPLATFORM(Configuration configuration, Integer id) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofplatform.GETALLPROPERTIESOFPLATFORM.call(id)).fetch();
    }

    /**
     * Get <code>public.getallpropertiesofplatform</code> as a table.
     */
    public static Getallpropertiesofplatform GETALLPROPERTIESOFPLATFORM(Integer id) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofplatform.GETALLPROPERTIESOFPLATFORM.call(id);
    }

    /**
     * Get <code>public.getallpropertiesofplatform</code> as a table.
     */
    public static Getallpropertiesofplatform GETALLPROPERTIESOFPLATFORM(Field<Integer> id) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofplatform.GETALLPROPERTIESOFPLATFORM.call(id);
    }

    /**
     * The table <code>public.getallpropertiesofproject</code>.
     */
    public final Getallpropertiesofproject GETALLPROPERTIESOFPROJECT = org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofproject.GETALLPROPERTIESOFPROJECT;

    /**
     * Call <code>public.getallpropertiesofproject</code>.
     */
    public static Result<GetallpropertiesofprojectRecord> GETALLPROPERTIESOFPROJECT(Configuration configuration, Integer projectid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofproject.GETALLPROPERTIESOFPROJECT.call(projectid)).fetch();
    }

    /**
     * Get <code>public.getallpropertiesofproject</code> as a table.
     */
    public static Getallpropertiesofproject GETALLPROPERTIESOFPROJECT(Integer projectid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofproject.GETALLPROPERTIESOFPROJECT.call(projectid);
    }

    /**
     * Get <code>public.getallpropertiesofproject</code> as a table.
     */
    public static Getallpropertiesofproject GETALLPROPERTIESOFPROJECT(Field<Integer> projectid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofproject.GETALLPROPERTIESOFPROJECT.call(projectid);
    }

    /**
     * The table <code>public.getallpropertiesofprotocol</code>.
     */
    public final Getallpropertiesofprotocol GETALLPROPERTIESOFPROTOCOL = org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofprotocol.GETALLPROPERTIESOFPROTOCOL;

    /**
     * Call <code>public.getallpropertiesofprotocol</code>.
     */
    public static Result<GetallpropertiesofprotocolRecord> GETALLPROPERTIESOFPROTOCOL(Configuration configuration, Integer protocolid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofprotocol.GETALLPROPERTIESOFPROTOCOL.call(protocolid)).fetch();
    }

    /**
     * Get <code>public.getallpropertiesofprotocol</code> as a table.
     */
    public static Getallpropertiesofprotocol GETALLPROPERTIESOFPROTOCOL(Integer protocolid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofprotocol.GETALLPROPERTIESOFPROTOCOL.call(protocolid);
    }

    /**
     * Get <code>public.getallpropertiesofprotocol</code> as a table.
     */
    public static Getallpropertiesofprotocol GETALLPROPERTIESOFPROTOCOL(Field<Integer> protocolid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallpropertiesofprotocol.GETALLPROPERTIESOFPROTOCOL.call(protocolid);
    }

    /**
     * The table <code>public.getallsamplemetadatabydataset</code>.
     */
    public final Getallsamplemetadatabydataset GETALLSAMPLEMETADATABYDATASET = org.gobiiproject.datatimescope.db.generated.tables.Getallsamplemetadatabydataset.GETALLSAMPLEMETADATABYDATASET;

    /**
     * Call <code>public.getallsamplemetadatabydataset</code>.
     */
    public static Result<GetallsamplemetadatabydatasetRecord> GETALLSAMPLEMETADATABYDATASET(Configuration configuration, Integer datasetid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getallsamplemetadatabydataset.GETALLSAMPLEMETADATABYDATASET.call(datasetid)).fetch();
    }

    /**
     * Get <code>public.getallsamplemetadatabydataset</code> as a table.
     */
    public static Getallsamplemetadatabydataset GETALLSAMPLEMETADATABYDATASET(Integer datasetid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallsamplemetadatabydataset.GETALLSAMPLEMETADATABYDATASET.call(datasetid);
    }

    /**
     * Get <code>public.getallsamplemetadatabydataset</code> as a table.
     */
    public static Getallsamplemetadatabydataset GETALLSAMPLEMETADATABYDATASET(Field<Integer> datasetid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getallsamplemetadatabydataset.GETALLSAMPLEMETADATABYDATASET.call(datasetid);
    }

    /**
     * The table <code>public.getcvtermsbycvgroupname</code>.
     */
    public final Getcvtermsbycvgroupname GETCVTERMSBYCVGROUPNAME = org.gobiiproject.datatimescope.db.generated.tables.Getcvtermsbycvgroupname.GETCVTERMSBYCVGROUPNAME;

    /**
     * Call <code>public.getcvtermsbycvgroupname</code>.
     */
    public static Result<GetcvtermsbycvgroupnameRecord> GETCVTERMSBYCVGROUPNAME(Configuration configuration, String cvgroupname) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getcvtermsbycvgroupname.GETCVTERMSBYCVGROUPNAME.call(cvgroupname)).fetch();
    }

    /**
     * Get <code>public.getcvtermsbycvgroupname</code> as a table.
     */
    public static Getcvtermsbycvgroupname GETCVTERMSBYCVGROUPNAME(String cvgroupname) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getcvtermsbycvgroupname.GETCVTERMSBYCVGROUPNAME.call(cvgroupname);
    }

    /**
     * Get <code>public.getcvtermsbycvgroupname</code> as a table.
     */
    public static Getcvtermsbycvgroupname GETCVTERMSBYCVGROUPNAME(Field<String> cvgroupname) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getcvtermsbycvgroupname.GETCVTERMSBYCVGROUPNAME.call(cvgroupname);
    }

    /**
     * The table <code>public.getdnarunidsbydnasamplenames</code>.
     */
    public final Getdnarunidsbydnasamplenames GETDNARUNIDSBYDNASAMPLENAMES = org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbydnasamplenames.GETDNARUNIDSBYDNASAMPLENAMES;

    /**
     * Call <code>public.getdnarunidsbydnasamplenames</code>.
     */
    public static Result<GetdnarunidsbydnasamplenamesRecord> GETDNARUNIDSBYDNASAMPLENAMES(Configuration configuration, String dnasamplenames) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbydnasamplenames.GETDNARUNIDSBYDNASAMPLENAMES.call(dnasamplenames)).fetch();
    }

    /**
     * Get <code>public.getdnarunidsbydnasamplenames</code> as a table.
     */
    public static Getdnarunidsbydnasamplenames GETDNARUNIDSBYDNASAMPLENAMES(String dnasamplenames) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbydnasamplenames.GETDNARUNIDSBYDNASAMPLENAMES.call(dnasamplenames);
    }

    /**
     * Get <code>public.getdnarunidsbydnasamplenames</code> as a table.
     */
    public static Getdnarunidsbydnasamplenames GETDNARUNIDSBYDNASAMPLENAMES(Field<String> dnasamplenames) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbydnasamplenames.GETDNARUNIDSBYDNASAMPLENAMES.call(dnasamplenames);
    }

    /**
     * The table <code>public.getdnarunidsbydnasamplenamesandpi</code>.
     */
    public final Getdnarunidsbydnasamplenamesandpi GETDNARUNIDSBYDNASAMPLENAMESANDPI = org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbydnasamplenamesandpi.GETDNARUNIDSBYDNASAMPLENAMESANDPI;

    /**
     * Call <code>public.getdnarunidsbydnasamplenamesandpi</code>.
     */
    public static Result<GetdnarunidsbydnasamplenamesandpiRecord> GETDNARUNIDSBYDNASAMPLENAMESANDPI(Configuration configuration, String dnasamplenames, Integer piid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbydnasamplenamesandpi.GETDNARUNIDSBYDNASAMPLENAMESANDPI.call(dnasamplenames, piid)).fetch();
    }

    /**
     * Get <code>public.getdnarunidsbydnasamplenamesandpi</code> as a table.
     */
    public static Getdnarunidsbydnasamplenamesandpi GETDNARUNIDSBYDNASAMPLENAMESANDPI(String dnasamplenames, Integer piid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbydnasamplenamesandpi.GETDNARUNIDSBYDNASAMPLENAMESANDPI.call(dnasamplenames, piid);
    }

    /**
     * Get <code>public.getdnarunidsbydnasamplenamesandpi</code> as a table.
     */
    public static Getdnarunidsbydnasamplenamesandpi GETDNARUNIDSBYDNASAMPLENAMESANDPI(Field<String> dnasamplenames, Field<Integer> piid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbydnasamplenamesandpi.GETDNARUNIDSBYDNASAMPLENAMESANDPI.call(dnasamplenames, piid);
    }

    /**
     * The table <code>public.getdnarunidsbydnasamplenamesandproject</code>.
     */
    public final Getdnarunidsbydnasamplenamesandproject GETDNARUNIDSBYDNASAMPLENAMESANDPROJECT = org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbydnasamplenamesandproject.GETDNARUNIDSBYDNASAMPLENAMESANDPROJECT;

    /**
     * Call <code>public.getdnarunidsbydnasamplenamesandproject</code>.
     */
    public static Result<GetdnarunidsbydnasamplenamesandprojectRecord> GETDNARUNIDSBYDNASAMPLENAMESANDPROJECT(Configuration configuration, String dnasamplenames, Integer projectid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbydnasamplenamesandproject.GETDNARUNIDSBYDNASAMPLENAMESANDPROJECT.call(dnasamplenames, projectid)).fetch();
    }

    /**
     * Get <code>public.getdnarunidsbydnasamplenamesandproject</code> as a table.
     */
    public static Getdnarunidsbydnasamplenamesandproject GETDNARUNIDSBYDNASAMPLENAMESANDPROJECT(String dnasamplenames, Integer projectid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbydnasamplenamesandproject.GETDNARUNIDSBYDNASAMPLENAMESANDPROJECT.call(dnasamplenames, projectid);
    }

    /**
     * Get <code>public.getdnarunidsbydnasamplenamesandproject</code> as a table.
     */
    public static Getdnarunidsbydnasamplenamesandproject GETDNARUNIDSBYDNASAMPLENAMESANDPROJECT(Field<String> dnasamplenames, Field<Integer> projectid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbydnasamplenamesandproject.GETDNARUNIDSBYDNASAMPLENAMESANDPROJECT.call(dnasamplenames, projectid);
    }

    /**
     * The table <code>public.getdnarunidsbyexternalcodes</code>.
     */
    public final Getdnarunidsbyexternalcodes GETDNARUNIDSBYEXTERNALCODES = org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbyexternalcodes.GETDNARUNIDSBYEXTERNALCODES;

    /**
     * Call <code>public.getdnarunidsbyexternalcodes</code>.
     */
    public static Result<GetdnarunidsbyexternalcodesRecord> GETDNARUNIDSBYEXTERNALCODES(Configuration configuration, String externalcodes) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbyexternalcodes.GETDNARUNIDSBYEXTERNALCODES.call(externalcodes)).fetch();
    }

    /**
     * Get <code>public.getdnarunidsbyexternalcodes</code> as a table.
     */
    public static Getdnarunidsbyexternalcodes GETDNARUNIDSBYEXTERNALCODES(String externalcodes) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbyexternalcodes.GETDNARUNIDSBYEXTERNALCODES.call(externalcodes);
    }

    /**
     * Get <code>public.getdnarunidsbyexternalcodes</code> as a table.
     */
    public static Getdnarunidsbyexternalcodes GETDNARUNIDSBYEXTERNALCODES(Field<String> externalcodes) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbyexternalcodes.GETDNARUNIDSBYEXTERNALCODES.call(externalcodes);
    }

    /**
     * The table <code>public.getdnarunidsbyexternalcodesandpi</code>.
     */
    public final Getdnarunidsbyexternalcodesandpi GETDNARUNIDSBYEXTERNALCODESANDPI = org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbyexternalcodesandpi.GETDNARUNIDSBYEXTERNALCODESANDPI;

    /**
     * Call <code>public.getdnarunidsbyexternalcodesandpi</code>.
     */
    public static Result<GetdnarunidsbyexternalcodesandpiRecord> GETDNARUNIDSBYEXTERNALCODESANDPI(Configuration configuration, String externalcodes, Integer piid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbyexternalcodesandpi.GETDNARUNIDSBYEXTERNALCODESANDPI.call(externalcodes, piid)).fetch();
    }

    /**
     * Get <code>public.getdnarunidsbyexternalcodesandpi</code> as a table.
     */
    public static Getdnarunidsbyexternalcodesandpi GETDNARUNIDSBYEXTERNALCODESANDPI(String externalcodes, Integer piid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbyexternalcodesandpi.GETDNARUNIDSBYEXTERNALCODESANDPI.call(externalcodes, piid);
    }

    /**
     * Get <code>public.getdnarunidsbyexternalcodesandpi</code> as a table.
     */
    public static Getdnarunidsbyexternalcodesandpi GETDNARUNIDSBYEXTERNALCODESANDPI(Field<String> externalcodes, Field<Integer> piid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbyexternalcodesandpi.GETDNARUNIDSBYEXTERNALCODESANDPI.call(externalcodes, piid);
    }

    /**
     * The table <code>public.getdnarunidsbyexternalcodesandproject</code>.
     */
    public final Getdnarunidsbyexternalcodesandproject GETDNARUNIDSBYEXTERNALCODESANDPROJECT = org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbyexternalcodesandproject.GETDNARUNIDSBYEXTERNALCODESANDPROJECT;

    /**
     * Call <code>public.getdnarunidsbyexternalcodesandproject</code>.
     */
    public static Result<GetdnarunidsbyexternalcodesandprojectRecord> GETDNARUNIDSBYEXTERNALCODESANDPROJECT(Configuration configuration, String externalcodes, Integer projectid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbyexternalcodesandproject.GETDNARUNIDSBYEXTERNALCODESANDPROJECT.call(externalcodes, projectid)).fetch();
    }

    /**
     * Get <code>public.getdnarunidsbyexternalcodesandproject</code> as a table.
     */
    public static Getdnarunidsbyexternalcodesandproject GETDNARUNIDSBYEXTERNALCODESANDPROJECT(String externalcodes, Integer projectid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbyexternalcodesandproject.GETDNARUNIDSBYEXTERNALCODESANDPROJECT.call(externalcodes, projectid);
    }

    /**
     * Get <code>public.getdnarunidsbyexternalcodesandproject</code> as a table.
     */
    public static Getdnarunidsbyexternalcodesandproject GETDNARUNIDSBYEXTERNALCODESANDPROJECT(Field<String> externalcodes, Field<Integer> projectid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbyexternalcodesandproject.GETDNARUNIDSBYEXTERNALCODESANDPROJECT.call(externalcodes, projectid);
    }

    /**
     * The table <code>public.getdnarunidsbygermplasmnames</code>.
     */
    public final Getdnarunidsbygermplasmnames GETDNARUNIDSBYGERMPLASMNAMES = org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbygermplasmnames.GETDNARUNIDSBYGERMPLASMNAMES;

    /**
     * Call <code>public.getdnarunidsbygermplasmnames</code>.
     */
    public static Result<GetdnarunidsbygermplasmnamesRecord> GETDNARUNIDSBYGERMPLASMNAMES(Configuration configuration, String germplasmnames) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbygermplasmnames.GETDNARUNIDSBYGERMPLASMNAMES.call(germplasmnames)).fetch();
    }

    /**
     * Get <code>public.getdnarunidsbygermplasmnames</code> as a table.
     */
    public static Getdnarunidsbygermplasmnames GETDNARUNIDSBYGERMPLASMNAMES(String germplasmnames) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbygermplasmnames.GETDNARUNIDSBYGERMPLASMNAMES.call(germplasmnames);
    }

    /**
     * Get <code>public.getdnarunidsbygermplasmnames</code> as a table.
     */
    public static Getdnarunidsbygermplasmnames GETDNARUNIDSBYGERMPLASMNAMES(Field<String> germplasmnames) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbygermplasmnames.GETDNARUNIDSBYGERMPLASMNAMES.call(germplasmnames);
    }

    /**
     * The table <code>public.getdnarunidsbygermplasmnamesandpi</code>.
     */
    public final Getdnarunidsbygermplasmnamesandpi GETDNARUNIDSBYGERMPLASMNAMESANDPI = org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbygermplasmnamesandpi.GETDNARUNIDSBYGERMPLASMNAMESANDPI;

    /**
     * Call <code>public.getdnarunidsbygermplasmnamesandpi</code>.
     */
    public static Result<GetdnarunidsbygermplasmnamesandpiRecord> GETDNARUNIDSBYGERMPLASMNAMESANDPI(Configuration configuration, String germplasmnames, Integer piid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbygermplasmnamesandpi.GETDNARUNIDSBYGERMPLASMNAMESANDPI.call(germplasmnames, piid)).fetch();
    }

    /**
     * Get <code>public.getdnarunidsbygermplasmnamesandpi</code> as a table.
     */
    public static Getdnarunidsbygermplasmnamesandpi GETDNARUNIDSBYGERMPLASMNAMESANDPI(String germplasmnames, Integer piid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbygermplasmnamesandpi.GETDNARUNIDSBYGERMPLASMNAMESANDPI.call(germplasmnames, piid);
    }

    /**
     * Get <code>public.getdnarunidsbygermplasmnamesandpi</code> as a table.
     */
    public static Getdnarunidsbygermplasmnamesandpi GETDNARUNIDSBYGERMPLASMNAMESANDPI(Field<String> germplasmnames, Field<Integer> piid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbygermplasmnamesandpi.GETDNARUNIDSBYGERMPLASMNAMESANDPI.call(germplasmnames, piid);
    }

    /**
     * The table <code>public.getdnarunidsbygermplasmnamesandproject</code>.
     */
    public final Getdnarunidsbygermplasmnamesandproject GETDNARUNIDSBYGERMPLASMNAMESANDPROJECT = org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbygermplasmnamesandproject.GETDNARUNIDSBYGERMPLASMNAMESANDPROJECT;

    /**
     * Call <code>public.getdnarunidsbygermplasmnamesandproject</code>.
     */
    public static Result<GetdnarunidsbygermplasmnamesandprojectRecord> GETDNARUNIDSBYGERMPLASMNAMESANDPROJECT(Configuration configuration, String germplasmnames, Integer projectid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbygermplasmnamesandproject.GETDNARUNIDSBYGERMPLASMNAMESANDPROJECT.call(germplasmnames, projectid)).fetch();
    }

    /**
     * Get <code>public.getdnarunidsbygermplasmnamesandproject</code> as a table.
     */
    public static Getdnarunidsbygermplasmnamesandproject GETDNARUNIDSBYGERMPLASMNAMESANDPROJECT(String germplasmnames, Integer projectid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbygermplasmnamesandproject.GETDNARUNIDSBYGERMPLASMNAMESANDPROJECT.call(germplasmnames, projectid);
    }

    /**
     * Get <code>public.getdnarunidsbygermplasmnamesandproject</code> as a table.
     */
    public static Getdnarunidsbygermplasmnamesandproject GETDNARUNIDSBYGERMPLASMNAMESANDPROJECT(Field<String> germplasmnames, Field<Integer> projectid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbygermplasmnamesandproject.GETDNARUNIDSBYGERMPLASMNAMESANDPROJECT.call(germplasmnames, projectid);
    }

    /**
     * The table <code>public.getdnarunidsbypi</code>.
     */
    public final Getdnarunidsbypi GETDNARUNIDSBYPI = org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbypi.GETDNARUNIDSBYPI;

    /**
     * Call <code>public.getdnarunidsbypi</code>.
     */
    public static Result<GetdnarunidsbypiRecord> GETDNARUNIDSBYPI(Configuration configuration, Integer piid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbypi.GETDNARUNIDSBYPI.call(piid)).fetch();
    }

    /**
     * Get <code>public.getdnarunidsbypi</code> as a table.
     */
    public static Getdnarunidsbypi GETDNARUNIDSBYPI(Integer piid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbypi.GETDNARUNIDSBYPI.call(piid);
    }

    /**
     * Get <code>public.getdnarunidsbypi</code> as a table.
     */
    public static Getdnarunidsbypi GETDNARUNIDSBYPI(Field<Integer> piid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbypi.GETDNARUNIDSBYPI.call(piid);
    }

    /**
     * The table <code>public.getdnarunidsbyproject</code>.
     */
    public final Getdnarunidsbyproject GETDNARUNIDSBYPROJECT = org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbyproject.GETDNARUNIDSBYPROJECT;

    /**
     * Call <code>public.getdnarunidsbyproject</code>.
     */
    public static Result<GetdnarunidsbyprojectRecord> GETDNARUNIDSBYPROJECT(Configuration configuration, Integer projectid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbyproject.GETDNARUNIDSBYPROJECT.call(projectid)).fetch();
    }

    /**
     * Get <code>public.getdnarunidsbyproject</code> as a table.
     */
    public static Getdnarunidsbyproject GETDNARUNIDSBYPROJECT(Integer projectid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbyproject.GETDNARUNIDSBYPROJECT.call(projectid);
    }

    /**
     * Get <code>public.getdnarunidsbyproject</code> as a table.
     */
    public static Getdnarunidsbyproject GETDNARUNIDSBYPROJECT(Field<Integer> projectid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunidsbyproject.GETDNARUNIDSBYPROJECT.call(projectid);
    }

    /**
     * The table <code>public.getdnarunnamesbydataset</code>.
     */
    public final Getdnarunnamesbydataset GETDNARUNNAMESBYDATASET = org.gobiiproject.datatimescope.db.generated.tables.Getdnarunnamesbydataset.GETDNARUNNAMESBYDATASET;

    /**
     * Call <code>public.getdnarunnamesbydataset</code>.
     */
    public static Result<GetdnarunnamesbydatasetRecord> GETDNARUNNAMESBYDATASET(Configuration configuration, Integer datasetid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getdnarunnamesbydataset.GETDNARUNNAMESBYDATASET.call(datasetid)).fetch();
    }

    /**
     * Get <code>public.getdnarunnamesbydataset</code> as a table.
     */
    public static Getdnarunnamesbydataset GETDNARUNNAMESBYDATASET(Integer datasetid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunnamesbydataset.GETDNARUNNAMESBYDATASET.call(datasetid);
    }

    /**
     * Get <code>public.getdnarunnamesbydataset</code> as a table.
     */
    public static Getdnarunnamesbydataset GETDNARUNNAMESBYDATASET(Field<Integer> datasetid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunnamesbydataset.GETDNARUNNAMESBYDATASET.call(datasetid);
    }

    /**
     * The table <code>public.getdnarunpropertybyname</code>.
     */
    public final Getdnarunpropertybyname GETDNARUNPROPERTYBYNAME = org.gobiiproject.datatimescope.db.generated.tables.Getdnarunpropertybyname.GETDNARUNPROPERTYBYNAME;

    /**
     * Call <code>public.getdnarunpropertybyname</code>.
     */
    public static Result<GetdnarunpropertybynameRecord> GETDNARUNPROPERTYBYNAME(Configuration configuration, Integer id, String propertyname) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getdnarunpropertybyname.GETDNARUNPROPERTYBYNAME.call(id, propertyname)).fetch();
    }

    /**
     * Get <code>public.getdnarunpropertybyname</code> as a table.
     */
    public static Getdnarunpropertybyname GETDNARUNPROPERTYBYNAME(Integer id, String propertyname) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunpropertybyname.GETDNARUNPROPERTYBYNAME.call(id, propertyname);
    }

    /**
     * Get <code>public.getdnarunpropertybyname</code> as a table.
     */
    public static Getdnarunpropertybyname GETDNARUNPROPERTYBYNAME(Field<Integer> id, Field<String> propertyname) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnarunpropertybyname.GETDNARUNPROPERTYBYNAME.call(id, propertyname);
    }

    /**
     * The table <code>public.getdnasamplepropertybyname</code>.
     */
    public final Getdnasamplepropertybyname GETDNASAMPLEPROPERTYBYNAME = org.gobiiproject.datatimescope.db.generated.tables.Getdnasamplepropertybyname.GETDNASAMPLEPROPERTYBYNAME;

    /**
     * Call <code>public.getdnasamplepropertybyname</code>.
     */
    public static Result<GetdnasamplepropertybynameRecord> GETDNASAMPLEPROPERTYBYNAME(Configuration configuration, Integer id, String propertyname) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getdnasamplepropertybyname.GETDNASAMPLEPROPERTYBYNAME.call(id, propertyname)).fetch();
    }

    /**
     * Get <code>public.getdnasamplepropertybyname</code> as a table.
     */
    public static Getdnasamplepropertybyname GETDNASAMPLEPROPERTYBYNAME(Integer id, String propertyname) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnasamplepropertybyname.GETDNASAMPLEPROPERTYBYNAME.call(id, propertyname);
    }

    /**
     * Get <code>public.getdnasamplepropertybyname</code> as a table.
     */
    public static Getdnasamplepropertybyname GETDNASAMPLEPROPERTYBYNAME(Field<Integer> id, Field<String> propertyname) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getdnasamplepropertybyname.GETDNASAMPLEPROPERTYBYNAME.call(id, propertyname);
    }

    /**
     * The table <code>public.getexperimentnamesbyprojectid</code>.
     */
    public final Getexperimentnamesbyprojectid GETEXPERIMENTNAMESBYPROJECTID = org.gobiiproject.datatimescope.db.generated.tables.Getexperimentnamesbyprojectid.GETEXPERIMENTNAMESBYPROJECTID;

    /**
     * Call <code>public.getexperimentnamesbyprojectid</code>.
     */
    public static Result<GetexperimentnamesbyprojectidRecord> GETEXPERIMENTNAMESBYPROJECTID(Configuration configuration, Integer projectid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getexperimentnamesbyprojectid.GETEXPERIMENTNAMESBYPROJECTID.call(projectid)).fetch();
    }

    /**
     * Get <code>public.getexperimentnamesbyprojectid</code> as a table.
     */
    public static Getexperimentnamesbyprojectid GETEXPERIMENTNAMESBYPROJECTID(Integer projectid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getexperimentnamesbyprojectid.GETEXPERIMENTNAMESBYPROJECTID.call(projectid);
    }

    /**
     * Get <code>public.getexperimentnamesbyprojectid</code> as a table.
     */
    public static Getexperimentnamesbyprojectid GETEXPERIMENTNAMESBYPROJECTID(Field<Integer> projectid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getexperimentnamesbyprojectid.GETEXPERIMENTNAMESBYPROJECTID.call(projectid);
    }

    /**
     * The table <code>public.getexperimentsbyprojectid</code>.
     */
    public final Getexperimentsbyprojectid GETEXPERIMENTSBYPROJECTID = org.gobiiproject.datatimescope.db.generated.tables.Getexperimentsbyprojectid.GETEXPERIMENTSBYPROJECTID;

    /**
     * Call <code>public.getexperimentsbyprojectid</code>.
     */
    public static Result<GetexperimentsbyprojectidRecord> GETEXPERIMENTSBYPROJECTID(Configuration configuration, Integer projectid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getexperimentsbyprojectid.GETEXPERIMENTSBYPROJECTID.call(projectid)).fetch();
    }

    /**
     * Get <code>public.getexperimentsbyprojectid</code> as a table.
     */
    public static Getexperimentsbyprojectid GETEXPERIMENTSBYPROJECTID(Integer projectid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getexperimentsbyprojectid.GETEXPERIMENTSBYPROJECTID.call(projectid);
    }

    /**
     * Get <code>public.getexperimentsbyprojectid</code> as a table.
     */
    public static Getexperimentsbyprojectid GETEXPERIMENTSBYPROJECTID(Field<Integer> projectid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getexperimentsbyprojectid.GETEXPERIMENTSBYPROJECTID.call(projectid);
    }

    /**
     * The table <code>public.getgermplasmpropertybyname</code>.
     */
    public final Getgermplasmpropertybyname GETGERMPLASMPROPERTYBYNAME = org.gobiiproject.datatimescope.db.generated.tables.Getgermplasmpropertybyname.GETGERMPLASMPROPERTYBYNAME;

    /**
     * Call <code>public.getgermplasmpropertybyname</code>.
     */
    public static Result<GetgermplasmpropertybynameRecord> GETGERMPLASMPROPERTYBYNAME(Configuration configuration, Integer id, String propertyname) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getgermplasmpropertybyname.GETGERMPLASMPROPERTYBYNAME.call(id, propertyname)).fetch();
    }

    /**
     * Get <code>public.getgermplasmpropertybyname</code> as a table.
     */
    public static Getgermplasmpropertybyname GETGERMPLASMPROPERTYBYNAME(Integer id, String propertyname) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getgermplasmpropertybyname.GETGERMPLASMPROPERTYBYNAME.call(id, propertyname);
    }

    /**
     * Get <code>public.getgermplasmpropertybyname</code> as a table.
     */
    public static Getgermplasmpropertybyname GETGERMPLASMPROPERTYBYNAME(Field<Integer> id, Field<String> propertyname) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getgermplasmpropertybyname.GETGERMPLASMPROPERTYBYNAME.call(id, propertyname);
    }

    /**
     * The table <code>public.getmanifestbyexperimentid</code>.
     */
    public final Getmanifestbyexperimentid GETMANIFESTBYEXPERIMENTID = org.gobiiproject.datatimescope.db.generated.tables.Getmanifestbyexperimentid.GETMANIFESTBYEXPERIMENTID;

    /**
     * Call <code>public.getmanifestbyexperimentid</code>.
     */
    public static Result<GetmanifestbyexperimentidRecord> GETMANIFESTBYEXPERIMENTID(Configuration configuration, Integer experimentid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getmanifestbyexperimentid.GETMANIFESTBYEXPERIMENTID.call(experimentid)).fetch();
    }

    /**
     * Get <code>public.getmanifestbyexperimentid</code> as a table.
     */
    public static Getmanifestbyexperimentid GETMANIFESTBYEXPERIMENTID(Integer experimentid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmanifestbyexperimentid.GETMANIFESTBYEXPERIMENTID.call(experimentid);
    }

    /**
     * Get <code>public.getmanifestbyexperimentid</code> as a table.
     */
    public static Getmanifestbyexperimentid GETMANIFESTBYEXPERIMENTID(Field<Integer> experimentid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmanifestbyexperimentid.GETMANIFESTBYEXPERIMENTID.call(experimentid);
    }

    /**
     * The table <code>public.getmapsetpropertybyname</code>.
     */
    public final Getmapsetpropertybyname GETMAPSETPROPERTYBYNAME = org.gobiiproject.datatimescope.db.generated.tables.Getmapsetpropertybyname.GETMAPSETPROPERTYBYNAME;

    /**
     * Call <code>public.getmapsetpropertybyname</code>.
     */
    public static Result<GetmapsetpropertybynameRecord> GETMAPSETPROPERTYBYNAME(Configuration configuration, Integer id, String propertyname) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getmapsetpropertybyname.GETMAPSETPROPERTYBYNAME.call(id, propertyname)).fetch();
    }

    /**
     * Get <code>public.getmapsetpropertybyname</code> as a table.
     */
    public static Getmapsetpropertybyname GETMAPSETPROPERTYBYNAME(Integer id, String propertyname) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmapsetpropertybyname.GETMAPSETPROPERTYBYNAME.call(id, propertyname);
    }

    /**
     * Get <code>public.getmapsetpropertybyname</code> as a table.
     */
    public static Getmapsetpropertybyname GETMAPSETPROPERTYBYNAME(Field<Integer> id, Field<String> propertyname) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmapsetpropertybyname.GETMAPSETPROPERTYBYNAME.call(id, propertyname);
    }

    /**
     * The table <code>public.getmarkerallmapsetinfobydataset</code>.
     */
    public final Getmarkerallmapsetinfobydataset GETMARKERALLMAPSETINFOBYDATASET = org.gobiiproject.datatimescope.db.generated.tables.Getmarkerallmapsetinfobydataset.GETMARKERALLMAPSETINFOBYDATASET;

    /**
     * Call <code>public.getmarkerallmapsetinfobydataset</code>.
     */
    public static Result<GetmarkerallmapsetinfobydatasetRecord> GETMARKERALLMAPSETINFOBYDATASET(Configuration configuration, Integer dsid, Integer mapid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getmarkerallmapsetinfobydataset.GETMARKERALLMAPSETINFOBYDATASET.call(dsid, mapid)).fetch();
    }

    /**
     * Get <code>public.getmarkerallmapsetinfobydataset</code> as a table.
     */
    public static Getmarkerallmapsetinfobydataset GETMARKERALLMAPSETINFOBYDATASET(Integer dsid, Integer mapid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkerallmapsetinfobydataset.GETMARKERALLMAPSETINFOBYDATASET.call(dsid, mapid);
    }

    /**
     * Get <code>public.getmarkerallmapsetinfobydataset</code> as a table.
     */
    public static Getmarkerallmapsetinfobydataset GETMARKERALLMAPSETINFOBYDATASET(Field<Integer> dsid, Field<Integer> mapid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkerallmapsetinfobydataset.GETMARKERALLMAPSETINFOBYDATASET.call(dsid, mapid);
    }

    /**
     * The table <code>public.getmarkerids</code>.
     */
    public final Getmarkerids GETMARKERIDS = org.gobiiproject.datatimescope.db.generated.tables.Getmarkerids.GETMARKERIDS;

    /**
     * Call <code>public.getmarkerids</code>.
     */
    public static Result<GetmarkeridsRecord> GETMARKERIDS(Configuration configuration, String markernames, String platformlist) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getmarkerids.GETMARKERIDS.call(markernames, platformlist)).fetch();
    }

    /**
     * Get <code>public.getmarkerids</code> as a table.
     */
    public static Getmarkerids GETMARKERIDS(String markernames, String platformlist) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkerids.GETMARKERIDS.call(markernames, platformlist);
    }

    /**
     * Get <code>public.getmarkerids</code> as a table.
     */
    public static Getmarkerids GETMARKERIDS(Field<String> markernames, Field<String> platformlist) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkerids.GETMARKERIDS.call(markernames, platformlist);
    }

    /**
     * The table <code>public.getmarkeridsbymarkernames</code>.
     */
    public final Getmarkeridsbymarkernames GETMARKERIDSBYMARKERNAMES = org.gobiiproject.datatimescope.db.generated.tables.Getmarkeridsbymarkernames.GETMARKERIDSBYMARKERNAMES;

    /**
     * Call <code>public.getmarkeridsbymarkernames</code>.
     */
    public static Result<GetmarkeridsbymarkernamesRecord> GETMARKERIDSBYMARKERNAMES(Configuration configuration, String markernames) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getmarkeridsbymarkernames.GETMARKERIDSBYMARKERNAMES.call(markernames)).fetch();
    }

    /**
     * Get <code>public.getmarkeridsbymarkernames</code> as a table.
     */
    public static Getmarkeridsbymarkernames GETMARKERIDSBYMARKERNAMES(String markernames) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkeridsbymarkernames.GETMARKERIDSBYMARKERNAMES.call(markernames);
    }

    /**
     * Get <code>public.getmarkeridsbymarkernames</code> as a table.
     */
    public static Getmarkeridsbymarkernames GETMARKERIDSBYMARKERNAMES(Field<String> markernames) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkeridsbymarkernames.GETMARKERIDSBYMARKERNAMES.call(markernames);
    }

    /**
     * The table <code>public.getmarkeridsbymarkernamesandplatformlist</code>.
     */
    public final Getmarkeridsbymarkernamesandplatformlist GETMARKERIDSBYMARKERNAMESANDPLATFORMLIST = org.gobiiproject.datatimescope.db.generated.tables.Getmarkeridsbymarkernamesandplatformlist.GETMARKERIDSBYMARKERNAMESANDPLATFORMLIST;

    /**
     * Call <code>public.getmarkeridsbymarkernamesandplatformlist</code>.
     */
    public static Result<GetmarkeridsbymarkernamesandplatformlistRecord> GETMARKERIDSBYMARKERNAMESANDPLATFORMLIST(Configuration configuration, String markernames, String platformlist) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getmarkeridsbymarkernamesandplatformlist.GETMARKERIDSBYMARKERNAMESANDPLATFORMLIST.call(markernames, platformlist)).fetch();
    }

    /**
     * Get <code>public.getmarkeridsbymarkernamesandplatformlist</code> as a table.
     */
    public static Getmarkeridsbymarkernamesandplatformlist GETMARKERIDSBYMARKERNAMESANDPLATFORMLIST(String markernames, String platformlist) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkeridsbymarkernamesandplatformlist.GETMARKERIDSBYMARKERNAMESANDPLATFORMLIST.call(markernames, platformlist);
    }

    /**
     * Get <code>public.getmarkeridsbymarkernamesandplatformlist</code> as a table.
     */
    public static Getmarkeridsbymarkernamesandplatformlist GETMARKERIDSBYMARKERNAMESANDPLATFORMLIST(Field<String> markernames, Field<String> platformlist) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkeridsbymarkernamesandplatformlist.GETMARKERIDSBYMARKERNAMESANDPLATFORMLIST.call(markernames, platformlist);
    }

    /**
     * The table <code>public.getmarkeridsbyplatformlist</code>.
     */
    public final Getmarkeridsbyplatformlist GETMARKERIDSBYPLATFORMLIST = org.gobiiproject.datatimescope.db.generated.tables.Getmarkeridsbyplatformlist.GETMARKERIDSBYPLATFORMLIST;

    /**
     * Call <code>public.getmarkeridsbyplatformlist</code>.
     */
    public static Result<GetmarkeridsbyplatformlistRecord> GETMARKERIDSBYPLATFORMLIST(Configuration configuration, String platformlist) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getmarkeridsbyplatformlist.GETMARKERIDSBYPLATFORMLIST.call(platformlist)).fetch();
    }

    /**
     * Get <code>public.getmarkeridsbyplatformlist</code> as a table.
     */
    public static Getmarkeridsbyplatformlist GETMARKERIDSBYPLATFORMLIST(String platformlist) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkeridsbyplatformlist.GETMARKERIDSBYPLATFORMLIST.call(platformlist);
    }

    /**
     * Get <code>public.getmarkeridsbyplatformlist</code> as a table.
     */
    public static Getmarkeridsbyplatformlist GETMARKERIDSBYPLATFORMLIST(Field<String> platformlist) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkeridsbyplatformlist.GETMARKERIDSBYPLATFORMLIST.call(platformlist);
    }

    /**
     * The table <code>public.getmarkeridsbysamplesanddatasettype</code>.
     */
    public final Getmarkeridsbysamplesanddatasettype GETMARKERIDSBYSAMPLESANDDATASETTYPE = org.gobiiproject.datatimescope.db.generated.tables.Getmarkeridsbysamplesanddatasettype.GETMARKERIDSBYSAMPLESANDDATASETTYPE;

    /**
     * Call <code>public.getmarkeridsbysamplesanddatasettype</code>.
     */
    public static Result<GetmarkeridsbysamplesanddatasettypeRecord> GETMARKERIDSBYSAMPLESANDDATASETTYPE(Configuration configuration, String samplelist, Integer datasettypeid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getmarkeridsbysamplesanddatasettype.GETMARKERIDSBYSAMPLESANDDATASETTYPE.call(samplelist, datasettypeid)).fetch();
    }

    /**
     * Get <code>public.getmarkeridsbysamplesanddatasettype</code> as a table.
     */
    public static Getmarkeridsbysamplesanddatasettype GETMARKERIDSBYSAMPLESANDDATASETTYPE(String samplelist, Integer datasettypeid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkeridsbysamplesanddatasettype.GETMARKERIDSBYSAMPLESANDDATASETTYPE.call(samplelist, datasettypeid);
    }

    /**
     * Get <code>public.getmarkeridsbysamplesanddatasettype</code> as a table.
     */
    public static Getmarkeridsbysamplesanddatasettype GETMARKERIDSBYSAMPLESANDDATASETTYPE(Field<String> samplelist, Field<Integer> datasettypeid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkeridsbysamplesanddatasettype.GETMARKERIDSBYSAMPLESANDDATASETTYPE.call(samplelist, datasettypeid);
    }

    /**
     * The table <code>public.getmarkeridsbysamplesplatformsanddatasettype</code>.
     */
    public final Getmarkeridsbysamplesplatformsanddatasettype GETMARKERIDSBYSAMPLESPLATFORMSANDDATASETTYPE = org.gobiiproject.datatimescope.db.generated.tables.Getmarkeridsbysamplesplatformsanddatasettype.GETMARKERIDSBYSAMPLESPLATFORMSANDDATASETTYPE;

    /**
     * Call <code>public.getmarkeridsbysamplesplatformsanddatasettype</code>.
     */
    public static Result<GetmarkeridsbysamplesplatformsanddatasettypeRecord> GETMARKERIDSBYSAMPLESPLATFORMSANDDATASETTYPE(Configuration configuration, String samplelist, String platformlist, Integer datasettypeid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getmarkeridsbysamplesplatformsanddatasettype.GETMARKERIDSBYSAMPLESPLATFORMSANDDATASETTYPE.call(samplelist, platformlist, datasettypeid)).fetch();
    }

    /**
     * Get <code>public.getmarkeridsbysamplesplatformsanddatasettype</code> as a table.
     */
    public static Getmarkeridsbysamplesplatformsanddatasettype GETMARKERIDSBYSAMPLESPLATFORMSANDDATASETTYPE(String samplelist, String platformlist, Integer datasettypeid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkeridsbysamplesplatformsanddatasettype.GETMARKERIDSBYSAMPLESPLATFORMSANDDATASETTYPE.call(samplelist, platformlist, datasettypeid);
    }

    /**
     * Get <code>public.getmarkeridsbysamplesplatformsanddatasettype</code> as a table.
     */
    public static Getmarkeridsbysamplesplatformsanddatasettype GETMARKERIDSBYSAMPLESPLATFORMSANDDATASETTYPE(Field<String> samplelist, Field<String> platformlist, Field<Integer> datasettypeid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkeridsbysamplesplatformsanddatasettype.GETMARKERIDSBYSAMPLESPLATFORMSANDDATASETTYPE.call(samplelist, platformlist, datasettypeid);
    }

    /**
     * The table <code>public.getmarkerinmarkergroupbyname</code>.
     */
    public final Getmarkerinmarkergroupbyname GETMARKERINMARKERGROUPBYNAME = org.gobiiproject.datatimescope.db.generated.tables.Getmarkerinmarkergroupbyname.GETMARKERINMARKERGROUPBYNAME;

    /**
     * Call <code>public.getmarkerinmarkergroupbyname</code>.
     */
    public static Result<GetmarkerinmarkergroupbynameRecord> GETMARKERINMARKERGROUPBYNAME(Configuration configuration, Integer id, String markername) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getmarkerinmarkergroupbyname.GETMARKERINMARKERGROUPBYNAME.call(id, markername)).fetch();
    }

    /**
     * Get <code>public.getmarkerinmarkergroupbyname</code> as a table.
     */
    public static Getmarkerinmarkergroupbyname GETMARKERINMARKERGROUPBYNAME(Integer id, String markername) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkerinmarkergroupbyname.GETMARKERINMARKERGROUPBYNAME.call(id, markername);
    }

    /**
     * Get <code>public.getmarkerinmarkergroupbyname</code> as a table.
     */
    public static Getmarkerinmarkergroupbyname GETMARKERINMARKERGROUPBYNAME(Field<Integer> id, Field<String> markername) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkerinmarkergroupbyname.GETMARKERINMARKERGROUPBYNAME.call(id, markername);
    }

    /**
     * The table <code>public.getmarkermapsetinfobydataset</code>.
     */
    public final Getmarkermapsetinfobydataset GETMARKERMAPSETINFOBYDATASET = org.gobiiproject.datatimescope.db.generated.tables.Getmarkermapsetinfobydataset.GETMARKERMAPSETINFOBYDATASET;

    /**
     * Call <code>public.getmarkermapsetinfobydataset</code>.
     */
    public static Result<GetmarkermapsetinfobydatasetRecord> GETMARKERMAPSETINFOBYDATASET(Configuration configuration, Integer dsid, Integer mapid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getmarkermapsetinfobydataset.GETMARKERMAPSETINFOBYDATASET.call(dsid, mapid)).fetch();
    }

    /**
     * Get <code>public.getmarkermapsetinfobydataset</code> as a table.
     */
    public static Getmarkermapsetinfobydataset GETMARKERMAPSETINFOBYDATASET(Integer dsid, Integer mapid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkermapsetinfobydataset.GETMARKERMAPSETINFOBYDATASET.call(dsid, mapid);
    }

    /**
     * Get <code>public.getmarkermapsetinfobydataset</code> as a table.
     */
    public static Getmarkermapsetinfobydataset GETMARKERMAPSETINFOBYDATASET(Field<Integer> dsid, Field<Integer> mapid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkermapsetinfobydataset.GETMARKERMAPSETINFOBYDATASET.call(dsid, mapid);
    }

    /**
     * The table <code>public.getmarkermapsetinfobymarkerlist</code>.
     */
    public final Getmarkermapsetinfobymarkerlist GETMARKERMAPSETINFOBYMARKERLIST = org.gobiiproject.datatimescope.db.generated.tables.Getmarkermapsetinfobymarkerlist.GETMARKERMAPSETINFOBYMARKERLIST;

    /**
     * Call <code>public.getmarkermapsetinfobymarkerlist</code>.
     */
    public static Result<GetmarkermapsetinfobymarkerlistRecord> GETMARKERMAPSETINFOBYMARKERLIST(Configuration configuration, String markerlist) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getmarkermapsetinfobymarkerlist.GETMARKERMAPSETINFOBYMARKERLIST.call(markerlist)).fetch();
    }

    /**
     * Get <code>public.getmarkermapsetinfobymarkerlist</code> as a table.
     */
    public static Getmarkermapsetinfobymarkerlist GETMARKERMAPSETINFOBYMARKERLIST(String markerlist) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkermapsetinfobymarkerlist.GETMARKERMAPSETINFOBYMARKERLIST.call(markerlist);
    }

    /**
     * Get <code>public.getmarkermapsetinfobymarkerlist</code> as a table.
     */
    public static Getmarkermapsetinfobymarkerlist GETMARKERMAPSETINFOBYMARKERLIST(Field<String> markerlist) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkermapsetinfobymarkerlist.GETMARKERMAPSETINFOBYMARKERLIST.call(markerlist);
    }

    /**
     * The table <code>public.getmarkernamesbydataset</code>.
     */
    public final Getmarkernamesbydataset GETMARKERNAMESBYDATASET = org.gobiiproject.datatimescope.db.generated.tables.Getmarkernamesbydataset.GETMARKERNAMESBYDATASET;

    /**
     * Call <code>public.getmarkernamesbydataset</code>.
     */
    public static Result<GetmarkernamesbydatasetRecord> GETMARKERNAMESBYDATASET(Configuration configuration, Integer datasetid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getmarkernamesbydataset.GETMARKERNAMESBYDATASET.call(datasetid)).fetch();
    }

    /**
     * Get <code>public.getmarkernamesbydataset</code> as a table.
     */
    public static Getmarkernamesbydataset GETMARKERNAMESBYDATASET(Integer datasetid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkernamesbydataset.GETMARKERNAMESBYDATASET.call(datasetid);
    }

    /**
     * Get <code>public.getmarkernamesbydataset</code> as a table.
     */
    public static Getmarkernamesbydataset GETMARKERNAMESBYDATASET(Field<Integer> datasetid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkernamesbydataset.GETMARKERNAMESBYDATASET.call(datasetid);
    }

    /**
     * The table <code>public.getmarkernamesbydatasetandmap</code>.
     */
    public final Getmarkernamesbydatasetandmap GETMARKERNAMESBYDATASETANDMAP = org.gobiiproject.datatimescope.db.generated.tables.Getmarkernamesbydatasetandmap.GETMARKERNAMESBYDATASETANDMAP;

    /**
     * Call <code>public.getmarkernamesbydatasetandmap</code>.
     */
    public static Result<GetmarkernamesbydatasetandmapRecord> GETMARKERNAMESBYDATASETANDMAP(Configuration configuration, Integer datasetid, Integer mapid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getmarkernamesbydatasetandmap.GETMARKERNAMESBYDATASETANDMAP.call(datasetid, mapid)).fetch();
    }

    /**
     * Get <code>public.getmarkernamesbydatasetandmap</code> as a table.
     */
    public static Getmarkernamesbydatasetandmap GETMARKERNAMESBYDATASETANDMAP(Integer datasetid, Integer mapid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkernamesbydatasetandmap.GETMARKERNAMESBYDATASETANDMAP.call(datasetid, mapid);
    }

    /**
     * Get <code>public.getmarkernamesbydatasetandmap</code> as a table.
     */
    public static Getmarkernamesbydatasetandmap GETMARKERNAMESBYDATASETANDMAP(Field<Integer> datasetid, Field<Integer> mapid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkernamesbydatasetandmap.GETMARKERNAMESBYDATASETANDMAP.call(datasetid, mapid);
    }

    /**
     * The table <code>public.getmarkerpropertybyname</code>.
     */
    public final Getmarkerpropertybyname GETMARKERPROPERTYBYNAME = org.gobiiproject.datatimescope.db.generated.tables.Getmarkerpropertybyname.GETMARKERPROPERTYBYNAME;

    /**
     * Call <code>public.getmarkerpropertybyname</code>.
     */
    public static Result<GetmarkerpropertybynameRecord> GETMARKERPROPERTYBYNAME(Configuration configuration, Integer id, String propertyname) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getmarkerpropertybyname.GETMARKERPROPERTYBYNAME.call(id, propertyname)).fetch();
    }

    /**
     * Get <code>public.getmarkerpropertybyname</code> as a table.
     */
    public static Getmarkerpropertybyname GETMARKERPROPERTYBYNAME(Integer id, String propertyname) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkerpropertybyname.GETMARKERPROPERTYBYNAME.call(id, propertyname);
    }

    /**
     * Get <code>public.getmarkerpropertybyname</code> as a table.
     */
    public static Getmarkerpropertybyname GETMARKERPROPERTYBYNAME(Field<Integer> id, Field<String> propertyname) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkerpropertybyname.GETMARKERPROPERTYBYNAME.call(id, propertyname);
    }

    /**
     * The table <code>public.getmarkerqcmetadatabydataset</code>.
     */
    public final Getmarkerqcmetadatabydataset GETMARKERQCMETADATABYDATASET = org.gobiiproject.datatimescope.db.generated.tables.Getmarkerqcmetadatabydataset.GETMARKERQCMETADATABYDATASET;

    /**
     * Call <code>public.getmarkerqcmetadatabydataset</code>.
     */
    public static Result<GetmarkerqcmetadatabydatasetRecord> GETMARKERQCMETADATABYDATASET(Configuration configuration, Integer datasetid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getmarkerqcmetadatabydataset.GETMARKERQCMETADATABYDATASET.call(datasetid)).fetch();
    }

    /**
     * Get <code>public.getmarkerqcmetadatabydataset</code> as a table.
     */
    public static Getmarkerqcmetadatabydataset GETMARKERQCMETADATABYDATASET(Integer datasetid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkerqcmetadatabydataset.GETMARKERQCMETADATABYDATASET.call(datasetid);
    }

    /**
     * Get <code>public.getmarkerqcmetadatabydataset</code> as a table.
     */
    public static Getmarkerqcmetadatabydataset GETMARKERQCMETADATABYDATASET(Field<Integer> datasetid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkerqcmetadatabydataset.GETMARKERQCMETADATABYDATASET.call(datasetid);
    }

    /**
     * The table <code>public.getmarkerqcmetadatabymarkerlist</code>.
     */
    public final Getmarkerqcmetadatabymarkerlist GETMARKERQCMETADATABYMARKERLIST = org.gobiiproject.datatimescope.db.generated.tables.Getmarkerqcmetadatabymarkerlist.GETMARKERQCMETADATABYMARKERLIST;

    /**
     * Call <code>public.getmarkerqcmetadatabymarkerlist</code>.
     */
    public static Result<GetmarkerqcmetadatabymarkerlistRecord> GETMARKERQCMETADATABYMARKERLIST(Configuration configuration, String markerlist) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getmarkerqcmetadatabymarkerlist.GETMARKERQCMETADATABYMARKERLIST.call(markerlist)).fetch();
    }

    /**
     * Get <code>public.getmarkerqcmetadatabymarkerlist</code> as a table.
     */
    public static Getmarkerqcmetadatabymarkerlist GETMARKERQCMETADATABYMARKERLIST(String markerlist) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkerqcmetadatabymarkerlist.GETMARKERQCMETADATABYMARKERLIST.call(markerlist);
    }

    /**
     * Get <code>public.getmarkerqcmetadatabymarkerlist</code> as a table.
     */
    public static Getmarkerqcmetadatabymarkerlist GETMARKERQCMETADATABYMARKERLIST(Field<String> markerlist) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmarkerqcmetadatabymarkerlist.GETMARKERQCMETADATABYMARKERLIST.call(markerlist);
    }

    /**
     * The table <code>public.getmatrixposofmarkers</code>.
     */
    public final Getmatrixposofmarkers GETMATRIXPOSOFMARKERS = org.gobiiproject.datatimescope.db.generated.tables.Getmatrixposofmarkers.GETMATRIXPOSOFMARKERS;

    /**
     * Call <code>public.getmatrixposofmarkers</code>.
     */
    public static Result<GetmatrixposofmarkersRecord> GETMATRIXPOSOFMARKERS(Configuration configuration, String markerlist, Integer datasettypeid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getmatrixposofmarkers.GETMATRIXPOSOFMARKERS.call(markerlist, datasettypeid)).fetch();
    }

    /**
     * Get <code>public.getmatrixposofmarkers</code> as a table.
     */
    public static Getmatrixposofmarkers GETMATRIXPOSOFMARKERS(String markerlist, Integer datasettypeid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmatrixposofmarkers.GETMATRIXPOSOFMARKERS.call(markerlist, datasettypeid);
    }

    /**
     * Get <code>public.getmatrixposofmarkers</code> as a table.
     */
    public static Getmatrixposofmarkers GETMATRIXPOSOFMARKERS(Field<String> markerlist, Field<Integer> datasettypeid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmatrixposofmarkers.GETMATRIXPOSOFMARKERS.call(markerlist, datasettypeid);
    }

    /**
     * The table <code>public.getmatrixposofsamples</code>.
     */
    public final Getmatrixposofsamples GETMATRIXPOSOFSAMPLES = org.gobiiproject.datatimescope.db.generated.tables.Getmatrixposofsamples.GETMATRIXPOSOFSAMPLES;

    /**
     * Call <code>public.getmatrixposofsamples</code>.
     */
    public static Result<GetmatrixposofsamplesRecord> GETMATRIXPOSOFSAMPLES(Configuration configuration, String samplelist, Integer datasettypeid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getmatrixposofsamples.GETMATRIXPOSOFSAMPLES.call(samplelist, datasettypeid)).fetch();
    }

    /**
     * Get <code>public.getmatrixposofsamples</code> as a table.
     */
    public static Getmatrixposofsamples GETMATRIXPOSOFSAMPLES(String samplelist, Integer datasettypeid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmatrixposofsamples.GETMATRIXPOSOFSAMPLES.call(samplelist, datasettypeid);
    }

    /**
     * Get <code>public.getmatrixposofsamples</code> as a table.
     */
    public static Getmatrixposofsamples GETMATRIXPOSOFSAMPLES(Field<String> samplelist, Field<Integer> datasettypeid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getmatrixposofsamples.GETMATRIXPOSOFSAMPLES.call(samplelist, datasettypeid);
    }

    /**
     * The table <code>public.getminimalmarkermetadatabydataset</code>.
     */
    public final Getminimalmarkermetadatabydataset GETMINIMALMARKERMETADATABYDATASET = org.gobiiproject.datatimescope.db.generated.tables.Getminimalmarkermetadatabydataset.GETMINIMALMARKERMETADATABYDATASET;

    /**
     * Call <code>public.getminimalmarkermetadatabydataset</code>.
     */
    public static Result<GetminimalmarkermetadatabydatasetRecord> GETMINIMALMARKERMETADATABYDATASET(Configuration configuration, Integer datasetid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getminimalmarkermetadatabydataset.GETMINIMALMARKERMETADATABYDATASET.call(datasetid)).fetch();
    }

    /**
     * Get <code>public.getminimalmarkermetadatabydataset</code> as a table.
     */
    public static Getminimalmarkermetadatabydataset GETMINIMALMARKERMETADATABYDATASET(Integer datasetid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getminimalmarkermetadatabydataset.GETMINIMALMARKERMETADATABYDATASET.call(datasetid);
    }

    /**
     * Get <code>public.getminimalmarkermetadatabydataset</code> as a table.
     */
    public static Getminimalmarkermetadatabydataset GETMINIMALMARKERMETADATABYDATASET(Field<Integer> datasetid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getminimalmarkermetadatabydataset.GETMINIMALMARKERMETADATABYDATASET.call(datasetid);
    }

    /**
     * The table <code>public.getminimalmarkermetadatabydatasetandmap</code>.
     */
    public final Getminimalmarkermetadatabydatasetandmap GETMINIMALMARKERMETADATABYDATASETANDMAP = org.gobiiproject.datatimescope.db.generated.tables.Getminimalmarkermetadatabydatasetandmap.GETMINIMALMARKERMETADATABYDATASETANDMAP;

    /**
     * Call <code>public.getminimalmarkermetadatabydatasetandmap</code>.
     */
    public static Result<GetminimalmarkermetadatabydatasetandmapRecord> GETMINIMALMARKERMETADATABYDATASETANDMAP(Configuration configuration, Integer datasetid, Integer mapid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getminimalmarkermetadatabydatasetandmap.GETMINIMALMARKERMETADATABYDATASETANDMAP.call(datasetid, mapid)).fetch();
    }

    /**
     * Get <code>public.getminimalmarkermetadatabydatasetandmap</code> as a table.
     */
    public static Getminimalmarkermetadatabydatasetandmap GETMINIMALMARKERMETADATABYDATASETANDMAP(Integer datasetid, Integer mapid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getminimalmarkermetadatabydatasetandmap.GETMINIMALMARKERMETADATABYDATASETANDMAP.call(datasetid, mapid);
    }

    /**
     * Get <code>public.getminimalmarkermetadatabydatasetandmap</code> as a table.
     */
    public static Getminimalmarkermetadatabydatasetandmap GETMINIMALMARKERMETADATABYDATASETANDMAP(Field<Integer> datasetid, Field<Integer> mapid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getminimalmarkermetadatabydatasetandmap.GETMINIMALMARKERMETADATABYDATASETANDMAP.call(datasetid, mapid);
    }

    /**
     * The table <code>public.getminimalsamplemetadatabydataset</code>.
     */
    public final Getminimalsamplemetadatabydataset GETMINIMALSAMPLEMETADATABYDATASET = org.gobiiproject.datatimescope.db.generated.tables.Getminimalsamplemetadatabydataset.GETMINIMALSAMPLEMETADATABYDATASET;

    /**
     * Call <code>public.getminimalsamplemetadatabydataset</code>.
     */
    public static Result<GetminimalsamplemetadatabydatasetRecord> GETMINIMALSAMPLEMETADATABYDATASET(Configuration configuration, Integer datasetid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getminimalsamplemetadatabydataset.GETMINIMALSAMPLEMETADATABYDATASET.call(datasetid)).fetch();
    }

    /**
     * Get <code>public.getminimalsamplemetadatabydataset</code> as a table.
     */
    public static Getminimalsamplemetadatabydataset GETMINIMALSAMPLEMETADATABYDATASET(Integer datasetid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getminimalsamplemetadatabydataset.GETMINIMALSAMPLEMETADATABYDATASET.call(datasetid);
    }

    /**
     * Get <code>public.getminimalsamplemetadatabydataset</code> as a table.
     */
    public static Getminimalsamplemetadatabydataset GETMINIMALSAMPLEMETADATABYDATASET(Field<Integer> datasetid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getminimalsamplemetadatabydataset.GETMINIMALSAMPLEMETADATABYDATASET.call(datasetid);
    }

    /**
     * The table <code>public.getplatformpropertybyname</code>.
     */
    public final Getplatformpropertybyname GETPLATFORMPROPERTYBYNAME = org.gobiiproject.datatimescope.db.generated.tables.Getplatformpropertybyname.GETPLATFORMPROPERTYBYNAME;

    /**
     * Call <code>public.getplatformpropertybyname</code>.
     */
    public static Result<GetplatformpropertybynameRecord> GETPLATFORMPROPERTYBYNAME(Configuration configuration, Integer id, String propertyname) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getplatformpropertybyname.GETPLATFORMPROPERTYBYNAME.call(id, propertyname)).fetch();
    }

    /**
     * Get <code>public.getplatformpropertybyname</code> as a table.
     */
    public static Getplatformpropertybyname GETPLATFORMPROPERTYBYNAME(Integer id, String propertyname) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getplatformpropertybyname.GETPLATFORMPROPERTYBYNAME.call(id, propertyname);
    }

    /**
     * Get <code>public.getplatformpropertybyname</code> as a table.
     */
    public static Getplatformpropertybyname GETPLATFORMPROPERTYBYNAME(Field<Integer> id, Field<String> propertyname) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getplatformpropertybyname.GETPLATFORMPROPERTYBYNAME.call(id, propertyname);
    }

    /**
     * The table <code>public.getprojectpropertybyname</code>.
     */
    public final Getprojectpropertybyname GETPROJECTPROPERTYBYNAME = org.gobiiproject.datatimescope.db.generated.tables.Getprojectpropertybyname.GETPROJECTPROPERTYBYNAME;

    /**
     * Call <code>public.getprojectpropertybyname</code>.
     */
    public static Result<GetprojectpropertybynameRecord> GETPROJECTPROPERTYBYNAME(Configuration configuration, Integer projectid, String propertyname) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getprojectpropertybyname.GETPROJECTPROPERTYBYNAME.call(projectid, propertyname)).fetch();
    }

    /**
     * Get <code>public.getprojectpropertybyname</code> as a table.
     */
    public static Getprojectpropertybyname GETPROJECTPROPERTYBYNAME(Integer projectid, String propertyname) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getprojectpropertybyname.GETPROJECTPROPERTYBYNAME.call(projectid, propertyname);
    }

    /**
     * Get <code>public.getprojectpropertybyname</code> as a table.
     */
    public static Getprojectpropertybyname GETPROJECTPROPERTYBYNAME(Field<Integer> projectid, Field<String> propertyname) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getprojectpropertybyname.GETPROJECTPROPERTYBYNAME.call(projectid, propertyname);
    }

    /**
     * The table <code>public.getprotocolpropertybyname</code>.
     */
    public final Getprotocolpropertybyname GETPROTOCOLPROPERTYBYNAME = org.gobiiproject.datatimescope.db.generated.tables.Getprotocolpropertybyname.GETPROTOCOLPROPERTYBYNAME;

    /**
     * Call <code>public.getprotocolpropertybyname</code>.
     */
    public static Result<GetprotocolpropertybynameRecord> GETPROTOCOLPROPERTYBYNAME(Configuration configuration, Integer protocolid, String propertyname) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getprotocolpropertybyname.GETPROTOCOLPROPERTYBYNAME.call(protocolid, propertyname)).fetch();
    }

    /**
     * Get <code>public.getprotocolpropertybyname</code> as a table.
     */
    public static Getprotocolpropertybyname GETPROTOCOLPROPERTYBYNAME(Integer protocolid, String propertyname) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getprotocolpropertybyname.GETPROTOCOLPROPERTYBYNAME.call(protocolid, propertyname);
    }

    /**
     * Get <code>public.getprotocolpropertybyname</code> as a table.
     */
    public static Getprotocolpropertybyname GETPROTOCOLPROPERTYBYNAME(Field<Integer> protocolid, Field<String> propertyname) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getprotocolpropertybyname.GETPROTOCOLPROPERTYBYNAME.call(protocolid, propertyname);
    }

    /**
     * The table <code>public.getrolesofcontact</code>.
     */
    public final Getrolesofcontact GETROLESOFCONTACT = org.gobiiproject.datatimescope.db.generated.tables.Getrolesofcontact.GETROLESOFCONTACT;

    /**
     * Call <code>public.getrolesofcontact</code>.
     */
    public static Result<GetrolesofcontactRecord> GETROLESOFCONTACT(Configuration configuration, Integer contactid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getrolesofcontact.GETROLESOFCONTACT.call(contactid)).fetch();
    }

    /**
     * Get <code>public.getrolesofcontact</code> as a table.
     */
    public static Getrolesofcontact GETROLESOFCONTACT(Integer contactid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getrolesofcontact.GETROLESOFCONTACT.call(contactid);
    }

    /**
     * Get <code>public.getrolesofcontact</code> as a table.
     */
    public static Getrolesofcontact GETROLESOFCONTACT(Field<Integer> contactid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getrolesofcontact.GETROLESOFCONTACT.call(contactid);
    }

    /**
     * The table <code>public.getsampleqcmetadatabydataset</code>.
     */
    public final Getsampleqcmetadatabydataset GETSAMPLEQCMETADATABYDATASET = org.gobiiproject.datatimescope.db.generated.tables.Getsampleqcmetadatabydataset.GETSAMPLEQCMETADATABYDATASET;

    /**
     * Call <code>public.getsampleqcmetadatabydataset</code>.
     */
    public static Result<GetsampleqcmetadatabydatasetRecord> GETSAMPLEQCMETADATABYDATASET(Configuration configuration, Integer datasetid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getsampleqcmetadatabydataset.GETSAMPLEQCMETADATABYDATASET.call(datasetid)).fetch();
    }

    /**
     * Get <code>public.getsampleqcmetadatabydataset</code> as a table.
     */
    public static Getsampleqcmetadatabydataset GETSAMPLEQCMETADATABYDATASET(Integer datasetid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getsampleqcmetadatabydataset.GETSAMPLEQCMETADATABYDATASET.call(datasetid);
    }

    /**
     * Get <code>public.getsampleqcmetadatabydataset</code> as a table.
     */
    public static Getsampleqcmetadatabydataset GETSAMPLEQCMETADATABYDATASET(Field<Integer> datasetid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getsampleqcmetadatabydataset.GETSAMPLEQCMETADATABYDATASET.call(datasetid);
    }

    /**
     * The table <code>public.getsampleqcmetadatabymarkerlist</code>.
     */
    public final Getsampleqcmetadatabymarkerlist GETSAMPLEQCMETADATABYMARKERLIST = org.gobiiproject.datatimescope.db.generated.tables.Getsampleqcmetadatabymarkerlist.GETSAMPLEQCMETADATABYMARKERLIST;

    /**
     * Call <code>public.getsampleqcmetadatabymarkerlist</code>.
     */
    public static Result<GetsampleqcmetadatabymarkerlistRecord> GETSAMPLEQCMETADATABYMARKERLIST(Configuration configuration, String markerlist) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getsampleqcmetadatabymarkerlist.GETSAMPLEQCMETADATABYMARKERLIST.call(markerlist)).fetch();
    }

    /**
     * Get <code>public.getsampleqcmetadatabymarkerlist</code> as a table.
     */
    public static Getsampleqcmetadatabymarkerlist GETSAMPLEQCMETADATABYMARKERLIST(String markerlist) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getsampleqcmetadatabymarkerlist.GETSAMPLEQCMETADATABYMARKERLIST.call(markerlist);
    }

    /**
     * Get <code>public.getsampleqcmetadatabymarkerlist</code> as a table.
     */
    public static Getsampleqcmetadatabymarkerlist GETSAMPLEQCMETADATABYMARKERLIST(Field<String> markerlist) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getsampleqcmetadatabymarkerlist.GETSAMPLEQCMETADATABYMARKERLIST.call(markerlist);
    }

    /**
     * The table <code>public.getsampleqcmetadatabymarkerlistx</code>.
     */
    public final Getsampleqcmetadatabymarkerlistx GETSAMPLEQCMETADATABYMARKERLISTX = org.gobiiproject.datatimescope.db.generated.tables.Getsampleqcmetadatabymarkerlistx.GETSAMPLEQCMETADATABYMARKERLISTX;

    /**
     * Call <code>public.getsampleqcmetadatabymarkerlistx</code>.
     */
    public static Result<GetsampleqcmetadatabymarkerlistxRecord> GETSAMPLEQCMETADATABYMARKERLISTX(Configuration configuration, String markerlist) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getsampleqcmetadatabymarkerlistx.GETSAMPLEQCMETADATABYMARKERLISTX.call(markerlist)).fetch();
    }

    /**
     * Get <code>public.getsampleqcmetadatabymarkerlistx</code> as a table.
     */
    public static Getsampleqcmetadatabymarkerlistx GETSAMPLEQCMETADATABYMARKERLISTX(String markerlist) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getsampleqcmetadatabymarkerlistx.GETSAMPLEQCMETADATABYMARKERLISTX.call(markerlist);
    }

    /**
     * Get <code>public.getsampleqcmetadatabymarkerlistx</code> as a table.
     */
    public static Getsampleqcmetadatabymarkerlistx GETSAMPLEQCMETADATABYMARKERLISTX(Field<String> markerlist) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getsampleqcmetadatabymarkerlistx.GETSAMPLEQCMETADATABYMARKERLISTX.call(markerlist);
    }

    /**
     * The table <code>public.getsampleqcmetadatabysamplelist</code>.
     */
    public final Getsampleqcmetadatabysamplelist GETSAMPLEQCMETADATABYSAMPLELIST = org.gobiiproject.datatimescope.db.generated.tables.Getsampleqcmetadatabysamplelist.GETSAMPLEQCMETADATABYSAMPLELIST;

    /**
     * Call <code>public.getsampleqcmetadatabysamplelist</code>.
     */
    public static Result<GetsampleqcmetadatabysamplelistRecord> GETSAMPLEQCMETADATABYSAMPLELIST(Configuration configuration, String samplelist, Integer datasettypeid) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.Getsampleqcmetadatabysamplelist.GETSAMPLEQCMETADATABYSAMPLELIST.call(samplelist, datasettypeid)).fetch();
    }

    /**
     * Get <code>public.getsampleqcmetadatabysamplelist</code> as a table.
     */
    public static Getsampleqcmetadatabysamplelist GETSAMPLEQCMETADATABYSAMPLELIST(String samplelist, Integer datasettypeid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getsampleqcmetadatabysamplelist.GETSAMPLEQCMETADATABYSAMPLELIST.call(samplelist, datasettypeid);
    }

    /**
     * Get <code>public.getsampleqcmetadatabysamplelist</code> as a table.
     */
    public static Getsampleqcmetadatabysamplelist GETSAMPLEQCMETADATABYSAMPLELIST(Field<String> samplelist, Field<Integer> datasettypeid) {
        return org.gobiiproject.datatimescope.db.generated.tables.Getsampleqcmetadatabysamplelist.GETSAMPLEQCMETADATABYSAMPLELIST.call(samplelist, datasettypeid);
    }

    /**
     * This table is different from other prop tables/columns in the database, as it is for storing information about the database itself, like schema version
     */
    public final Gobiiprop GOBIIPROP = org.gobiiproject.datatimescope.db.generated.tables.Gobiiprop.GOBIIPROP;

    /**
     * This table keeps track of all the data loading and extraction jobs.
     */
    public final Job JOB = org.gobiiproject.datatimescope.db.generated.tables.Job.JOB;

    /**
     * This table will contain different linkage groups, ie. Chromosome 1, Chromosome 2, etc. along with their respective start and stop boundaries.
     */
    public final LinkageGroup LINKAGE_GROUP = org.gobiiproject.datatimescope.db.generated.tables.LinkageGroup.LINKAGE_GROUP;

    /**
     * The table <code>public.manifest</code>.
     */
    public final Manifest MANIFEST = org.gobiiproject.datatimescope.db.generated.tables.Manifest.MANIFEST;

    /**
     * The table <code>public.mapset</code>.
     */
    public final Mapset MAPSET = org.gobiiproject.datatimescope.db.generated.tables.Mapset.MAPSET;

    /**
     * The table <code>public.marker</code>.
     */
    public final Marker MARKER = org.gobiiproject.datatimescope.db.generated.tables.Marker.MARKER;

    /**
     * The table <code>public.marker_group</code>.
     */
    public final MarkerGroup MARKER_GROUP = org.gobiiproject.datatimescope.db.generated.tables.MarkerGroup.MARKER_GROUP;

    /**
     * The table <code>public.marker_linkage_group</code>.
     */
    public final MarkerLinkageGroup MARKER_LINKAGE_GROUP = org.gobiiproject.datatimescope.db.generated.tables.MarkerLinkageGroup.MARKER_LINKAGE_GROUP;

    /**
     * The table <code>public.organization</code>.
     */
    public final Organization ORGANIZATION = org.gobiiproject.datatimescope.db.generated.tables.Organization.ORGANIZATION;

    /**
     * The table <code>public.platform</code>.
     */
    public final Platform PLATFORM = org.gobiiproject.datatimescope.db.generated.tables.Platform.PLATFORM;

    /**
     * The table <code>public.project</code>.
     */
    public final Project PROJECT = org.gobiiproject.datatimescope.db.generated.tables.Project.PROJECT;

    /**
     * A Platform can have multiple protocols and more than one protocol can be run by more than one vendor. 
     */
    public final Protocol PROTOCOL = org.gobiiproject.datatimescope.db.generated.tables.Protocol.PROTOCOL;

    /**
     * The table <code>public.reference</code>.
     */
    public final Reference REFERENCE = org.gobiiproject.datatimescope.db.generated.tables.Reference.REFERENCE;

    /**
     * The table <code>public.regexp_matches</code>.
     */
    public final RegexpMatches REGEXP_MATCHES = org.gobiiproject.datatimescope.db.generated.tables.RegexpMatches.REGEXP_MATCHES;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<RegexpMatchesRecord> REGEXP_MATCHES(Configuration configuration, Object __1, Object __2) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.RegexpMatches.REGEXP_MATCHES.call(__1, __2)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static RegexpMatches REGEXP_MATCHES(Object __1, Object __2) {
        return org.gobiiproject.datatimescope.db.generated.tables.RegexpMatches.REGEXP_MATCHES.call(__1, __2);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static RegexpMatches REGEXP_MATCHES(Field<Object> __1, Field<Object> __2) {
        return org.gobiiproject.datatimescope.db.generated.tables.RegexpMatches.REGEXP_MATCHES.call(__1, __2);
    }

    /**
     * The table <code>public.regexp_split_to_table</code>.
     */
    public final RegexpSplitToTable REGEXP_SPLIT_TO_TABLE = org.gobiiproject.datatimescope.db.generated.tables.RegexpSplitToTable.REGEXP_SPLIT_TO_TABLE;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<RegexpSplitToTableRecord> REGEXP_SPLIT_TO_TABLE(Configuration configuration, Object __1, Object __2) {
        return DSL.using(configuration).selectFrom(org.gobiiproject.datatimescope.db.generated.tables.RegexpSplitToTable.REGEXP_SPLIT_TO_TABLE.call(__1, __2)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static RegexpSplitToTable REGEXP_SPLIT_TO_TABLE(Object __1, Object __2) {
        return org.gobiiproject.datatimescope.db.generated.tables.RegexpSplitToTable.REGEXP_SPLIT_TO_TABLE.call(__1, __2);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static RegexpSplitToTable REGEXP_SPLIT_TO_TABLE(Field<Object> __1, Field<Object> __2) {
        return org.gobiiproject.datatimescope.db.generated.tables.RegexpSplitToTable.REGEXP_SPLIT_TO_TABLE.call(__1, __2);
    }

    /**
     * The table <code>public.role</code>.
     */
    public final Role ROLE = org.gobiiproject.datatimescope.db.generated.tables.Role.ROLE;

    /**
     * The table <code>public.timescoper</code>.
     */
    public final Timescoper TIMESCOPER = org.gobiiproject.datatimescope.db.generated.tables.Timescoper.TIMESCOPER;

    /**
     * The table <code>public.v_jobs_summary</code>.
     */
    public final VJobsSummary V_JOBS_SUMMARY = org.gobiiproject.datatimescope.db.generated.tables.VJobsSummary.V_JOBS_SUMMARY;

    /**
     * The table <code>public.v_marker_linkage_genetic</code>.
     */
    public final VMarkerLinkageGenetic V_MARKER_LINKAGE_GENETIC = org.gobiiproject.datatimescope.db.generated.tables.VMarkerLinkageGenetic.V_MARKER_LINKAGE_GENETIC;

    /**
     * The table <code>public.v_marker_linkage_physical</code>.
     */
    public final VMarkerLinkagePhysical V_MARKER_LINKAGE_PHYSICAL = org.gobiiproject.datatimescope.db.generated.tables.VMarkerLinkagePhysical.V_MARKER_LINKAGE_PHYSICAL;

    /**
     * The table <code>public.variant</code>.
     */
    public final Variant VARIANT = org.gobiiproject.datatimescope.db.generated.tables.Variant.VARIANT;

    /**
     * Vendors reside in the Organization table. A vendor can provide multiple protocols, and a particular protocol can be offered by multiple vendors, hence the N:M relationship table.
     */
    public final VendorProtocol VENDOR_PROTOCOL = org.gobiiproject.datatimescope.db.generated.tables.VendorProtocol.VENDOR_PROTOCOL;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.ANALYSIS_ANALYSIS_ID_SEQ,
            Sequences.CONTACT_CONTACT_ID_SEQ,
            Sequences.CV_CV_ID_SEQ,
            Sequences.CVGROUP_CVGROUP_ID_SEQ,
            Sequences.DATASET_DATASET_ID_SEQ,
            Sequences.DBXREF_DBXREF_ID_SEQ,
            Sequences.DISPLAY_DISPLAY_ID_SEQ,
            Sequences.DNARUN_DNARUN_ID_SEQ,
            Sequences.DNASAMPLE_DNASAMPLE_ID_SEQ,
            Sequences.EXPERIMENT_EXPERIMENT_ID_SEQ,
            Sequences.GERMPLASM_GERMPLASM_ID_SEQ,
            Sequences.GOBIIPROP_GOBIIPROP_ID_SEQ,
            Sequences.JOB_JOB_ID_SEQ,
            Sequences.LINKAGE_GROUP_LINKAGE_GROUP_ID_SEQ,
            Sequences.MANIFEST_MANIFEST_ID_SEQ,
            Sequences.MAP_MAP_ID_SEQ,
            Sequences.MARKER_GROUP_MARKER_GROUP_ID_SEQ,
            Sequences.MARKER_MAP_MARKER_MAP_ID_SEQ,
            Sequences.MARKER_MARKER_ID_SEQ,
            Sequences.ORGANIZATION_ORGANIZATION_ID_SEQ,
            Sequences.PLATFORM_PLATFORM_ID_SEQ,
            Sequences.PROJECT_PROJECT_ID_SEQ,
            Sequences.PROTOCOL_PROTOCOL_ID_SEQ,
            Sequences.REFERENCE_REFERENCE_ID_SEQ,
            Sequences.ROLE_ROLE_ID_SEQ,
            Sequences.TIMESCOPER_TIMESCOPER_ID_SEQ,
            Sequences.VARIANT_VARIANT_ID_SEQ,
            Sequences.VENDOR_PROTOCOL_VENDOR_PROTOCOL_ID_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Analysis.ANALYSIS,
            Contact.CONTACT,
            Cv.CV,
            Cvgroup.CVGROUP,
            Databasechangelog.DATABASECHANGELOG,
            Databasechangeloglock.DATABASECHANGELOGLOCK,
            Dataset.DATASET,
            Dbxref.DBXREF,
            Display.DISPLAY,
            Dnarun.DNARUN,
            Dnasample.DNASAMPLE,
            Experiment.EXPERIMENT,
            Germplasm.GERMPLASM,
            Getallanalysisparameters.GETALLANALYSISPARAMETERS,
            Getallchrlenbydataset.GETALLCHRLENBYDATASET,
            Getallchrlenbydatasetandmap.GETALLCHRLENBYDATASETANDMAP,
            Getallchrlenbymarkerlist.GETALLCHRLENBYMARKERLIST,
            Getallcontactsbyrole.GETALLCONTACTSBYROLE,
            Getalljobsbystatus.GETALLJOBSBYSTATUS,
            Getallmarkermetadatabydataset.GETALLMARKERMETADATABYDATASET,
            Getallmarkermetadatabydatasetandmap.GETALLMARKERMETADATABYDATASETANDMAP,
            Getallmarkersinmarkergroup.GETALLMARKERSINMARKERGROUP,
            Getallmarkersinmarkergroups.GETALLMARKERSINMARKERGROUPS,
            Getallmarkersinmarkergroupsbyid.GETALLMARKERSINMARKERGROUPSBYID,
            Getallprojectmetadatabydataset.GETALLPROJECTMETADATABYDATASET,
            Getallpropertiesofdnarun.GETALLPROPERTIESOFDNARUN,
            Getallpropertiesofdnasample.GETALLPROPERTIESOFDNASAMPLE,
            Getallpropertiesofgermplasm.GETALLPROPERTIESOFGERMPLASM,
            Getallpropertiesofmapset.GETALLPROPERTIESOFMAPSET,
            Getallpropertiesofmarker.GETALLPROPERTIESOFMARKER,
            Getallpropertiesofplatform.GETALLPROPERTIESOFPLATFORM,
            Getallpropertiesofproject.GETALLPROPERTIESOFPROJECT,
            Getallpropertiesofprotocol.GETALLPROPERTIESOFPROTOCOL,
            Getallsamplemetadatabydataset.GETALLSAMPLEMETADATABYDATASET,
            Getcvtermsbycvgroupname.GETCVTERMSBYCVGROUPNAME,
            Getdnarunidsbydnasamplenames.GETDNARUNIDSBYDNASAMPLENAMES,
            Getdnarunidsbydnasamplenamesandpi.GETDNARUNIDSBYDNASAMPLENAMESANDPI,
            Getdnarunidsbydnasamplenamesandproject.GETDNARUNIDSBYDNASAMPLENAMESANDPROJECT,
            Getdnarunidsbyexternalcodes.GETDNARUNIDSBYEXTERNALCODES,
            Getdnarunidsbyexternalcodesandpi.GETDNARUNIDSBYEXTERNALCODESANDPI,
            Getdnarunidsbyexternalcodesandproject.GETDNARUNIDSBYEXTERNALCODESANDPROJECT,
            Getdnarunidsbygermplasmnames.GETDNARUNIDSBYGERMPLASMNAMES,
            Getdnarunidsbygermplasmnamesandpi.GETDNARUNIDSBYGERMPLASMNAMESANDPI,
            Getdnarunidsbygermplasmnamesandproject.GETDNARUNIDSBYGERMPLASMNAMESANDPROJECT,
            Getdnarunidsbypi.GETDNARUNIDSBYPI,
            Getdnarunidsbyproject.GETDNARUNIDSBYPROJECT,
            Getdnarunnamesbydataset.GETDNARUNNAMESBYDATASET,
            Getdnarunpropertybyname.GETDNARUNPROPERTYBYNAME,
            Getdnasamplepropertybyname.GETDNASAMPLEPROPERTYBYNAME,
            Getexperimentnamesbyprojectid.GETEXPERIMENTNAMESBYPROJECTID,
            Getexperimentsbyprojectid.GETEXPERIMENTSBYPROJECTID,
            Getgermplasmpropertybyname.GETGERMPLASMPROPERTYBYNAME,
            Getmanifestbyexperimentid.GETMANIFESTBYEXPERIMENTID,
            Getmapsetpropertybyname.GETMAPSETPROPERTYBYNAME,
            Getmarkerallmapsetinfobydataset.GETMARKERALLMAPSETINFOBYDATASET,
            Getmarkerids.GETMARKERIDS,
            Getmarkeridsbymarkernames.GETMARKERIDSBYMARKERNAMES,
            Getmarkeridsbymarkernamesandplatformlist.GETMARKERIDSBYMARKERNAMESANDPLATFORMLIST,
            Getmarkeridsbyplatformlist.GETMARKERIDSBYPLATFORMLIST,
            Getmarkeridsbysamplesanddatasettype.GETMARKERIDSBYSAMPLESANDDATASETTYPE,
            Getmarkeridsbysamplesplatformsanddatasettype.GETMARKERIDSBYSAMPLESPLATFORMSANDDATASETTYPE,
            Getmarkerinmarkergroupbyname.GETMARKERINMARKERGROUPBYNAME,
            Getmarkermapsetinfobydataset.GETMARKERMAPSETINFOBYDATASET,
            Getmarkermapsetinfobymarkerlist.GETMARKERMAPSETINFOBYMARKERLIST,
            Getmarkernamesbydataset.GETMARKERNAMESBYDATASET,
            Getmarkernamesbydatasetandmap.GETMARKERNAMESBYDATASETANDMAP,
            Getmarkerpropertybyname.GETMARKERPROPERTYBYNAME,
            Getmarkerqcmetadatabydataset.GETMARKERQCMETADATABYDATASET,
            Getmarkerqcmetadatabymarkerlist.GETMARKERQCMETADATABYMARKERLIST,
            Getmatrixposofmarkers.GETMATRIXPOSOFMARKERS,
            Getmatrixposofsamples.GETMATRIXPOSOFSAMPLES,
            Getminimalmarkermetadatabydataset.GETMINIMALMARKERMETADATABYDATASET,
            Getminimalmarkermetadatabydatasetandmap.GETMINIMALMARKERMETADATABYDATASETANDMAP,
            Getminimalsamplemetadatabydataset.GETMINIMALSAMPLEMETADATABYDATASET,
            Getplatformpropertybyname.GETPLATFORMPROPERTYBYNAME,
            Getprojectpropertybyname.GETPROJECTPROPERTYBYNAME,
            Getprotocolpropertybyname.GETPROTOCOLPROPERTYBYNAME,
            Getrolesofcontact.GETROLESOFCONTACT,
            Getsampleqcmetadatabydataset.GETSAMPLEQCMETADATABYDATASET,
            Getsampleqcmetadatabymarkerlist.GETSAMPLEQCMETADATABYMARKERLIST,
            Getsampleqcmetadatabymarkerlistx.GETSAMPLEQCMETADATABYMARKERLISTX,
            Getsampleqcmetadatabysamplelist.GETSAMPLEQCMETADATABYSAMPLELIST,
            Gobiiprop.GOBIIPROP,
            Job.JOB,
            LinkageGroup.LINKAGE_GROUP,
            Manifest.MANIFEST,
            Mapset.MAPSET,
            Marker.MARKER,
            MarkerGroup.MARKER_GROUP,
            MarkerLinkageGroup.MARKER_LINKAGE_GROUP,
            Organization.ORGANIZATION,
            Platform.PLATFORM,
            Project.PROJECT,
            Protocol.PROTOCOL,
            Reference.REFERENCE,
            RegexpMatches.REGEXP_MATCHES,
            RegexpSplitToTable.REGEXP_SPLIT_TO_TABLE,
            Role.ROLE,
            Timescoper.TIMESCOPER,
            VJobsSummary.V_JOBS_SUMMARY,
            VMarkerLinkageGenetic.V_MARKER_LINKAGE_GENETIC,
            VMarkerLinkagePhysical.V_MARKER_LINKAGE_PHYSICAL,
            Variant.VARIANT,
            VendorProtocol.VENDOR_PROTOCOL);
    }

    @Override
    public final List<UDT<?>> getUDTs() {
        List result = new ArrayList();
        result.addAll(getUDTs0());
        return result;
    }

    private final List<UDT<?>> getUDTs0() {
        return Arrays.<UDT<?>>asList(
            DistinctSourceKeys.DISTINCT_SOURCE_KEYS,
            KeyvaluepairType.KEYVALUEPAIR_TYPE,
            Myrowtype.MYROWTYPE);
    }
}
