/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated;


import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.tables.Analysis;
import org.gobiiproject.datatimescope.db.generated.tables.Contact;
import org.gobiiproject.datatimescope.db.generated.tables.Cv;
import org.gobiiproject.datatimescope.db.generated.tables.Cvgroup;
import org.gobiiproject.datatimescope.db.generated.tables.Databasechangeloglock;
import org.gobiiproject.datatimescope.db.generated.tables.Dataset;
import org.gobiiproject.datatimescope.db.generated.tables.Dbxref;
import org.gobiiproject.datatimescope.db.generated.tables.Display;
import org.gobiiproject.datatimescope.db.generated.tables.Dnarun;
import org.gobiiproject.datatimescope.db.generated.tables.Dnasample;
import org.gobiiproject.datatimescope.db.generated.tables.Edge;
import org.gobiiproject.datatimescope.db.generated.tables.Experiment;
import org.gobiiproject.datatimescope.db.generated.tables.Germplasm;
import org.gobiiproject.datatimescope.db.generated.tables.Gobiiprop;
import org.gobiiproject.datatimescope.db.generated.tables.Job;
import org.gobiiproject.datatimescope.db.generated.tables.LinkageGroup;
import org.gobiiproject.datatimescope.db.generated.tables.Manifest;
import org.gobiiproject.datatimescope.db.generated.tables.Mapset;
import org.gobiiproject.datatimescope.db.generated.tables.Marker;
import org.gobiiproject.datatimescope.db.generated.tables.MarkerGroup;
import org.gobiiproject.datatimescope.db.generated.tables.MarkerLinkageGroup;
import org.gobiiproject.datatimescope.db.generated.tables.Organization;
import org.gobiiproject.datatimescope.db.generated.tables.Platform;
import org.gobiiproject.datatimescope.db.generated.tables.Project;
import org.gobiiproject.datatimescope.db.generated.tables.Protocol;
import org.gobiiproject.datatimescope.db.generated.tables.Reference;
import org.gobiiproject.datatimescope.db.generated.tables.Role;
import org.gobiiproject.datatimescope.db.generated.tables.Timescoper;
import org.gobiiproject.datatimescope.db.generated.tables.Variant;
import org.gobiiproject.datatimescope.db.generated.tables.VendorProtocol;
import org.gobiiproject.datatimescope.db.generated.tables.Vertex;
import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling indexes of tables of the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index IDX_ANALYSIS_TYPE_ID = Indexes0.IDX_ANALYSIS_TYPE_ID;
    public static final Index PK_ANALYSIS = Indexes0.PK_ANALYSIS;
    public static final Index CONTACT_USERNAME_KEY = Indexes0.CONTACT_USERNAME_KEY;
    public static final Index EMAIL_KEY = Indexes0.EMAIL_KEY;
    public static final Index PK_CONTACT = Indexes0.PK_CONTACT;
    public static final Index IDX_CV_CVGROUPID = Indexes0.IDX_CV_CVGROUPID;
    public static final Index IDX_CV_DBXREFID = Indexes0.IDX_CV_DBXREFID;
    public static final Index IDX_CV_TERM = Indexes0.IDX_CV_TERM;
    public static final Index PK_CV = Indexes0.PK_CV;
    public static final Index UNIQUE_CVTERM_TERM_CVGROUPID = Indexes0.UNIQUE_CVTERM_TERM_CVGROUPID;
    public static final Index CV_PKEY = Indexes0.CV_PKEY;
    public static final Index IDX_CVGROUP = Indexes0.IDX_CVGROUP;
    public static final Index UNIQUE_CVGROUP_NAME_TYPE = Indexes0.UNIQUE_CVGROUP_NAME_TYPE;
    public static final Index PK_DATABASECHANGELOGLOCK = Indexes0.PK_DATABASECHANGELOGLOCK;
    public static final Index IDX_DATASET_EXPERIMENT_ID = Indexes0.IDX_DATASET_EXPERIMENT_ID;
    public static final Index PK_DATASET = Indexes0.PK_DATASET;
    public static final Index DBXREF_PKEY = Indexes0.DBXREF_PKEY;
    public static final Index IDX_DBXREF_ACCESSION = Indexes0.IDX_DBXREF_ACCESSION;
    public static final Index IDX_DBXREF_VER = Indexes0.IDX_DBXREF_VER;
    public static final Index UNIQUE_DBXREF_ACCESSION_VERSION = Indexes0.UNIQUE_DBXREF_ACCESSION_VERSION;
    public static final Index PK_TABLE_DISPLAY = Indexes0.PK_TABLE_DISPLAY;
    public static final Index IDX_DNARUN_DATASETDNARUNIDX = Indexes0.IDX_DNARUN_DATASETDNARUNIDX;
    public static final Index IDX_DNARUN_NAME = Indexes0.IDX_DNARUN_NAME;
    public static final Index IDX_DNARUN_PROPS = Indexes0.IDX_DNARUN_PROPS;
    public static final Index PK_DNARUN = Indexes0.PK_DNARUN;
    public static final Index IDX_DNASAMPLE_NAME = Indexes0.IDX_DNASAMPLE_NAME;
    public static final Index IDX_DNASAMPLE_NUM = Indexes0.IDX_DNASAMPLE_NUM;
    public static final Index IDX_DNASAMPLE_PLATENAME = Indexes0.IDX_DNASAMPLE_PLATENAME;
    public static final Index IDX_DNASAMPLE_PROPS = Indexes0.IDX_DNASAMPLE_PROPS;
    public static final Index IDX_DNASAMPLE_WELLROW_WELLCOL = Indexes0.IDX_DNASAMPLE_WELLROW_WELLCOL;
    public static final Index PK_DNASAMPLE = Indexes0.PK_DNASAMPLE;
    public static final Index UNIQUE_DNASAMPLE_UUID = Indexes0.UNIQUE_DNASAMPLE_UUID;
    public static final Index EDGE_PKEY = Indexes0.EDGE_PKEY;
    public static final Index EDGE_START_VERTEX_END_VERTEX_KEY = Indexes0.EDGE_START_VERTEX_END_VERTEX_KEY;
    public static final Index END_VERTEX_IDX = Indexes0.END_VERTEX_IDX;
    public static final Index START_VERTEX_IDX = Indexes0.START_VERTEX_IDX;
    public static final Index TYPEOF_EDGE_IDX = Indexes0.TYPEOF_EDGE_IDX;
    public static final Index IDX_EXPERIMENT_NAME = Indexes0.IDX_EXPERIMENT_NAME;
    public static final Index IDX_EXPERIMENT_PROJECT_ID = Indexes0.IDX_EXPERIMENT_PROJECT_ID;
    public static final Index IDX_EXPERIMENT_VENDOR_PROTOCOL_ID = Indexes0.IDX_EXPERIMENT_VENDOR_PROTOCOL_ID;
    public static final Index PK_EXPERIMENT = Indexes0.PK_EXPERIMENT;
    public static final Index IDX_GERMPLASM_EXTERNAL_CODE = Indexes0.IDX_GERMPLASM_EXTERNAL_CODE;
    public static final Index IDX_GERMPLASM_NAME = Indexes0.IDX_GERMPLASM_NAME;
    public static final Index IDX_GERMPLASM_PROPS = Indexes0.IDX_GERMPLASM_PROPS;
    public static final Index IDX_GERMPLASM_SPECIES_ID = Indexes0.IDX_GERMPLASM_SPECIES_ID;
    public static final Index IDX_GERMPLASM_STATUS = Indexes0.IDX_GERMPLASM_STATUS;
    public static final Index IDX_GERMPLASM_TYPE_ID = Indexes0.IDX_GERMPLASM_TYPE_ID;
    public static final Index PK_GERMPLASM = Indexes0.PK_GERMPLASM;
    public static final Index GOBIIPROP_C1 = Indexes0.GOBIIPROP_C1;
    public static final Index GOBIIPROP_PKEY = Indexes0.GOBIIPROP_PKEY;
    public static final Index IDX_JOB_NAME = Indexes0.IDX_JOB_NAME;
    public static final Index IDX_JOB_PAYLOAD_TYPE_ID = Indexes0.IDX_JOB_PAYLOAD_TYPE_ID;
    public static final Index IDX_JOB_STATUS = Indexes0.IDX_JOB_STATUS;
    public static final Index IDX_JOB_SUBMITTED_BY = Indexes0.IDX_JOB_SUBMITTED_BY;
    public static final Index IDX_JOB_SUBMITTED_DATE = Indexes0.IDX_JOB_SUBMITTED_DATE;
    public static final Index IDX_JOB_TYPE_ID = Indexes0.IDX_JOB_TYPE_ID;
    public static final Index PK_JOB = Indexes0.PK_JOB;
    public static final Index UNIQUE_JOB_NAME = Indexes0.UNIQUE_JOB_NAME;
    public static final Index IDX_LINKAGE_GROUP_MAP_ID = Indexes0.IDX_LINKAGE_GROUP_MAP_ID;
    public static final Index IDX_LINKAGE_GROUP_NAME = Indexes0.IDX_LINKAGE_GROUP_NAME;
    public static final Index PK_LINKAGE_GROUP = Indexes0.PK_LINKAGE_GROUP;
    public static final Index PK_MANIFEST = Indexes0.PK_MANIFEST;
    public static final Index IDX_MAPSET_PROPS = Indexes0.IDX_MAPSET_PROPS;
    public static final Index PK_MAP = Indexes0.PK_MAP;
    public static final Index IDX_MARKER_DATASETMARKERIDX = Indexes0.IDX_MARKER_DATASETMARKERIDX;
    public static final Index IDX_MARKER_DATASETVENDORPROTOCOL = Indexes0.IDX_MARKER_DATASETVENDORPROTOCOL;
    public static final Index IDX_MARKER_NAME = Indexes0.IDX_MARKER_NAME;
    public static final Index IDX_MARKER_PROPS = Indexes0.IDX_MARKER_PROPS;
    public static final Index IDX_MARKER_REFERENCE_ID = Indexes0.IDX_MARKER_REFERENCE_ID;
    public static final Index IDX_MARKER_STRAND_ID = Indexes0.IDX_MARKER_STRAND_ID;
    public static final Index PK_MARKER = Indexes0.PK_MARKER;
    public static final Index PK_MARKER_GROUP = Indexes0.PK_MARKER_GROUP;
    public static final Index UNQ_MARKERGRP_NAME = Indexes0.UNQ_MARKERGRP_NAME;
    public static final Index IDX_MARKER_LINKAGE_GROUP_LINKAGE_GROUP_ID = Indexes0.IDX_MARKER_LINKAGE_GROUP_LINKAGE_GROUP_ID;
    public static final Index IDX_MARKER_LINKAGE_GROUP_MARKER_ID = Indexes0.IDX_MARKER_LINKAGE_GROUP_MARKER_ID;
    public static final Index IDX_MARKER_LINKAGE_GROUP_START = Indexes0.IDX_MARKER_LINKAGE_GROUP_START;
    public static final Index IDX_MARKER_LINKAGE_GROUP_STOP = Indexes0.IDX_MARKER_LINKAGE_GROUP_STOP;
    public static final Index PK_MARKER_MAP = Indexes0.PK_MARKER_MAP;
    public static final Index ORGANIZATION_NAME_KEY = Indexes0.ORGANIZATION_NAME_KEY;
    public static final Index ORGANIZATION_PKEY = Indexes0.ORGANIZATION_PKEY;
    public static final Index IDX_PLATFORM_PROPS = Indexes0.IDX_PLATFORM_PROPS;
    public static final Index IDX_PLATFORM_TYPE_ID = Indexes0.IDX_PLATFORM_TYPE_ID;
    public static final Index PK_PLATFORM = Indexes0.PK_PLATFORM;
    public static final Index IDX_PROJECT_NAME = Indexes0.IDX_PROJECT_NAME;
    public static final Index IDX_PROJECT_PI_CONTACT = Indexes0.IDX_PROJECT_PI_CONTACT;
    public static final Index IDX_PROJECT_PROPS = Indexes0.IDX_PROJECT_PROPS;
    public static final Index PI_PROJECT_NAME_KEY = Indexes0.PI_PROJECT_NAME_KEY;
    public static final Index PK_PROJECT = Indexes0.PK_PROJECT;
    public static final Index IDX_PROTOCOL_PLATFORM_ID = Indexes0.IDX_PROTOCOL_PLATFORM_ID;
    public static final Index IDX_PROTOCOL_TYPE_ID = Indexes0.IDX_PROTOCOL_TYPE_ID;
    public static final Index PK_PROTOCOL = Indexes0.PK_PROTOCOL;
    public static final Index PK_REFERENCE = Indexes0.PK_REFERENCE;
    public static final Index IDX_ROLE_ROLE_NAME = Indexes0.IDX_ROLE_ROLE_NAME;
    public static final Index PK_ROLE = Indexes0.PK_ROLE;
    public static final Index PK_TIMESCOPER = Indexes0.PK_TIMESCOPER;
    public static final Index USERNAME_KEY = Indexes0.USERNAME_KEY;
    public static final Index PK_VARIANT = Indexes0.PK_VARIANT;
    public static final Index IDX_VENDOR_PROTOCOL_PROTOCOL_ID = Indexes0.IDX_VENDOR_PROTOCOL_PROTOCOL_ID;
    public static final Index IDX_VENDOR_PROTOCOL_VENDOR_ID = Indexes0.IDX_VENDOR_PROTOCOL_VENDOR_ID;
    public static final Index PK_VENDOR_PROTOCOL = Indexes0.PK_VENDOR_PROTOCOL;
    public static final Index ENTRY_VERTEX_IDX = Indexes0.ENTRY_VERTEX_IDX;
    public static final Index TYPEOF_VERTEX_IDX = Indexes0.TYPEOF_VERTEX_IDX;
    public static final Index VERTEX_NAME_IDX = Indexes0.VERTEX_NAME_IDX;
    public static final Index VERTEX_NAME_KEY = Indexes0.VERTEX_NAME_KEY;
    public static final Index VERTEX_PKEY = Indexes0.VERTEX_PKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 extends AbstractKeys {
        public static Index IDX_ANALYSIS_TYPE_ID = createIndex("idx_analysis_type_id", Analysis.ANALYSIS, new OrderField[] { Analysis.ANALYSIS.TYPE_ID }, false);
        public static Index PK_ANALYSIS = createIndex("pk_analysis", Analysis.ANALYSIS, new OrderField[] { Analysis.ANALYSIS.ANALYSIS_ID }, true);
        public static Index CONTACT_USERNAME_KEY = createIndex("contact_username_key", Contact.CONTACT, new OrderField[] { Contact.CONTACT.USERNAME }, true);
        public static Index EMAIL_KEY = createIndex("email_key", Contact.CONTACT, new OrderField[] { Contact.CONTACT.EMAIL }, true);
        public static Index PK_CONTACT = createIndex("pk_contact", Contact.CONTACT, new OrderField[] { Contact.CONTACT.CONTACT_ID }, true);
        public static Index IDX_CV_CVGROUPID = createIndex("idx_cv_cvgroupid", Cv.CV, new OrderField[] { Cv.CV.CVGROUP_ID }, false);
        public static Index IDX_CV_DBXREFID = createIndex("idx_cv_dbxrefid", Cv.CV, new OrderField[] { Cv.CV.DBXREF_ID }, false);
        public static Index IDX_CV_TERM = createIndex("idx_cv_term", Cv.CV, new OrderField[] { Cv.CV.TERM }, false);
        public static Index PK_CV = createIndex("pk_cv", Cv.CV, new OrderField[] { Cv.CV.CV_ID }, true);
        public static Index UNIQUE_CVTERM_TERM_CVGROUPID = createIndex("unique_cvterm_term_cvgroupid", Cv.CV, new OrderField[] { Cv.CV.TERM, Cv.CV.CVGROUP_ID }, true);
        public static Index CV_PKEY = createIndex("cv_pkey", Cvgroup.CVGROUP, new OrderField[] { Cvgroup.CVGROUP.CVGROUP_ID }, true);
        public static Index IDX_CVGROUP = createIndex("idx_cvgroup", Cvgroup.CVGROUP, new OrderField[] { Cvgroup.CVGROUP.TYPE }, false);
        public static Index UNIQUE_CVGROUP_NAME_TYPE = createIndex("unique_cvgroup_name_type", Cvgroup.CVGROUP, new OrderField[] { Cvgroup.CVGROUP.NAME, Cvgroup.CVGROUP.TYPE }, true);
        public static Index PK_DATABASECHANGELOGLOCK = createIndex("pk_databasechangeloglock", Databasechangeloglock.DATABASECHANGELOGLOCK, new OrderField[] { Databasechangeloglock.DATABASECHANGELOGLOCK.ID }, true);
        public static Index IDX_DATASET_EXPERIMENT_ID = createIndex("idx_dataset_experiment_id", Dataset.DATASET, new OrderField[] { Dataset.DATASET.EXPERIMENT_ID }, false);
        public static Index PK_DATASET = createIndex("pk_dataset", Dataset.DATASET, new OrderField[] { Dataset.DATASET.DATASET_ID }, true);
        public static Index DBXREF_PKEY = createIndex("dbxref_pkey", Dbxref.DBXREF, new OrderField[] { Dbxref.DBXREF.DBXREF_ID }, true);
        public static Index IDX_DBXREF_ACCESSION = createIndex("idx_dbxref_accession", Dbxref.DBXREF, new OrderField[] { Dbxref.DBXREF.ACCESSION }, false);
        public static Index IDX_DBXREF_VER = createIndex("idx_dbxref_ver", Dbxref.DBXREF, new OrderField[] { Dbxref.DBXREF.VER }, false);
        public static Index UNIQUE_DBXREF_ACCESSION_VERSION = createIndex("unique_dbxref_accession_version", Dbxref.DBXREF, new OrderField[] { Dbxref.DBXREF.ACCESSION, Dbxref.DBXREF.VER }, true);
        public static Index PK_TABLE_DISPLAY = createIndex("pk_table_display", Display.DISPLAY, new OrderField[] { Display.DISPLAY.DISPLAY_ID }, true);
        public static Index IDX_DNARUN_DATASETDNARUNIDX = createIndex("idx_dnarun_datasetdnarunidx", Dnarun.DNARUN, new OrderField[] { Dnarun.DNARUN.DATASET_DNARUN_IDX }, false);
        public static Index IDX_DNARUN_NAME = createIndex("idx_dnarun_name", Dnarun.DNARUN, new OrderField[] { Dnarun.DNARUN.NAME }, false);
        public static Index IDX_DNARUN_PROPS = createIndex("idx_dnarun_props", Dnarun.DNARUN, new OrderField[] { Dnarun.DNARUN.PROPS }, false);
        public static Index PK_DNARUN = createIndex("pk_dnarun", Dnarun.DNARUN, new OrderField[] { Dnarun.DNARUN.DNARUN_ID }, true);
        public static Index IDX_DNASAMPLE_NAME = createIndex("idx_dnasample_name", Dnasample.DNASAMPLE, new OrderField[] { Dnasample.DNASAMPLE.NAME }, false);
        public static Index IDX_DNASAMPLE_NUM = createIndex("idx_dnasample_num", Dnasample.DNASAMPLE, new OrderField[] { Dnasample.DNASAMPLE.NUM }, false);
        public static Index IDX_DNASAMPLE_PLATENAME = createIndex("idx_dnasample_platename", Dnasample.DNASAMPLE, new OrderField[] { Dnasample.DNASAMPLE.PLATENAME }, false);
        public static Index IDX_DNASAMPLE_PROPS = createIndex("idx_dnasample_props", Dnasample.DNASAMPLE, new OrderField[] { Dnasample.DNASAMPLE.PROPS }, false);
        public static Index IDX_DNASAMPLE_WELLROW_WELLCOL = createIndex("idx_dnasample_wellrow_wellcol", Dnasample.DNASAMPLE, new OrderField[] { Dnasample.DNASAMPLE.WELL_ROW, Dnasample.DNASAMPLE.WELL_COL }, false);
        public static Index PK_DNASAMPLE = createIndex("pk_dnasample", Dnasample.DNASAMPLE, new OrderField[] { Dnasample.DNASAMPLE.DNASAMPLE_ID }, true);
        public static Index UNIQUE_DNASAMPLE_UUID = createIndex("unique_dnasample_uuid", Dnasample.DNASAMPLE, new OrderField[] { Dnasample.DNASAMPLE.UUID }, true);
        public static Index EDGE_PKEY = createIndex("edge_pkey", Edge.EDGE, new OrderField[] { Edge.EDGE.EDGE_ID }, true);
        public static Index EDGE_START_VERTEX_END_VERTEX_KEY = createIndex("edge_start_vertex_end_vertex_key", Edge.EDGE, new OrderField[] { Edge.EDGE.START_VERTEX, Edge.EDGE.END_VERTEX }, true);
        public static Index END_VERTEX_IDX = createIndex("end_vertex_idx", Edge.EDGE, new OrderField[] { Edge.EDGE.END_VERTEX }, false);
        public static Index START_VERTEX_IDX = createIndex("start_vertex_idx", Edge.EDGE, new OrderField[] { Edge.EDGE.START_VERTEX }, false);
        public static Index TYPEOF_EDGE_IDX = createIndex("typeof_edge_idx", Edge.EDGE, new OrderField[] { Edge.EDGE.TYPE_ID }, false);
        public static Index IDX_EXPERIMENT_NAME = createIndex("idx_experiment_name", Experiment.EXPERIMENT, new OrderField[] { Experiment.EXPERIMENT.NAME }, false);
        public static Index IDX_EXPERIMENT_PROJECT_ID = createIndex("idx_experiment_project_id", Experiment.EXPERIMENT, new OrderField[] { Experiment.EXPERIMENT.PROJECT_ID }, false);
        public static Index IDX_EXPERIMENT_VENDOR_PROTOCOL_ID = createIndex("idx_experiment_vendor_protocol_id", Experiment.EXPERIMENT, new OrderField[] { Experiment.EXPERIMENT.VENDOR_PROTOCOL_ID }, false);
        public static Index PK_EXPERIMENT = createIndex("pk_experiment", Experiment.EXPERIMENT, new OrderField[] { Experiment.EXPERIMENT.EXPERIMENT_ID }, true);
        public static Index IDX_GERMPLASM_EXTERNAL_CODE = createIndex("idx_germplasm_external_code", Germplasm.GERMPLASM, new OrderField[] { Germplasm.GERMPLASM.EXTERNAL_CODE }, false);
        public static Index IDX_GERMPLASM_NAME = createIndex("idx_germplasm_name", Germplasm.GERMPLASM, new OrderField[] { Germplasm.GERMPLASM.NAME }, false);
        public static Index IDX_GERMPLASM_PROPS = createIndex("idx_germplasm_props", Germplasm.GERMPLASM, new OrderField[] { Germplasm.GERMPLASM.PROPS }, false);
        public static Index IDX_GERMPLASM_SPECIES_ID = createIndex("idx_germplasm_species_id", Germplasm.GERMPLASM, new OrderField[] { Germplasm.GERMPLASM.SPECIES_ID }, false);
        public static Index IDX_GERMPLASM_STATUS = createIndex("idx_germplasm_status", Germplasm.GERMPLASM, new OrderField[] { Germplasm.GERMPLASM.STATUS }, false);
        public static Index IDX_GERMPLASM_TYPE_ID = createIndex("idx_germplasm_type_id", Germplasm.GERMPLASM, new OrderField[] { Germplasm.GERMPLASM.TYPE_ID }, false);
        public static Index PK_GERMPLASM = createIndex("pk_germplasm", Germplasm.GERMPLASM, new OrderField[] { Germplasm.GERMPLASM.GERMPLASM_ID }, true);
        public static Index GOBIIPROP_C1 = createIndex("gobiiprop_c1", Gobiiprop.GOBIIPROP, new OrderField[] { Gobiiprop.GOBIIPROP.TYPE_ID, Gobiiprop.GOBIIPROP.RANK }, true);
        public static Index GOBIIPROP_PKEY = createIndex("gobiiprop_pkey", Gobiiprop.GOBIIPROP, new OrderField[] { Gobiiprop.GOBIIPROP.GOBIIPROP_ID }, true);
        public static Index IDX_JOB_NAME = createIndex("idx_job_name", Job.JOB, new OrderField[] { Job.JOB.NAME }, false);
        public static Index IDX_JOB_PAYLOAD_TYPE_ID = createIndex("idx_job_payload_type_id", Job.JOB, new OrderField[] { Job.JOB.PAYLOAD_TYPE_ID }, false);
        public static Index IDX_JOB_STATUS = createIndex("idx_job_status", Job.JOB, new OrderField[] { Job.JOB.STATUS }, false);
        public static Index IDX_JOB_SUBMITTED_BY = createIndex("idx_job_submitted_by", Job.JOB, new OrderField[] { Job.JOB.SUBMITTED_BY }, false);
        public static Index IDX_JOB_SUBMITTED_DATE = createIndex("idx_job_submitted_date", Job.JOB, new OrderField[] { Job.JOB.SUBMITTED_DATE }, false);
        public static Index IDX_JOB_TYPE_ID = createIndex("idx_job_type_id", Job.JOB, new OrderField[] { Job.JOB.TYPE_ID }, false);
        public static Index PK_JOB = createIndex("pk_job", Job.JOB, new OrderField[] { Job.JOB.JOB_ID }, true);
        public static Index UNIQUE_JOB_NAME = createIndex("unique_job_name", Job.JOB, new OrderField[] { Job.JOB.NAME }, true);
        public static Index IDX_LINKAGE_GROUP_MAP_ID = createIndex("idx_linkage_group_map_id", LinkageGroup.LINKAGE_GROUP, new OrderField[] { LinkageGroup.LINKAGE_GROUP.MAP_ID }, false);
        public static Index IDX_LINKAGE_GROUP_NAME = createIndex("idx_linkage_group_name", LinkageGroup.LINKAGE_GROUP, new OrderField[] { LinkageGroup.LINKAGE_GROUP.NAME }, false);
        public static Index PK_LINKAGE_GROUP = createIndex("pk_linkage_group", LinkageGroup.LINKAGE_GROUP, new OrderField[] { LinkageGroup.LINKAGE_GROUP.LINKAGE_GROUP_ID }, true);
        public static Index PK_MANIFEST = createIndex("pk_manifest", Manifest.MANIFEST, new OrderField[] { Manifest.MANIFEST.MANIFEST_ID }, true);
        public static Index IDX_MAPSET_PROPS = createIndex("idx_mapset_props", Mapset.MAPSET, new OrderField[] { Mapset.MAPSET.PROPS }, false);
        public static Index PK_MAP = createIndex("pk_map", Mapset.MAPSET, new OrderField[] { Mapset.MAPSET.MAPSET_ID }, true);
        public static Index IDX_MARKER_DATASETMARKERIDX = createIndex("idx_marker_datasetmarkeridx", Marker.MARKER, new OrderField[] { Marker.MARKER.DATASET_MARKER_IDX }, false);
        public static Index IDX_MARKER_DATASETVENDORPROTOCOL = createIndex("idx_marker_datasetvendorprotocol", Marker.MARKER, new OrderField[] { Marker.MARKER.DATASET_VENDOR_PROTOCOL }, false);
        public static Index IDX_MARKER_NAME = createIndex("idx_marker_name", Marker.MARKER, new OrderField[] { Marker.MARKER.NAME }, false);
        public static Index IDX_MARKER_PROPS = createIndex("idx_marker_props", Marker.MARKER, new OrderField[] { Marker.MARKER.PROPS }, false);
        public static Index IDX_MARKER_REFERENCE_ID = createIndex("idx_marker_reference_id", Marker.MARKER, new OrderField[] { Marker.MARKER.REFERENCE_ID }, false);
        public static Index IDX_MARKER_STRAND_ID = createIndex("idx_marker_strand_id", Marker.MARKER, new OrderField[] { Marker.MARKER.STRAND_ID }, false);
        public static Index PK_MARKER = createIndex("pk_marker", Marker.MARKER, new OrderField[] { Marker.MARKER.MARKER_ID }, true);
        public static Index PK_MARKER_GROUP = createIndex("pk_marker_group", MarkerGroup.MARKER_GROUP, new OrderField[] { MarkerGroup.MARKER_GROUP.MARKER_GROUP_ID }, true);
        public static Index UNQ_MARKERGRP_NAME = createIndex("unq_markergrp_name", MarkerGroup.MARKER_GROUP, new OrderField[] { MarkerGroup.MARKER_GROUP.NAME }, true);
        public static Index IDX_MARKER_LINKAGE_GROUP_LINKAGE_GROUP_ID = createIndex("idx_marker_linkage_group_linkage_group_id", MarkerLinkageGroup.MARKER_LINKAGE_GROUP, new OrderField[] { MarkerLinkageGroup.MARKER_LINKAGE_GROUP.LINKAGE_GROUP_ID }, false);
        public static Index IDX_MARKER_LINKAGE_GROUP_MARKER_ID = createIndex("idx_marker_linkage_group_marker_id", MarkerLinkageGroup.MARKER_LINKAGE_GROUP, new OrderField[] { MarkerLinkageGroup.MARKER_LINKAGE_GROUP.MARKER_ID }, false);
        public static Index IDX_MARKER_LINKAGE_GROUP_START = createIndex("idx_marker_linkage_group_start", MarkerLinkageGroup.MARKER_LINKAGE_GROUP, new OrderField[] { MarkerLinkageGroup.MARKER_LINKAGE_GROUP.START }, false);
        public static Index IDX_MARKER_LINKAGE_GROUP_STOP = createIndex("idx_marker_linkage_group_stop", MarkerLinkageGroup.MARKER_LINKAGE_GROUP, new OrderField[] { MarkerLinkageGroup.MARKER_LINKAGE_GROUP.STOP }, false);
        public static Index PK_MARKER_MAP = createIndex("pk_marker_map", MarkerLinkageGroup.MARKER_LINKAGE_GROUP, new OrderField[] { MarkerLinkageGroup.MARKER_LINKAGE_GROUP.MARKER_LINKAGE_GROUP_ID }, true);
        public static Index ORGANIZATION_NAME_KEY = createIndex("organization_name_key", Organization.ORGANIZATION, new OrderField[] { Organization.ORGANIZATION.NAME }, true);
        public static Index ORGANIZATION_PKEY = createIndex("organization_pkey", Organization.ORGANIZATION, new OrderField[] { Organization.ORGANIZATION.ORGANIZATION_ID }, true);
        public static Index IDX_PLATFORM_PROPS = createIndex("idx_platform_props", Platform.PLATFORM, new OrderField[] { Platform.PLATFORM.PROPS }, false);
        public static Index IDX_PLATFORM_TYPE_ID = createIndex("idx_platform_type_id", Platform.PLATFORM, new OrderField[] { Platform.PLATFORM.TYPE_ID }, false);
        public static Index PK_PLATFORM = createIndex("pk_platform", Platform.PLATFORM, new OrderField[] { Platform.PLATFORM.PLATFORM_ID }, true);
        public static Index IDX_PROJECT_NAME = createIndex("idx_project_name", Project.PROJECT, new OrderField[] { Project.PROJECT.NAME }, false);
        public static Index IDX_PROJECT_PI_CONTACT = createIndex("idx_project_pi_contact", Project.PROJECT, new OrderField[] { Project.PROJECT.PI_CONTACT }, false);
        public static Index IDX_PROJECT_PROPS = createIndex("idx_project_props", Project.PROJECT, new OrderField[] { Project.PROJECT.PROPS }, false);
        public static Index PI_PROJECT_NAME_KEY = createIndex("pi_project_name_key", Project.PROJECT, new OrderField[] { Project.PROJECT.PI_CONTACT, Project.PROJECT.NAME }, true);
        public static Index PK_PROJECT = createIndex("pk_project", Project.PROJECT, new OrderField[] { Project.PROJECT.PROJECT_ID }, true);
        public static Index IDX_PROTOCOL_PLATFORM_ID = createIndex("idx_protocol_platform_id", Protocol.PROTOCOL, new OrderField[] { Protocol.PROTOCOL.PLATFORM_ID }, false);
        public static Index IDX_PROTOCOL_TYPE_ID = createIndex("idx_protocol_type_id", Protocol.PROTOCOL, new OrderField[] { Protocol.PROTOCOL.TYPE_ID }, false);
        public static Index PK_PROTOCOL = createIndex("pk_protocol", Protocol.PROTOCOL, new OrderField[] { Protocol.PROTOCOL.PROTOCOL_ID }, true);
        public static Index PK_REFERENCE = createIndex("pk_reference", Reference.REFERENCE, new OrderField[] { Reference.REFERENCE.REFERENCE_ID }, true);
        public static Index IDX_ROLE_ROLE_NAME = createIndex("idx_role_role_name", Role.ROLE, new OrderField[] { Role.ROLE.ROLE_NAME }, false);
        public static Index PK_ROLE = createIndex("pk_role", Role.ROLE, new OrderField[] { Role.ROLE.ROLE_ID }, true);
        public static Index PK_TIMESCOPER = createIndex("pk_timescoper", Timescoper.TIMESCOPER, new OrderField[] { Timescoper.TIMESCOPER.TIMESCOPER_ID }, true);
        public static Index USERNAME_KEY = createIndex("username_key", Timescoper.TIMESCOPER, new OrderField[] { Timescoper.TIMESCOPER.USERNAME }, true);
        public static Index PK_VARIANT = createIndex("pk_variant", Variant.VARIANT, new OrderField[] { Variant.VARIANT.VARIANT_ID }, true);
        public static Index IDX_VENDOR_PROTOCOL_PROTOCOL_ID = createIndex("idx_vendor_protocol_protocol_id", VendorProtocol.VENDOR_PROTOCOL, new OrderField[] { VendorProtocol.VENDOR_PROTOCOL.PROTOCOL_ID }, false);
        public static Index IDX_VENDOR_PROTOCOL_VENDOR_ID = createIndex("idx_vendor_protocol_vendor_id", VendorProtocol.VENDOR_PROTOCOL, new OrderField[] { VendorProtocol.VENDOR_PROTOCOL.VENDOR_ID }, false);
        public static Index PK_VENDOR_PROTOCOL = createIndex("pk_vendor_protocol", VendorProtocol.VENDOR_PROTOCOL, new OrderField[] { VendorProtocol.VENDOR_PROTOCOL.VENDOR_PROTOCOL_ID }, true);
        public static Index ENTRY_VERTEX_IDX = createIndex("entry_vertex_idx", Vertex.VERTEX, new OrderField[] { Vertex.VERTEX.IS_ENTRY }, false);
        public static Index TYPEOF_VERTEX_IDX = createIndex("typeof_vertex_idx", Vertex.VERTEX, new OrderField[] { Vertex.VERTEX.TYPE_ID }, false);
        public static Index VERTEX_NAME_IDX = createIndex("vertex_name_idx", Vertex.VERTEX, new OrderField[] { Vertex.VERTEX.NAME }, false);
        public static Index VERTEX_NAME_KEY = createIndex("vertex_name_key", Vertex.VERTEX, new OrderField[] { Vertex.VERTEX.NAME }, true);
        public static Index VERTEX_PKEY = createIndex("vertex_pkey", Vertex.VERTEX, new OrderField[] { Vertex.VERTEX.VERTEX_ID }, true);
    }
}
