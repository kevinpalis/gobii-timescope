/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated;


import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Timestamp;
import java.util.UUID;

import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.routines.Appendanalysistodataset;
import org.gobiiproject.datatimescope.db.generated.routines.Appendreadtabletorole;
import org.gobiiproject.datatimescope.db.generated.routines.Appendroletocontact;
import org.gobiiproject.datatimescope.db.generated.routines.Appendwritetabletorole;
import org.gobiiproject.datatimescope.db.generated.routines.Armor1;
import org.gobiiproject.datatimescope.db.generated.routines.Armor2;
import org.gobiiproject.datatimescope.db.generated.routines.Citext1;
import org.gobiiproject.datatimescope.db.generated.routines.Citext2;
import org.gobiiproject.datatimescope.db.generated.routines.Citext3;
import org.gobiiproject.datatimescope.db.generated.routines.CitextCmp;
import org.gobiiproject.datatimescope.db.generated.routines.CitextEq;
import org.gobiiproject.datatimescope.db.generated.routines.CitextGe;
import org.gobiiproject.datatimescope.db.generated.routines.CitextGt;
import org.gobiiproject.datatimescope.db.generated.routines.CitextHash;
import org.gobiiproject.datatimescope.db.generated.routines.CitextLarger;
import org.gobiiproject.datatimescope.db.generated.routines.CitextLe;
import org.gobiiproject.datatimescope.db.generated.routines.CitextLt;
import org.gobiiproject.datatimescope.db.generated.routines.CitextNe;
import org.gobiiproject.datatimescope.db.generated.routines.CitextSmaller;
import org.gobiiproject.datatimescope.db.generated.routines.Citextin;
import org.gobiiproject.datatimescope.db.generated.routines.Citextout;
import org.gobiiproject.datatimescope.db.generated.routines.Citextrecv;
import org.gobiiproject.datatimescope.db.generated.routines.Citextsend;
import org.gobiiproject.datatimescope.db.generated.routines.Createanalysis1;
import org.gobiiproject.datatimescope.db.generated.routines.Createanalysis2;
import org.gobiiproject.datatimescope.db.generated.routines.Createcontact;
import org.gobiiproject.datatimescope.db.generated.routines.Createcv;
import org.gobiiproject.datatimescope.db.generated.routines.Createcvgroup;
import org.gobiiproject.datatimescope.db.generated.routines.Createcvingroup;
import org.gobiiproject.datatimescope.db.generated.routines.Createdataset;
import org.gobiiproject.datatimescope.db.generated.routines.Createdbxref;
import org.gobiiproject.datatimescope.db.generated.routines.Createdisplay;
import org.gobiiproject.datatimescope.db.generated.routines.Creatednarun;
import org.gobiiproject.datatimescope.db.generated.routines.Creatednasample1;
import org.gobiiproject.datatimescope.db.generated.routines.Creatednasample2;
import org.gobiiproject.datatimescope.db.generated.routines.Createedge;
import org.gobiiproject.datatimescope.db.generated.routines.Createexperiment;
import org.gobiiproject.datatimescope.db.generated.routines.Creategermplasm;
import org.gobiiproject.datatimescope.db.generated.routines.Createjob1;
import org.gobiiproject.datatimescope.db.generated.routines.Createjob2;
import org.gobiiproject.datatimescope.db.generated.routines.Createlinkagegroup1;
import org.gobiiproject.datatimescope.db.generated.routines.Createlinkagegroup2;
import org.gobiiproject.datatimescope.db.generated.routines.Createmanifest;
import org.gobiiproject.datatimescope.db.generated.routines.Createmapset;
import org.gobiiproject.datatimescope.db.generated.routines.Createmarker;
import org.gobiiproject.datatimescope.db.generated.routines.Createmarkergroup;
import org.gobiiproject.datatimescope.db.generated.routines.Createmarkerlinkagegroup;
import org.gobiiproject.datatimescope.db.generated.routines.Createorganization;
import org.gobiiproject.datatimescope.db.generated.routines.Createplatform;
import org.gobiiproject.datatimescope.db.generated.routines.Createproject;
import org.gobiiproject.datatimescope.db.generated.routines.Createprotocol;
import org.gobiiproject.datatimescope.db.generated.routines.Createreference;
import org.gobiiproject.datatimescope.db.generated.routines.Createrole;
import org.gobiiproject.datatimescope.db.generated.routines.Createtimescoper;
import org.gobiiproject.datatimescope.db.generated.routines.Createvariant;
import org.gobiiproject.datatimescope.db.generated.routines.Createvendorprotocol;
import org.gobiiproject.datatimescope.db.generated.routines.Createvertex;
import org.gobiiproject.datatimescope.db.generated.routines.Crypt;
import org.gobiiproject.datatimescope.db.generated.routines.Dearmor;
import org.gobiiproject.datatimescope.db.generated.routines.Decrypt;
import org.gobiiproject.datatimescope.db.generated.routines.DecryptIv;
import org.gobiiproject.datatimescope.db.generated.routines.Deleteanalysis;
import org.gobiiproject.datatimescope.db.generated.routines.Deleteanalysisparameter;
import org.gobiiproject.datatimescope.db.generated.routines.Deletecontact;
import org.gobiiproject.datatimescope.db.generated.routines.Deletecv;
import org.gobiiproject.datatimescope.db.generated.routines.Deletecvgroup;
import org.gobiiproject.datatimescope.db.generated.routines.Deletedataset;
import org.gobiiproject.datatimescope.db.generated.routines.Deletedatasetdnarunindices;
import org.gobiiproject.datatimescope.db.generated.routines.Deletedatasetmarkerindices;
import org.gobiiproject.datatimescope.db.generated.routines.Deletedbxref;
import org.gobiiproject.datatimescope.db.generated.routines.Deletedisplay;
import org.gobiiproject.datatimescope.db.generated.routines.Deletednarun;
import org.gobiiproject.datatimescope.db.generated.routines.Deletednarunpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Deletednarunpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Deletednasample;
import org.gobiiproject.datatimescope.db.generated.routines.Deletednasamplepropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Deletednasamplepropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Deleteexperiment;
import org.gobiiproject.datatimescope.db.generated.routines.Deletegermplasm;
import org.gobiiproject.datatimescope.db.generated.routines.Deletegermplasmpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Deletegermplasmpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Deletejob;
import org.gobiiproject.datatimescope.db.generated.routines.Deletelinkagegroup;
import org.gobiiproject.datatimescope.db.generated.routines.Deletemanifest;
import org.gobiiproject.datatimescope.db.generated.routines.Deletemapset;
import org.gobiiproject.datatimescope.db.generated.routines.Deletemapsetpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Deletemapsetpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Deletemarker;
import org.gobiiproject.datatimescope.db.generated.routines.Deletemarkergroup;
import org.gobiiproject.datatimescope.db.generated.routines.Deletemarkergroupbyname;
import org.gobiiproject.datatimescope.db.generated.routines.Deletemarkerinmarkergroupbyid;
import org.gobiiproject.datatimescope.db.generated.routines.Deletemarkerinmarkergroupbyname;
import org.gobiiproject.datatimescope.db.generated.routines.Deletemarkerlinkagegroup;
import org.gobiiproject.datatimescope.db.generated.routines.Deletemarkerpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Deletemarkerpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Deleteorganization;
import org.gobiiproject.datatimescope.db.generated.routines.Deleteplatform;
import org.gobiiproject.datatimescope.db.generated.routines.Deleteplatformpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Deleteplatformpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Deleteproject;
import org.gobiiproject.datatimescope.db.generated.routines.Deleteprojectpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Deleteprojectpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Deleteprotocol;
import org.gobiiproject.datatimescope.db.generated.routines.Deleteprotocolpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Deleteprotocolpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Deletereference;
import org.gobiiproject.datatimescope.db.generated.routines.Deleterole;
import org.gobiiproject.datatimescope.db.generated.routines.Deletevariant;
import org.gobiiproject.datatimescope.db.generated.routines.Deletevendorprotocol;
import org.gobiiproject.datatimescope.db.generated.routines.Digest1;
import org.gobiiproject.datatimescope.db.generated.routines.Digest2;
import org.gobiiproject.datatimescope.db.generated.routines.Encrypt;
import org.gobiiproject.datatimescope.db.generated.routines.EncryptIv;
import org.gobiiproject.datatimescope.db.generated.routines.FileFdwHandler;
import org.gobiiproject.datatimescope.db.generated.routines.FileFdwValidator;
import org.gobiiproject.datatimescope.db.generated.routines.GenRandomBytes;
import org.gobiiproject.datatimescope.db.generated.routines.GenRandomUuid;
import org.gobiiproject.datatimescope.db.generated.routines.GenSalt1;
import org.gobiiproject.datatimescope.db.generated.routines.GenSalt2;
import org.gobiiproject.datatimescope.db.generated.routines.Getallanalysisparameters;
import org.gobiiproject.datatimescope.db.generated.routines.Getallchrlenbydataset;
import org.gobiiproject.datatimescope.db.generated.routines.Getallchrlenbydatasetandmap;
import org.gobiiproject.datatimescope.db.generated.routines.Getallchrlenbymarkerlist;
import org.gobiiproject.datatimescope.db.generated.routines.Getallcontactsbyrole;
import org.gobiiproject.datatimescope.db.generated.routines.Getalldatasetsbymarker;
import org.gobiiproject.datatimescope.db.generated.routines.Getallentryvertices;
import org.gobiiproject.datatimescope.db.generated.routines.Getalljobsbystatus;
import org.gobiiproject.datatimescope.db.generated.routines.Getallmarkermetadatabydataset;
import org.gobiiproject.datatimescope.db.generated.routines.Getallmarkermetadatabydatasetandmap;
import org.gobiiproject.datatimescope.db.generated.routines.Getallmarkersinmarkergroup;
import org.gobiiproject.datatimescope.db.generated.routines.Getallmarkersinmarkergroups1;
import org.gobiiproject.datatimescope.db.generated.routines.Getallmarkersinmarkergroups2;
import org.gobiiproject.datatimescope.db.generated.routines.Getallmarkersinmarkergroupsbyid;
import org.gobiiproject.datatimescope.db.generated.routines.Getallprojectmetadatabydataset;
import org.gobiiproject.datatimescope.db.generated.routines.Getallpropertiesofdnarun;
import org.gobiiproject.datatimescope.db.generated.routines.Getallpropertiesofdnasample;
import org.gobiiproject.datatimescope.db.generated.routines.Getallpropertiesofgermplasm;
import org.gobiiproject.datatimescope.db.generated.routines.Getallpropertiesofmapset;
import org.gobiiproject.datatimescope.db.generated.routines.Getallpropertiesofmarker;
import org.gobiiproject.datatimescope.db.generated.routines.Getallpropertiesofplatform;
import org.gobiiproject.datatimescope.db.generated.routines.Getallpropertiesofproject;
import org.gobiiproject.datatimescope.db.generated.routines.Getallpropertiesofprotocol;
import org.gobiiproject.datatimescope.db.generated.routines.Getallsamplemetadatabydataset;
import org.gobiiproject.datatimescope.db.generated.routines.Getcvgroupid;
import org.gobiiproject.datatimescope.db.generated.routines.Getcvid;
import org.gobiiproject.datatimescope.db.generated.routines.Getcvterm;
import org.gobiiproject.datatimescope.db.generated.routines.Getcvtermsbycvgroupname;
import org.gobiiproject.datatimescope.db.generated.routines.Getdatasetsinexperiment;
import org.gobiiproject.datatimescope.db.generated.routines.Getdatasetsinproject;
import org.gobiiproject.datatimescope.db.generated.routines.Getdatasetsinvendorprotocol;
import org.gobiiproject.datatimescope.db.generated.routines.Getdnarunidsbydnasamplenames;
import org.gobiiproject.datatimescope.db.generated.routines.Getdnarunidsbydnasamplenamesandpi;
import org.gobiiproject.datatimescope.db.generated.routines.Getdnarunidsbydnasamplenamesandproject;
import org.gobiiproject.datatimescope.db.generated.routines.Getdnarunidsbyexternalcodes;
import org.gobiiproject.datatimescope.db.generated.routines.Getdnarunidsbyexternalcodesandpi;
import org.gobiiproject.datatimescope.db.generated.routines.Getdnarunidsbyexternalcodesandproject;
import org.gobiiproject.datatimescope.db.generated.routines.Getdnarunidsbygermplasmnames;
import org.gobiiproject.datatimescope.db.generated.routines.Getdnarunidsbygermplasmnamesandpi;
import org.gobiiproject.datatimescope.db.generated.routines.Getdnarunidsbygermplasmnamesandproject;
import org.gobiiproject.datatimescope.db.generated.routines.Getdnarunidsbypi;
import org.gobiiproject.datatimescope.db.generated.routines.Getdnarunidsbyproject;
import org.gobiiproject.datatimescope.db.generated.routines.Getdnarunnamesbydataset;
import org.gobiiproject.datatimescope.db.generated.routines.Getdnarunpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Getdnarunpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Getdnasamplepropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Getdnasamplepropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Getexperimentnamesbyprojectid;
import org.gobiiproject.datatimescope.db.generated.routines.Getexperimentsbyprojectid;
import org.gobiiproject.datatimescope.db.generated.routines.Getgermplasmpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Getgermplasmpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Getlinkagegroupsbymarker;
import org.gobiiproject.datatimescope.db.generated.routines.Getmanifestbyexperimentid;
import org.gobiiproject.datatimescope.db.generated.routines.Getmapsetpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Getmapsetpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Getmarkerallmapsetinfobydataset;
import org.gobiiproject.datatimescope.db.generated.routines.Getmarkergroupsbymarker;
import org.gobiiproject.datatimescope.db.generated.routines.Getmarkerids;
import org.gobiiproject.datatimescope.db.generated.routines.Getmarkeridsbymarkernames;
import org.gobiiproject.datatimescope.db.generated.routines.Getmarkeridsbymarkernamesandplatformlist;
import org.gobiiproject.datatimescope.db.generated.routines.Getmarkeridsbyplatformlist;
import org.gobiiproject.datatimescope.db.generated.routines.Getmarkeridsbysamplesanddatasettype;
import org.gobiiproject.datatimescope.db.generated.routines.Getmarkeridsbysamplesplatformsanddatasettype;
import org.gobiiproject.datatimescope.db.generated.routines.Getmarkerinmarkergroupbyid;
import org.gobiiproject.datatimescope.db.generated.routines.Getmarkerinmarkergroupbyname;
import org.gobiiproject.datatimescope.db.generated.routines.Getmarkermapsetinfobydataset;
import org.gobiiproject.datatimescope.db.generated.routines.Getmarkermapsetinfobymarkerlist;
import org.gobiiproject.datatimescope.db.generated.routines.Getmarkernamesbydataset;
import org.gobiiproject.datatimescope.db.generated.routines.Getmarkernamesbydatasetandmap;
import org.gobiiproject.datatimescope.db.generated.routines.Getmarkerpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Getmarkerpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Getmarkerqcmetadatabydataset;
import org.gobiiproject.datatimescope.db.generated.routines.Getmarkerqcmetadatabymarkerlist;
import org.gobiiproject.datatimescope.db.generated.routines.Getmarkersinanalysis;
import org.gobiiproject.datatimescope.db.generated.routines.Getmarkersincallinganalysis;
import org.gobiiproject.datatimescope.db.generated.routines.Getmarkersinexperiment;
import org.gobiiproject.datatimescope.db.generated.routines.Getmarkersinlinkagegroup;
import org.gobiiproject.datatimescope.db.generated.routines.Getmarkersinmapset;
import org.gobiiproject.datatimescope.db.generated.routines.Getmarkersinproject;
import org.gobiiproject.datatimescope.db.generated.routines.Getmarkersinvendorprotocol;
import org.gobiiproject.datatimescope.db.generated.routines.Getmatrixposofmarkers1;
import org.gobiiproject.datatimescope.db.generated.routines.Getmatrixposofmarkers2;
import org.gobiiproject.datatimescope.db.generated.routines.Getmatrixposofsamples;
import org.gobiiproject.datatimescope.db.generated.routines.Getminimalmarkermetadatabydataset;
import org.gobiiproject.datatimescope.db.generated.routines.Getminimalmarkermetadatabydatasetandmap;
import org.gobiiproject.datatimescope.db.generated.routines.Getminimalsamplemetadatabydataset;
import org.gobiiproject.datatimescope.db.generated.routines.Getplatformpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Getplatformpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Getprojectnamesbypi;
import org.gobiiproject.datatimescope.db.generated.routines.Getprojectpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Getprojectpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Getpropertyidbynamesandtype;
import org.gobiiproject.datatimescope.db.generated.routines.Getprotocolpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Getprotocolpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Getrolesofcontact;
import org.gobiiproject.datatimescope.db.generated.routines.Getsampleqcmetadatabydataset;
import org.gobiiproject.datatimescope.db.generated.routines.Getsampleqcmetadatabymarkerlist1;
import org.gobiiproject.datatimescope.db.generated.routines.Getsampleqcmetadatabymarkerlist2;
import org.gobiiproject.datatimescope.db.generated.routines.Getsampleqcmetadatabymarkerlistx1;
import org.gobiiproject.datatimescope.db.generated.routines.Getsampleqcmetadatabymarkerlistx2;
import org.gobiiproject.datatimescope.db.generated.routines.Getsampleqcmetadatabysamplelist;
import org.gobiiproject.datatimescope.db.generated.routines.Gettimescoper;
import org.gobiiproject.datatimescope.db.generated.routines.Gettotaldnarunsindataset;
import org.gobiiproject.datatimescope.db.generated.routines.Gettotalmarkersindataset;
import org.gobiiproject.datatimescope.db.generated.routines.Gettotalprojects;
import org.gobiiproject.datatimescope.db.generated.routines.Hmac1;
import org.gobiiproject.datatimescope.db.generated.routines.Hmac2;
import org.gobiiproject.datatimescope.db.generated.routines.Max;
import org.gobiiproject.datatimescope.db.generated.routines.Min;
import org.gobiiproject.datatimescope.db.generated.routines.PgpArmorHeaders;
import org.gobiiproject.datatimescope.db.generated.routines.PgpKeyId;
import org.gobiiproject.datatimescope.db.generated.routines.PgpPubDecrypt1;
import org.gobiiproject.datatimescope.db.generated.routines.PgpPubDecrypt2;
import org.gobiiproject.datatimescope.db.generated.routines.PgpPubDecrypt3;
import org.gobiiproject.datatimescope.db.generated.routines.PgpPubDecryptBytea1;
import org.gobiiproject.datatimescope.db.generated.routines.PgpPubDecryptBytea2;
import org.gobiiproject.datatimescope.db.generated.routines.PgpPubDecryptBytea3;
import org.gobiiproject.datatimescope.db.generated.routines.PgpPubEncrypt1;
import org.gobiiproject.datatimescope.db.generated.routines.PgpPubEncrypt2;
import org.gobiiproject.datatimescope.db.generated.routines.PgpPubEncryptBytea1;
import org.gobiiproject.datatimescope.db.generated.routines.PgpPubEncryptBytea2;
import org.gobiiproject.datatimescope.db.generated.routines.PgpSymDecrypt1;
import org.gobiiproject.datatimescope.db.generated.routines.PgpSymDecrypt2;
import org.gobiiproject.datatimescope.db.generated.routines.PgpSymDecryptBytea1;
import org.gobiiproject.datatimescope.db.generated.routines.PgpSymDecryptBytea2;
import org.gobiiproject.datatimescope.db.generated.routines.PgpSymEncrypt1;
import org.gobiiproject.datatimescope.db.generated.routines.PgpSymEncrypt2;
import org.gobiiproject.datatimescope.db.generated.routines.PgpSymEncryptBytea1;
import org.gobiiproject.datatimescope.db.generated.routines.PgpSymEncryptBytea2;
import org.gobiiproject.datatimescope.db.generated.routines.RegexpMatches1;
import org.gobiiproject.datatimescope.db.generated.routines.RegexpMatches2;
import org.gobiiproject.datatimescope.db.generated.routines.RegexpReplace1;
import org.gobiiproject.datatimescope.db.generated.routines.RegexpReplace2;
import org.gobiiproject.datatimescope.db.generated.routines.RegexpSplitToArray1;
import org.gobiiproject.datatimescope.db.generated.routines.RegexpSplitToArray2;
import org.gobiiproject.datatimescope.db.generated.routines.RegexpSplitToTable1;
import org.gobiiproject.datatimescope.db.generated.routines.RegexpSplitToTable2;
import org.gobiiproject.datatimescope.db.generated.routines.Removeanalysisfromdataset;
import org.gobiiproject.datatimescope.db.generated.routines.Removereadtablefromrole;
import org.gobiiproject.datatimescope.db.generated.routines.Removerolefromcontact;
import org.gobiiproject.datatimescope.db.generated.routines.Removewritetablefromrole;
import org.gobiiproject.datatimescope.db.generated.routines.Replace;
import org.gobiiproject.datatimescope.db.generated.routines.Setdatasetjobstatusok;
import org.gobiiproject.datatimescope.db.generated.routines.Setdatawarehouseversion;
import org.gobiiproject.datatimescope.db.generated.routines.SplitPart;
import org.gobiiproject.datatimescope.db.generated.routines.Strpos;
import org.gobiiproject.datatimescope.db.generated.routines.Texticlike1;
import org.gobiiproject.datatimescope.db.generated.routines.Texticlike2;
import org.gobiiproject.datatimescope.db.generated.routines.Texticnlike1;
import org.gobiiproject.datatimescope.db.generated.routines.Texticnlike2;
import org.gobiiproject.datatimescope.db.generated.routines.Texticregexeq1;
import org.gobiiproject.datatimescope.db.generated.routines.Texticregexeq2;
import org.gobiiproject.datatimescope.db.generated.routines.Texticregexne1;
import org.gobiiproject.datatimescope.db.generated.routines.Texticregexne2;
import org.gobiiproject.datatimescope.db.generated.routines.Translate;
import org.gobiiproject.datatimescope.db.generated.routines.Updateanalysis1;
import org.gobiiproject.datatimescope.db.generated.routines.Updateanalysis2;
import org.gobiiproject.datatimescope.db.generated.routines.Updateanalysis3;
import org.gobiiproject.datatimescope.db.generated.routines.Updatecontact;
import org.gobiiproject.datatimescope.db.generated.routines.Updatecv;
import org.gobiiproject.datatimescope.db.generated.routines.Updatecvgroup;
import org.gobiiproject.datatimescope.db.generated.routines.Updatedataset;
import org.gobiiproject.datatimescope.db.generated.routines.Updatedatasetmarker;
import org.gobiiproject.datatimescope.db.generated.routines.Updatedbxref;
import org.gobiiproject.datatimescope.db.generated.routines.Updatedisplay;
import org.gobiiproject.datatimescope.db.generated.routines.Updatednarun;
import org.gobiiproject.datatimescope.db.generated.routines.Updatednarunpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Updatednarunpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Updatednasample1;
import org.gobiiproject.datatimescope.db.generated.routines.Updatednasample2;
import org.gobiiproject.datatimescope.db.generated.routines.Updatednasamplepropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Updatednasamplepropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Updateexperiment;
import org.gobiiproject.datatimescope.db.generated.routines.Updategermplasm;
import org.gobiiproject.datatimescope.db.generated.routines.Updategermplasmpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Updategermplasmpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Updatejob1;
import org.gobiiproject.datatimescope.db.generated.routines.Updatejob2;
import org.gobiiproject.datatimescope.db.generated.routines.Updatelinkagegroup1;
import org.gobiiproject.datatimescope.db.generated.routines.Updatelinkagegroup2;
import org.gobiiproject.datatimescope.db.generated.routines.Updatemanifest;
import org.gobiiproject.datatimescope.db.generated.routines.Updatemapset;
import org.gobiiproject.datatimescope.db.generated.routines.Updatemapsetpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Updatemapsetpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Updatemarker;
import org.gobiiproject.datatimescope.db.generated.routines.Updatemarkergroup1;
import org.gobiiproject.datatimescope.db.generated.routines.Updatemarkergroup2;
import org.gobiiproject.datatimescope.db.generated.routines.Updatemarkergroupname;
import org.gobiiproject.datatimescope.db.generated.routines.Updatemarkerlinkagegroup;
import org.gobiiproject.datatimescope.db.generated.routines.Updatemarkerpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Updatemarkerpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Updateorganization;
import org.gobiiproject.datatimescope.db.generated.routines.Updateplatform;
import org.gobiiproject.datatimescope.db.generated.routines.Updateplatformpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Updateplatformpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Updateproject;
import org.gobiiproject.datatimescope.db.generated.routines.Updateprojectpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Updateprojectpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Updateprotocol;
import org.gobiiproject.datatimescope.db.generated.routines.Updatereference;
import org.gobiiproject.datatimescope.db.generated.routines.Updaterole;
import org.gobiiproject.datatimescope.db.generated.routines.Updatevariant;
import org.gobiiproject.datatimescope.db.generated.routines.Updatevendorprotocol;
import org.gobiiproject.datatimescope.db.generated.routines.Upsertanalysisparameter;
import org.gobiiproject.datatimescope.db.generated.routines.Upsertdatasetvendorprotocol;
import org.gobiiproject.datatimescope.db.generated.routines.Upsertdnarunpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Upsertdnarunpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Upsertdnasamplepropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Upsertdnasamplepropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Upsertgermplasmpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Upsertgermplasmpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Upsertkvpfromforeigntable;
import org.gobiiproject.datatimescope.db.generated.routines.Upsertmapsetpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Upsertmapsetpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Upsertmarkergroup;
import org.gobiiproject.datatimescope.db.generated.routines.Upsertmarkerpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Upsertmarkerpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Upsertmarkertomarkergroupbyid;
import org.gobiiproject.datatimescope.db.generated.routines.Upsertmarkertomarkergroupbyname;
import org.gobiiproject.datatimescope.db.generated.routines.Upsertplatformpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Upsertplatformpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Upsertprojectpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Upsertprojectpropertybyname;
import org.gobiiproject.datatimescope.db.generated.routines.Upsertprotocolpropertybyid;
import org.gobiiproject.datatimescope.db.generated.routines.Upsertprotocolpropertybyname;
import org.gobiiproject.datatimescope.db.generated.tables.records.ContactRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.ExperimentRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.ManifestRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.RoleRecord;
import org.gobiiproject.datatimescope.db.generated.tables.records.VertexRecord;
import org.jooq.AggregateFunction;
import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Record;
import org.jooq.Result;


/**
 * Convenience access to all stored procedures and functions in public
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

    /**
     * Call <code>public.appendanalysistodataset</code>
     */
    public static void appendanalysistodataset(Configuration configuration, Integer datasetid, Integer analysisid) {
        Appendanalysistodataset p = new Appendanalysistodataset();
        p.setDatasetid(datasetid);
        p.setAnalysisid(analysisid);

        p.execute(configuration);
    }

    /**
     * Call <code>public.appendreadtabletorole</code>
     */
    public static void appendreadtabletorole(Configuration configuration, Integer roleid, Integer tableid) {
        Appendreadtabletorole p = new Appendreadtabletorole();
        p.setRoleid(roleid);
        p.setTableid(tableid);

        p.execute(configuration);
    }

    /**
     * Call <code>public.appendroletocontact</code>
     */
    public static void appendroletocontact(Configuration configuration, Integer contactid, Integer roleid) {
        Appendroletocontact p = new Appendroletocontact();
        p.setContactid(contactid);
        p.setRoleid(roleid);

        p.execute(configuration);
    }

    /**
     * Call <code>public.appendwritetabletorole</code>
     */
    public static void appendwritetabletorole(Configuration configuration, Integer roleid, Integer tableid) {
        Appendwritetabletorole p = new Appendwritetabletorole();
        p.setRoleid(roleid);
        p.setTableid(tableid);

        p.execute(configuration);
    }

    /**
     * Call <code>public.armor</code>
     */
    public static String armor1(Configuration configuration, byte[] __1) {
        Armor1 f = new Armor1();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.armor</code> as a field.
     */
    public static Field<String> armor1(byte[] __1) {
        Armor1 f = new Armor1();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Get <code>public.armor</code> as a field.
     */
    public static Field<String> armor1(Field<byte[]> __1) {
        Armor1 f = new Armor1();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Call <code>public.armor</code>
     */
    public static String armor2(Configuration configuration, byte[] __1, String[] __2, String[] __3) {
        Armor2 f = new Armor2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.armor</code> as a field.
     */
    public static Field<String> armor2(byte[] __1, String[] __2, String[] __3) {
        Armor2 f = new Armor2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Get <code>public.armor</code> as a field.
     */
    public static Field<String> armor2(Field<byte[]> __1, Field<String[]> __2, Field<String[]> __3) {
        Armor2 f = new Armor2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Object citext1(Configuration configuration, String __1) {
        Citext1 f = new Citext1();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Object> citext1(String __1) {
        Citext1 f = new Citext1();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Object> citext1(Field<String> __1) {
        Citext1 f = new Citext1();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Object citext2(Configuration configuration, Boolean __1) {
        Citext2 f = new Citext2();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Object> citext2(Boolean __1) {
        Citext2 f = new Citext2();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Object> citext2(Field<Boolean> __1) {
        Citext2 f = new Citext2();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Object citext3(Configuration configuration, Object __1) {
        Citext3 f = new Citext3();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Object> citext3(Object __1) {
        Citext3 f = new Citext3();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Object> citext3(Field<Object> __1) {
        Citext3 f = new Citext3();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Integer citextCmp(Configuration configuration, Object __1, Object __2) {
        CitextCmp f = new CitextCmp();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Integer> citextCmp(Object __1, Object __2) {
        CitextCmp f = new CitextCmp();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Integer> citextCmp(Field<Object> __1, Field<Object> __2) {
        CitextCmp f = new CitextCmp();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Boolean citextEq(Configuration configuration, Object __1, Object __2) {
        CitextEq f = new CitextEq();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> citextEq(Object __1, Object __2) {
        CitextEq f = new CitextEq();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> citextEq(Field<Object> __1, Field<Object> __2) {
        CitextEq f = new CitextEq();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Boolean citextGe(Configuration configuration, Object __1, Object __2) {
        CitextGe f = new CitextGe();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> citextGe(Object __1, Object __2) {
        CitextGe f = new CitextGe();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> citextGe(Field<Object> __1, Field<Object> __2) {
        CitextGe f = new CitextGe();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Boolean citextGt(Configuration configuration, Object __1, Object __2) {
        CitextGt f = new CitextGt();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> citextGt(Object __1, Object __2) {
        CitextGt f = new CitextGt();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> citextGt(Field<Object> __1, Field<Object> __2) {
        CitextGt f = new CitextGt();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Integer citextHash(Configuration configuration, Object __1) {
        CitextHash f = new CitextHash();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Integer> citextHash(Object __1) {
        CitextHash f = new CitextHash();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Integer> citextHash(Field<Object> __1) {
        CitextHash f = new CitextHash();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Object citextLarger(Configuration configuration, Object __1, Object __2) {
        CitextLarger f = new CitextLarger();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Object> citextLarger(Object __1, Object __2) {
        CitextLarger f = new CitextLarger();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Object> citextLarger(Field<Object> __1, Field<Object> __2) {
        CitextLarger f = new CitextLarger();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Boolean citextLe(Configuration configuration, Object __1, Object __2) {
        CitextLe f = new CitextLe();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> citextLe(Object __1, Object __2) {
        CitextLe f = new CitextLe();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> citextLe(Field<Object> __1, Field<Object> __2) {
        CitextLe f = new CitextLe();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Boolean citextLt(Configuration configuration, Object __1, Object __2) {
        CitextLt f = new CitextLt();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> citextLt(Object __1, Object __2) {
        CitextLt f = new CitextLt();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> citextLt(Field<Object> __1, Field<Object> __2) {
        CitextLt f = new CitextLt();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Boolean citextNe(Configuration configuration, Object __1, Object __2) {
        CitextNe f = new CitextNe();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> citextNe(Object __1, Object __2) {
        CitextNe f = new CitextNe();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> citextNe(Field<Object> __1, Field<Object> __2) {
        CitextNe f = new CitextNe();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Object citextSmaller(Configuration configuration, Object __1, Object __2) {
        CitextSmaller f = new CitextSmaller();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Object> citextSmaller(Object __1, Object __2) {
        CitextSmaller f = new CitextSmaller();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Object> citextSmaller(Field<Object> __1, Field<Object> __2) {
        CitextSmaller f = new CitextSmaller();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Object citextin(Configuration configuration, Object __1) {
        Citextin f = new Citextin();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Object> citextin(Object __1) {
        Citextin f = new Citextin();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Object> citextin(Field<Object> __1) {
        Citextin f = new Citextin();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Object citextout(Configuration configuration, Object __1) {
        Citextout f = new Citextout();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Object> citextout(Object __1) {
        Citextout f = new Citextout();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Object> citextout(Field<Object> __1) {
        Citextout f = new Citextout();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Object citextrecv(Configuration configuration, Object __1) {
        Citextrecv f = new Citextrecv();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Object> citextrecv(Object __1) {
        Citextrecv f = new Citextrecv();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Object> citextrecv(Field<Object> __1) {
        Citextrecv f = new Citextrecv();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static byte[] citextsend(Configuration configuration, Object __1) {
        Citextsend f = new Citextsend();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<byte[]> citextsend(Object __1) {
        Citextsend f = new Citextsend();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<byte[]> citextsend(Field<Object> __1) {
        Citextsend f = new Citextsend();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Integer createanalysis1(Configuration configuration, String analysisname, String analysisdescription, Integer typeid, String analysisprogram, String analysisprogramversion, String aanalysisalgorithm, String analysissourcename, String analysissourceversion, String analysissourceuri, Integer referenceid, Object analysisparameters, Timestamp analysistimeexecuted, Integer analysisstatus, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate) {
        Createanalysis1 p = new Createanalysis1();
        p.setAnalysisname(analysisname);
        p.setAnalysisdescription(analysisdescription);
        p.setTypeid(typeid);
        p.setAnalysisprogram(analysisprogram);
        p.setAnalysisprogramversion(analysisprogramversion);
        p.setAanalysisalgorithm(aanalysisalgorithm);
        p.setAnalysissourcename(analysissourcename);
        p.setAnalysissourceversion(analysissourceversion);
        p.setAnalysissourceuri(analysissourceuri);
        p.setReferenceid(referenceid);
        p.setAnalysisparameters(analysisparameters);
        p.setAnalysistimeexecuted(analysistimeexecuted);
        p.setAnalysisstatus(analysisstatus);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createanalysis</code>
     */
    public static Integer createanalysis2(Configuration configuration, String analysisname, String analysisdescription, Integer typeid, String analysisprogram, String analysisprogramversion, String aanalysisalgorithm, String analysissourcename, String analysissourceversion, String analysissourceuri, Integer referenceid, Timestamp analysistimeexecuted, Integer analysisstatus, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate) {
        Createanalysis2 p = new Createanalysis2();
        p.setAnalysisname(analysisname);
        p.setAnalysisdescription(analysisdescription);
        p.setTypeid(typeid);
        p.setAnalysisprogram(analysisprogram);
        p.setAnalysisprogramversion(analysisprogramversion);
        p.setAanalysisalgorithm(aanalysisalgorithm);
        p.setAnalysissourcename(analysissourcename);
        p.setAnalysissourceversion(analysissourceversion);
        p.setAnalysissourceuri(analysissourceuri);
        p.setReferenceid(referenceid);
        p.setAnalysistimeexecuted(analysistimeexecuted);
        p.setAnalysisstatus(analysisstatus);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createcontact</code>
     */
    public static Integer createcontact(Configuration configuration, String lastname, String firstname, String contactcode, String contactemail, Integer[] contactroles, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate, Integer organizationid, String uname) {
        Createcontact p = new Createcontact();
        p.setLastname(lastname);
        p.setFirstname(firstname);
        p.setContactcode(contactcode);
        p.setContactemail(contactemail);
        p.setContactroles(contactroles);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);
        p.setOrganizationid(organizationid);
        p.setUname(uname);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createcv</code>
     */
    public static Integer createcv(Configuration configuration, Integer pcvgroupid, String pcvterm, String pcvdefinition, Integer pcvrank, String pabbreviation, Integer pdbxrefid, Integer pstatus) {
        Createcv p = new Createcv();
        p.setPcvgroupid(pcvgroupid);
        p.setPcvterm(pcvterm);
        p.setPcvdefinition(pcvdefinition);
        p.setPcvrank(pcvrank);
        p.setPabbreviation(pabbreviation);
        p.setPdbxrefid(pdbxrefid);
        p.setPstatus(pstatus);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createcvgroup</code>
     */
    public static Integer createcvgroup(Configuration configuration, String pname, String pdefinition, Integer ptype) {
        Createcvgroup p = new Createcvgroup();
        p.setPname(pname);
        p.setPdefinition(pdefinition);
        p.setPtype(ptype);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createcvingroup</code>
     */
    public static Integer createcvingroup(Configuration configuration, String pgroupname, Integer pgrouptype, String pcvterm, String pcvdefinition, Integer pcvrank, String pabbreviation, Integer pdbxrefid, Integer pstatus) {
        Createcvingroup p = new Createcvingroup();
        p.setPgroupname(pgroupname);
        p.setPgrouptype(pgrouptype);
        p.setPcvterm(pcvterm);
        p.setPcvdefinition(pcvdefinition);
        p.setPcvrank(pcvrank);
        p.setPabbreviation(pabbreviation);
        p.setPdbxrefid(pdbxrefid);
        p.setPstatus(pstatus);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createdataset</code>
     */
    public static Integer createdataset(Configuration configuration, String datasetname, Integer experimentid, Integer callinganalysisid, Integer[] datasetanalyses, String datatable, String datafile, String qualitytable, String qualityfile, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate, Integer datasetstatus, Integer typeid, Integer jobid) {
        Createdataset p = new Createdataset();
        p.setDatasetname(datasetname);
        p.setExperimentid(experimentid);
        p.setCallinganalysisid(callinganalysisid);
        p.setDatasetanalyses(datasetanalyses);
        p.setDatatable(datatable);
        p.setDatafile(datafile);
        p.setQualitytable(qualitytable);
        p.setQualityfile(qualityfile);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);
        p.setDatasetstatus(datasetstatus);
        p.setTypeid(typeid);
        p.setJobid(jobid);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createdbxref</code>
     */
    public static Integer createdbxref(Configuration configuration, String paccession, String pver, String pdescription, String pdbname, String purl) {
        Createdbxref p = new Createdbxref();
        p.setPaccession(paccession);
        p.setPver(pver);
        p.setPdescription(pdescription);
        p.setPdbname(pdbname);
        p.setPurl(purl);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createdisplay</code>
     */
    public static Integer createdisplay(Configuration configuration, String tablename, String columnname, String displayname, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate, Integer displayrank) {
        Createdisplay p = new Createdisplay();
        p.setTablename(tablename);
        p.setColumnname(columnname);
        p.setDisplayname(displayname);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);
        p.setDisplayrank(displayrank);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.creatednarun</code>
     */
    public static Integer creatednarun(Configuration configuration, Integer experimentid, Integer dnasampleid, String dnarunname, String dnaruncode) {
        Creatednarun p = new Creatednarun();
        p.setExperimentid(experimentid);
        p.setDnasampleid(dnasampleid);
        p.setDnarunname(dnarunname);
        p.setDnaruncode(dnaruncode);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.creatednasample</code>
     */
    public static Integer creatednasample1(Configuration configuration, String dnasamplename, String dnasamplecode, String dnasampleplatename, String dnasamplenum, String wellrow, String wellcol, Integer projectid, Integer germplasmid, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate, Integer dnasamplestatus) {
        Creatednasample1 p = new Creatednasample1();
        p.setDnasamplename(dnasamplename);
        p.setDnasamplecode(dnasamplecode);
        p.setDnasampleplatename(dnasampleplatename);
        p.setDnasamplenum(dnasamplenum);
        p.setWellrow(wellrow);
        p.setWellcol(wellcol);
        p.setProjectid(projectid);
        p.setGermplasmid(germplasmid);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);
        p.setDnasamplestatus(dnasamplestatus);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.creatednasample</code>
     */
    public static Integer creatednasample2(Configuration configuration, String dnasamplename, String dnasamplecode, String dnasampleplatename, String dnasamplenum, String wellrow, String wellcol, Integer projectid, Integer germplasmid, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate, Integer dnasamplestatus, String _Uuid) {
        Creatednasample2 p = new Creatednasample2();
        p.setDnasamplename(dnasamplename);
        p.setDnasamplecode(dnasamplecode);
        p.setDnasampleplatename(dnasampleplatename);
        p.setDnasamplenum(dnasamplenum);
        p.setWellrow(wellrow);
        p.setWellcol(wellcol);
        p.setProjectid(projectid);
        p.setGermplasmid(germplasmid);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);
        p.setDnasamplestatus(dnasamplestatus);
        p.set_Uuid(_Uuid);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createedge</code>
     */
    public static Integer createedge(Configuration configuration, Integer _StartVertex, Integer _EndVertex, Integer _TypeId, String _Criterion) {
        Createedge p = new Createedge();
        p.set_StartVertex(_StartVertex);
        p.set_EndVertex(_EndVertex);
        p.set_TypeId(_TypeId);
        p.set_Criterion(_Criterion);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createexperiment</code>
     */
    public static Integer createexperiment(Configuration configuration, String pname, String pcode, Integer pprojectid, Integer pvendorprotocolid, Integer pmanifestid, String pdatafile, Integer pcreatedby, Date pcreateddate, Integer pmodifiedby, Date pmodifieddate, Integer pstatus) {
        Createexperiment p = new Createexperiment();
        p.setPname(pname);
        p.setPcode(pcode);
        p.setPprojectid(pprojectid);
        p.setPvendorprotocolid(pvendorprotocolid);
        p.setPmanifestid(pmanifestid);
        p.setPdatafile(pdatafile);
        p.setPcreatedby(pcreatedby);
        p.setPcreateddate(pcreateddate);
        p.setPmodifiedby(pmodifiedby);
        p.setPmodifieddate(pmodifieddate);
        p.setPstatus(pstatus);

        p.execute(configuration);
        return p.getExpid();
    }

    /**
     * Call <code>public.creategermplasm</code>
     */
    public static Integer creategermplasm(Configuration configuration, String germplasmname, String externalcode, Integer speciesid, Integer typeid, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate, Integer germplasmstatus, String germplasmcode) {
        Creategermplasm p = new Creategermplasm();
        p.setGermplasmname(germplasmname);
        p.setExternalcode(externalcode);
        p.setSpeciesid(speciesid);
        p.setTypeid(typeid);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);
        p.setGermplasmstatus(germplasmstatus);
        p.setGermplasmcode(germplasmcode);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createjob</code>
     */
    public static Integer createjob1(Configuration configuration, String _Name, String _Type, String _PayloadType, String _Status, String _Message, Integer _SubmittedBy) {
        Createjob1 p = new Createjob1();
        p.set_Name(_Name);
        p.set_Type(_Type);
        p.set_PayloadType(_PayloadType);
        p.set_Status(_Status);
        p.set_Message(_Message);
        p.set_SubmittedBy(_SubmittedBy);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createjob</code>
     */
    public static Integer createjob2(Configuration configuration, String _Name, Integer _TypeId, Integer _PayloadTypeId, Integer _Status, String _Message, Integer _SubmittedBy) {
        Createjob2 p = new Createjob2();
        p.set_Name(_Name);
        p.set_TypeId(_TypeId);
        p.set_PayloadTypeId(_PayloadTypeId);
        p.set_Status(_Status);
        p.set_Message(_Message);
        p.set_SubmittedBy(_SubmittedBy);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createlinkagegroup</code>
     */
    public static Integer createlinkagegroup1(Configuration configuration, String linkagegroupname, Integer linkagegroupstart, Integer linkagegroupstop, Integer mapid, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate) {
        Createlinkagegroup1 p = new Createlinkagegroup1();
        p.setLinkagegroupname(linkagegroupname);
        p.setLinkagegroupstart(linkagegroupstart);
        p.setLinkagegroupstop(linkagegroupstop);
        p.setMapid(mapid);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createlinkagegroup</code>
     */
    public static Integer createlinkagegroup2(Configuration configuration, String linkagegroupname, BigDecimal linkagegroupstart, BigDecimal linkagegroupstop, Integer mapid, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate) {
        Createlinkagegroup2 p = new Createlinkagegroup2();
        p.setLinkagegroupname(linkagegroupname);
        p.setLinkagegroupstart(linkagegroupstart);
        p.setLinkagegroupstop(linkagegroupstop);
        p.setMapid(mapid);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createmanifest</code>
     */
    public static Integer createmanifest(Configuration configuration, String manifestname, String manifestcode, String filepath, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate) {
        Createmanifest p = new Createmanifest();
        p.setManifestname(manifestname);
        p.setManifestcode(manifestcode);
        p.setFilepath(filepath);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);

        p.execute(configuration);
        return p.getMid();
    }

    /**
     * Call <code>public.createmapset</code>
     */
    public static Integer createmapset(Configuration configuration, String mapsetname, String mapsetcode, String mapsetdescription, Integer referenceid, Integer typeid, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate, Integer mapsetstatus) {
        Createmapset p = new Createmapset();
        p.setMapsetname(mapsetname);
        p.setMapsetcode(mapsetcode);
        p.setMapsetdescription(mapsetdescription);
        p.setReferenceid(referenceid);
        p.setTypeid(typeid);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);
        p.setMapsetstatus(mapsetstatus);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createmarker</code>
     */
    public static Integer createmarker(Configuration configuration, Integer platformid, Integer variantid, String markername, String markercode, String markerref, String[] markeralts, String markersequence, Integer referenceid, Integer strandid, Integer markerstatus) {
        Createmarker p = new Createmarker();
        p.setPlatformid(platformid);
        p.setVariantid(variantid);
        p.setMarkername(markername);
        p.setMarkercode(markercode);
        p.setMarkerref(markerref);
        p.setMarkeralts(markeralts);
        p.setMarkersequence(markersequence);
        p.setReferenceid(referenceid);
        p.setStrandid(strandid);
        p.setMarkerstatus(markerstatus);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createmarkergroup</code>
     */
    public static Integer createmarkergroup(Configuration configuration, String markergroupname, String markergroupcode, String germplasmgroup, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate, Integer markergroupstatus) {
        Createmarkergroup p = new Createmarkergroup();
        p.setMarkergroupname(markergroupname);
        p.setMarkergroupcode(markergroupcode);
        p.setGermplasmgroup(germplasmgroup);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);
        p.setMarkergroupstatus(markergroupstatus);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createmarkerlinkagegroup</code>
     */
    public static Integer createmarkerlinkagegroup(Configuration configuration, Integer markerid, BigDecimal markerlinkagegroupstart, BigDecimal markerlinkagegroupstop, Integer linkagegroupid) {
        Createmarkerlinkagegroup p = new Createmarkerlinkagegroup();
        p.setMarkerid(markerid);
        p.setMarkerlinkagegroupstart(markerlinkagegroupstart);
        p.setMarkerlinkagegroupstop(markerlinkagegroupstop);
        p.setLinkagegroupid(linkagegroupid);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createorganization</code>
     */
    public static Integer createorganization(Configuration configuration, String orgname, String orgaddress, String orgwebsite, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate, Integer orgstatus) {
        Createorganization p = new Createorganization();
        p.setOrgname(orgname);
        p.setOrgaddress(orgaddress);
        p.setOrgwebsite(orgwebsite);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);
        p.setOrgstatus(orgstatus);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createplatform</code>
     */
    public static Integer createplatform(Configuration configuration, String platformname, String platformcode, String platformdescription, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate, Integer platformstatus, Integer typeid) {
        Createplatform p = new Createplatform();
        p.setPlatformname(platformname);
        p.setPlatformcode(platformcode);
        p.setPlatformdescription(platformdescription);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);
        p.setPlatformstatus(platformstatus);
        p.setTypeid(typeid);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createproject</code>
     */
    public static Integer createproject(Configuration configuration, String projectname, String projectcode, String projectdescription, Integer picontact, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate, Integer projectstatus) {
        Createproject p = new Createproject();
        p.setProjectname(projectname);
        p.setProjectcode(projectcode);
        p.setProjectdescription(projectdescription);
        p.setPicontact(picontact);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);
        p.setProjectstatus(projectstatus);

        p.execute(configuration);
        return p.getProjectid();
    }

    /**
     * Call <code>public.createprotocol</code>
     */
    public static Integer createprotocol(Configuration configuration, String pname, String pdescription, Integer ptypeid, Integer pplatformid, Integer pcreatedby, Date pcreateddate, Integer pmodifiedby, Date pmodifieddate, Integer pstatus) {
        Createprotocol p = new Createprotocol();
        p.setPname(pname);
        p.setPdescription(pdescription);
        p.setPtypeid(ptypeid);
        p.setPplatformid(pplatformid);
        p.setPcreatedby(pcreatedby);
        p.setPcreateddate(pcreateddate);
        p.setPmodifiedby(pmodifiedby);
        p.setPmodifieddate(pmodifieddate);
        p.setPstatus(pstatus);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createreference</code>
     */
    public static Integer createreference(Configuration configuration, String referencename, String referenceversion, String referencelink, String filepath, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate) {
        Createreference p = new Createreference();
        p.setReferencename(referencename);
        p.setReferenceversion(referenceversion);
        p.setReferencelink(referencelink);
        p.setFilepath(filepath);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createrole</code>
     */
    public static Integer createrole(Configuration configuration, String rolename, String rolecode, Integer[] readtables, Integer[] writetables) {
        Createrole p = new Createrole();
        p.setRolename(rolename);
        p.setRolecode(rolecode);
        p.setReadtables(readtables);
        p.setWritetables(writetables);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createtimescoper</code>
     */
    public static Integer createtimescoper(Configuration configuration, String _Firstname, String _Lastname, String _Username, String _Password, String _Email, Integer _Role) {
        Createtimescoper p = new Createtimescoper();
        p.set_Firstname(_Firstname);
        p.set_Lastname(_Lastname);
        p.set_Username(_Username);
        p.set_Password(_Password);
        p.set_Email(_Email);
        p.set_Role(_Role);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createvariant</code>
     */
    public static Integer createvariant(Configuration configuration, String variantcode, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate) {
        Createvariant p = new Createvariant();
        p.setVariantcode(variantcode);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createvendorprotocol</code>
     */
    public static Integer createvendorprotocol(Configuration configuration, String pname, Integer pvendorid, Integer pprotocolid, Integer pstatus) {
        Createvendorprotocol p = new Createvendorprotocol();
        p.setPname(pname);
        p.setPvendorid(pvendorid);
        p.setPprotocolid(pprotocolid);
        p.setPstatus(pstatus);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.createvertex</code>
     */
    public static Integer createvertex(Configuration configuration, String _Name, Integer _TypeId, String _TableName, String _DataLoc, String _Criterion, String _Alias, Integer _Relevance, Boolean _IsEntry) {
        Createvertex p = new Createvertex();
        p.set_Name(_Name);
        p.set_TypeId(_TypeId);
        p.set_TableName(_TableName);
        p.set_DataLoc(_DataLoc);
        p.set_Criterion(_Criterion);
        p.set_Alias(_Alias);
        p.set_Relevance(_Relevance);
        p.set_IsEntry(_IsEntry);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.crypt</code>
     */
    public static String crypt(Configuration configuration, String __1, String __2) {
        Crypt f = new Crypt();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.crypt</code> as a field.
     */
    public static Field<String> crypt(String __1, String __2) {
        Crypt f = new Crypt();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.crypt</code> as a field.
     */
    public static Field<String> crypt(Field<String> __1, Field<String> __2) {
        Crypt f = new Crypt();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public.dearmor</code>
     */
    public static byte[] dearmor(Configuration configuration, String __1) {
        Dearmor f = new Dearmor();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.dearmor</code> as a field.
     */
    public static Field<byte[]> dearmor(String __1) {
        Dearmor f = new Dearmor();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Get <code>public.dearmor</code> as a field.
     */
    public static Field<byte[]> dearmor(Field<String> __1) {
        Dearmor f = new Dearmor();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Call <code>public.decrypt</code>
     */
    public static byte[] decrypt(Configuration configuration, byte[] __1, byte[] __2, String __3) {
        Decrypt f = new Decrypt();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.decrypt</code> as a field.
     */
    public static Field<byte[]> decrypt(byte[] __1, byte[] __2, String __3) {
        Decrypt f = new Decrypt();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Get <code>public.decrypt</code> as a field.
     */
    public static Field<byte[]> decrypt(Field<byte[]> __1, Field<byte[]> __2, Field<String> __3) {
        Decrypt f = new Decrypt();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Call <code>public.decrypt_iv</code>
     */
    public static byte[] decryptIv(Configuration configuration, byte[] __1, byte[] __2, byte[] __3, String __4) {
        DecryptIv f = new DecryptIv();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.decrypt_iv</code> as a field.
     */
    public static Field<byte[]> decryptIv(byte[] __1, byte[] __2, byte[] __3, String __4) {
        DecryptIv f = new DecryptIv();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);

        return f.asField();
    }

    /**
     * Get <code>public.decrypt_iv</code> as a field.
     */
    public static Field<byte[]> decryptIv(Field<byte[]> __1, Field<byte[]> __2, Field<byte[]> __3, Field<String> __4) {
        DecryptIv f = new DecryptIv();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);

        return f.asField();
    }

    /**
     * Call <code>public.deleteanalysis</code>
     */
    public static Integer deleteanalysis(Configuration configuration, Integer id) {
        Deleteanalysis f = new Deleteanalysis();
        f.setId(id);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deleteanalysis</code> as a field.
     */
    public static Field<Integer> deleteanalysis(Integer id) {
        Deleteanalysis f = new Deleteanalysis();
        f.setId(id);

        return f.asField();
    }

    /**
     * Get <code>public.deleteanalysis</code> as a field.
     */
    public static Field<Integer> deleteanalysis(Field<Integer> id) {
        Deleteanalysis f = new Deleteanalysis();
        f.setId(id);

        return f.asField();
    }

    /**
     * Call <code>public.deleteanalysisparameter</code>
     */
    public static String deleteanalysisparameter(Configuration configuration, Integer id, String parametername) {
        Deleteanalysisparameter f = new Deleteanalysisparameter();
        f.setId(id);
        f.setParametername(parametername);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deleteanalysisparameter</code> as a field.
     */
    public static Field<String> deleteanalysisparameter(Integer id, String parametername) {
        Deleteanalysisparameter f = new Deleteanalysisparameter();
        f.setId(id);
        f.setParametername(parametername);

        return f.asField();
    }

    /**
     * Get <code>public.deleteanalysisparameter</code> as a field.
     */
    public static Field<String> deleteanalysisparameter(Field<Integer> id, Field<String> parametername) {
        Deleteanalysisparameter f = new Deleteanalysisparameter();
        f.setId(id);
        f.setParametername(parametername);

        return f.asField();
    }

    /**
     * Call <code>public.deletecontact</code>
     */
    public static Integer deletecontact(Configuration configuration, Integer id) {
        Deletecontact f = new Deletecontact();
        f.setId(id);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletecontact</code> as a field.
     */
    public static Field<Integer> deletecontact(Integer id) {
        Deletecontact f = new Deletecontact();
        f.setId(id);

        return f.asField();
    }

    /**
     * Get <code>public.deletecontact</code> as a field.
     */
    public static Field<Integer> deletecontact(Field<Integer> id) {
        Deletecontact f = new Deletecontact();
        f.setId(id);

        return f.asField();
    }

    /**
     * Call <code>public.deletecv</code>
     */
    public static Integer deletecv(Configuration configuration, Integer id) {
        Deletecv f = new Deletecv();
        f.setId(id);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletecv</code> as a field.
     */
    public static Field<Integer> deletecv(Integer id) {
        Deletecv f = new Deletecv();
        f.setId(id);

        return f.asField();
    }

    /**
     * Get <code>public.deletecv</code> as a field.
     */
    public static Field<Integer> deletecv(Field<Integer> id) {
        Deletecv f = new Deletecv();
        f.setId(id);

        return f.asField();
    }

    /**
     * Call <code>public.deletecvgroup</code>
     */
    public static Integer deletecvgroup(Configuration configuration, Integer id) {
        Deletecvgroup f = new Deletecvgroup();
        f.setId(id);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletecvgroup</code> as a field.
     */
    public static Field<Integer> deletecvgroup(Integer id) {
        Deletecvgroup f = new Deletecvgroup();
        f.setId(id);

        return f.asField();
    }

    /**
     * Get <code>public.deletecvgroup</code> as a field.
     */
    public static Field<Integer> deletecvgroup(Field<Integer> id) {
        Deletecvgroup f = new Deletecvgroup();
        f.setId(id);

        return f.asField();
    }

    /**
     * Call <code>public.deletedataset</code>
     */
    public static Integer deletedataset(Configuration configuration, Integer id) {
        Deletedataset f = new Deletedataset();
        f.setId(id);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletedataset</code> as a field.
     */
    public static Field<Integer> deletedataset(Integer id) {
        Deletedataset f = new Deletedataset();
        f.setId(id);

        return f.asField();
    }

    /**
     * Get <code>public.deletedataset</code> as a field.
     */
    public static Field<Integer> deletedataset(Field<Integer> id) {
        Deletedataset f = new Deletedataset();
        f.setId(id);

        return f.asField();
    }

    /**
     * Call <code>public.deletedatasetdnarunindices</code>
     */
    public static Integer deletedatasetdnarunindices(Configuration configuration, Integer datasetid) {
        Deletedatasetdnarunindices f = new Deletedatasetdnarunindices();
        f.setDatasetid(datasetid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletedatasetdnarunindices</code> as a field.
     */
    public static Field<Integer> deletedatasetdnarunindices(Integer datasetid) {
        Deletedatasetdnarunindices f = new Deletedatasetdnarunindices();
        f.setDatasetid(datasetid);

        return f.asField();
    }

    /**
     * Get <code>public.deletedatasetdnarunindices</code> as a field.
     */
    public static Field<Integer> deletedatasetdnarunindices(Field<Integer> datasetid) {
        Deletedatasetdnarunindices f = new Deletedatasetdnarunindices();
        f.setDatasetid(datasetid);

        return f.asField();
    }

    /**
     * Call <code>public.deletedatasetmarkerindices</code>
     */
    public static Integer deletedatasetmarkerindices(Configuration configuration, Integer datasetid) {
        Deletedatasetmarkerindices f = new Deletedatasetmarkerindices();
        f.setDatasetid(datasetid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletedatasetmarkerindices</code> as a field.
     */
    public static Field<Integer> deletedatasetmarkerindices(Integer datasetid) {
        Deletedatasetmarkerindices f = new Deletedatasetmarkerindices();
        f.setDatasetid(datasetid);

        return f.asField();
    }

    /**
     * Get <code>public.deletedatasetmarkerindices</code> as a field.
     */
    public static Field<Integer> deletedatasetmarkerindices(Field<Integer> datasetid) {
        Deletedatasetmarkerindices f = new Deletedatasetmarkerindices();
        f.setDatasetid(datasetid);

        return f.asField();
    }

    /**
     * Call <code>public.deletedbxref</code>
     */
    public static Integer deletedbxref(Configuration configuration, Integer id) {
        Deletedbxref f = new Deletedbxref();
        f.setId(id);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletedbxref</code> as a field.
     */
    public static Field<Integer> deletedbxref(Integer id) {
        Deletedbxref f = new Deletedbxref();
        f.setId(id);

        return f.asField();
    }

    /**
     * Get <code>public.deletedbxref</code> as a field.
     */
    public static Field<Integer> deletedbxref(Field<Integer> id) {
        Deletedbxref f = new Deletedbxref();
        f.setId(id);

        return f.asField();
    }

    /**
     * Call <code>public.deletedisplay</code>
     */
    public static Integer deletedisplay(Configuration configuration, Integer id) {
        Deletedisplay f = new Deletedisplay();
        f.setId(id);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletedisplay</code> as a field.
     */
    public static Field<Integer> deletedisplay(Integer id) {
        Deletedisplay f = new Deletedisplay();
        f.setId(id);

        return f.asField();
    }

    /**
     * Get <code>public.deletedisplay</code> as a field.
     */
    public static Field<Integer> deletedisplay(Field<Integer> id) {
        Deletedisplay f = new Deletedisplay();
        f.setId(id);

        return f.asField();
    }

    /**
     * Call <code>public.deletednarun</code>
     */
    public static Integer deletednarun(Configuration configuration, Integer id) {
        Deletednarun f = new Deletednarun();
        f.setId(id);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletednarun</code> as a field.
     */
    public static Field<Integer> deletednarun(Integer id) {
        Deletednarun f = new Deletednarun();
        f.setId(id);

        return f.asField();
    }

    /**
     * Get <code>public.deletednarun</code> as a field.
     */
    public static Field<Integer> deletednarun(Field<Integer> id) {
        Deletednarun f = new Deletednarun();
        f.setId(id);

        return f.asField();
    }

    /**
     * Call <code>public.deletednarunpropertybyid</code>
     */
    public static Integer deletednarunpropertybyid(Configuration configuration, Integer id, Integer propertyid) {
        Deletednarunpropertybyid f = new Deletednarunpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletednarunpropertybyid</code> as a field.
     */
    public static Field<Integer> deletednarunpropertybyid(Integer id, Integer propertyid) {
        Deletednarunpropertybyid f = new Deletednarunpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Get <code>public.deletednarunpropertybyid</code> as a field.
     */
    public static Field<Integer> deletednarunpropertybyid(Field<Integer> id, Field<Integer> propertyid) {
        Deletednarunpropertybyid f = new Deletednarunpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Call <code>public.deletednarunpropertybyname</code>
     */
    public static String deletednarunpropertybyname(Configuration configuration, Integer id, String propertyname) {
        Deletednarunpropertybyname f = new Deletednarunpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletednarunpropertybyname</code> as a field.
     */
    public static Field<String> deletednarunpropertybyname(Integer id, String propertyname) {
        Deletednarunpropertybyname f = new Deletednarunpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);

        return f.asField();
    }

    /**
     * Get <code>public.deletednarunpropertybyname</code> as a field.
     */
    public static Field<String> deletednarunpropertybyname(Field<Integer> id, Field<String> propertyname) {
        Deletednarunpropertybyname f = new Deletednarunpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);

        return f.asField();
    }

    /**
     * Call <code>public.deletednasample</code>
     */
    public static Integer deletednasample(Configuration configuration, Integer id) {
        Deletednasample f = new Deletednasample();
        f.setId(id);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletednasample</code> as a field.
     */
    public static Field<Integer> deletednasample(Integer id) {
        Deletednasample f = new Deletednasample();
        f.setId(id);

        return f.asField();
    }

    /**
     * Get <code>public.deletednasample</code> as a field.
     */
    public static Field<Integer> deletednasample(Field<Integer> id) {
        Deletednasample f = new Deletednasample();
        f.setId(id);

        return f.asField();
    }

    /**
     * Call <code>public.deletednasamplepropertybyid</code>
     */
    public static Integer deletednasamplepropertybyid(Configuration configuration, Integer id, Integer propertyid) {
        Deletednasamplepropertybyid f = new Deletednasamplepropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletednasamplepropertybyid</code> as a field.
     */
    public static Field<Integer> deletednasamplepropertybyid(Integer id, Integer propertyid) {
        Deletednasamplepropertybyid f = new Deletednasamplepropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Get <code>public.deletednasamplepropertybyid</code> as a field.
     */
    public static Field<Integer> deletednasamplepropertybyid(Field<Integer> id, Field<Integer> propertyid) {
        Deletednasamplepropertybyid f = new Deletednasamplepropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Call <code>public.deletednasamplepropertybyname</code>
     */
    public static String deletednasamplepropertybyname(Configuration configuration, Integer id, String propertyname) {
        Deletednasamplepropertybyname f = new Deletednasamplepropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletednasamplepropertybyname</code> as a field.
     */
    public static Field<String> deletednasamplepropertybyname(Integer id, String propertyname) {
        Deletednasamplepropertybyname f = new Deletednasamplepropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);

        return f.asField();
    }

    /**
     * Get <code>public.deletednasamplepropertybyname</code> as a field.
     */
    public static Field<String> deletednasamplepropertybyname(Field<Integer> id, Field<String> propertyname) {
        Deletednasamplepropertybyname f = new Deletednasamplepropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);

        return f.asField();
    }

    /**
     * Call <code>public.deleteexperiment</code>
     */
    public static Integer deleteexperiment(Configuration configuration, Integer eid) {
        Deleteexperiment f = new Deleteexperiment();
        f.setEid(eid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deleteexperiment</code> as a field.
     */
    public static Field<Integer> deleteexperiment(Integer eid) {
        Deleteexperiment f = new Deleteexperiment();
        f.setEid(eid);

        return f.asField();
    }

    /**
     * Get <code>public.deleteexperiment</code> as a field.
     */
    public static Field<Integer> deleteexperiment(Field<Integer> eid) {
        Deleteexperiment f = new Deleteexperiment();
        f.setEid(eid);

        return f.asField();
    }

    /**
     * Call <code>public.deletegermplasm</code>
     */
    public static Integer deletegermplasm(Configuration configuration, Integer id) {
        Deletegermplasm f = new Deletegermplasm();
        f.setId(id);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletegermplasm</code> as a field.
     */
    public static Field<Integer> deletegermplasm(Integer id) {
        Deletegermplasm f = new Deletegermplasm();
        f.setId(id);

        return f.asField();
    }

    /**
     * Get <code>public.deletegermplasm</code> as a field.
     */
    public static Field<Integer> deletegermplasm(Field<Integer> id) {
        Deletegermplasm f = new Deletegermplasm();
        f.setId(id);

        return f.asField();
    }

    /**
     * Call <code>public.deletegermplasmpropertybyid</code>
     */
    public static Integer deletegermplasmpropertybyid(Configuration configuration, Integer id, Integer propertyid) {
        Deletegermplasmpropertybyid f = new Deletegermplasmpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletegermplasmpropertybyid</code> as a field.
     */
    public static Field<Integer> deletegermplasmpropertybyid(Integer id, Integer propertyid) {
        Deletegermplasmpropertybyid f = new Deletegermplasmpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Get <code>public.deletegermplasmpropertybyid</code> as a field.
     */
    public static Field<Integer> deletegermplasmpropertybyid(Field<Integer> id, Field<Integer> propertyid) {
        Deletegermplasmpropertybyid f = new Deletegermplasmpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Call <code>public.deletegermplasmpropertybyname</code>
     */
    public static String deletegermplasmpropertybyname(Configuration configuration, Integer id, String propertyname) {
        Deletegermplasmpropertybyname f = new Deletegermplasmpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletegermplasmpropertybyname</code> as a field.
     */
    public static Field<String> deletegermplasmpropertybyname(Integer id, String propertyname) {
        Deletegermplasmpropertybyname f = new Deletegermplasmpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);

        return f.asField();
    }

    /**
     * Get <code>public.deletegermplasmpropertybyname</code> as a field.
     */
    public static Field<String> deletegermplasmpropertybyname(Field<Integer> id, Field<String> propertyname) {
        Deletegermplasmpropertybyname f = new Deletegermplasmpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);

        return f.asField();
    }

    /**
     * Call <code>public.deletejob</code>
     */
    public static Integer deletejob(Configuration configuration, Integer id) {
        Deletejob f = new Deletejob();
        f.setId(id);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletejob</code> as a field.
     */
    public static Field<Integer> deletejob(Integer id) {
        Deletejob f = new Deletejob();
        f.setId(id);

        return f.asField();
    }

    /**
     * Get <code>public.deletejob</code> as a field.
     */
    public static Field<Integer> deletejob(Field<Integer> id) {
        Deletejob f = new Deletejob();
        f.setId(id);

        return f.asField();
    }

    /**
     * Call <code>public.deletelinkagegroup</code>
     */
    public static Integer deletelinkagegroup(Configuration configuration, Integer id) {
        Deletelinkagegroup f = new Deletelinkagegroup();
        f.setId(id);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletelinkagegroup</code> as a field.
     */
    public static Field<Integer> deletelinkagegroup(Integer id) {
        Deletelinkagegroup f = new Deletelinkagegroup();
        f.setId(id);

        return f.asField();
    }

    /**
     * Get <code>public.deletelinkagegroup</code> as a field.
     */
    public static Field<Integer> deletelinkagegroup(Field<Integer> id) {
        Deletelinkagegroup f = new Deletelinkagegroup();
        f.setId(id);

        return f.asField();
    }

    /**
     * Call <code>public.deletemanifest</code>
     */
    public static Integer deletemanifest(Configuration configuration, Integer id) {
        Deletemanifest f = new Deletemanifest();
        f.setId(id);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletemanifest</code> as a field.
     */
    public static Field<Integer> deletemanifest(Integer id) {
        Deletemanifest f = new Deletemanifest();
        f.setId(id);

        return f.asField();
    }

    /**
     * Get <code>public.deletemanifest</code> as a field.
     */
    public static Field<Integer> deletemanifest(Field<Integer> id) {
        Deletemanifest f = new Deletemanifest();
        f.setId(id);

        return f.asField();
    }

    /**
     * Call <code>public.deletemapset</code>
     */
    public static Integer deletemapset(Configuration configuration, Integer id) {
        Deletemapset f = new Deletemapset();
        f.setId(id);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletemapset</code> as a field.
     */
    public static Field<Integer> deletemapset(Integer id) {
        Deletemapset f = new Deletemapset();
        f.setId(id);

        return f.asField();
    }

    /**
     * Get <code>public.deletemapset</code> as a field.
     */
    public static Field<Integer> deletemapset(Field<Integer> id) {
        Deletemapset f = new Deletemapset();
        f.setId(id);

        return f.asField();
    }

    /**
     * Call <code>public.deletemapsetpropertybyid</code>
     */
    public static Integer deletemapsetpropertybyid(Configuration configuration, Integer id, Integer propertyid) {
        Deletemapsetpropertybyid f = new Deletemapsetpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletemapsetpropertybyid</code> as a field.
     */
    public static Field<Integer> deletemapsetpropertybyid(Integer id, Integer propertyid) {
        Deletemapsetpropertybyid f = new Deletemapsetpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Get <code>public.deletemapsetpropertybyid</code> as a field.
     */
    public static Field<Integer> deletemapsetpropertybyid(Field<Integer> id, Field<Integer> propertyid) {
        Deletemapsetpropertybyid f = new Deletemapsetpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Call <code>public.deletemapsetpropertybyname</code>
     */
    public static String deletemapsetpropertybyname(Configuration configuration, Integer id, String propertyname) {
        Deletemapsetpropertybyname f = new Deletemapsetpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletemapsetpropertybyname</code> as a field.
     */
    public static Field<String> deletemapsetpropertybyname(Integer id, String propertyname) {
        Deletemapsetpropertybyname f = new Deletemapsetpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);

        return f.asField();
    }

    /**
     * Get <code>public.deletemapsetpropertybyname</code> as a field.
     */
    public static Field<String> deletemapsetpropertybyname(Field<Integer> id, Field<String> propertyname) {
        Deletemapsetpropertybyname f = new Deletemapsetpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);

        return f.asField();
    }

    /**
     * Call <code>public.deletemarker</code>
     */
    public static Integer deletemarker(Configuration configuration, Integer id) {
        Deletemarker f = new Deletemarker();
        f.setId(id);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletemarker</code> as a field.
     */
    public static Field<Integer> deletemarker(Integer id) {
        Deletemarker f = new Deletemarker();
        f.setId(id);

        return f.asField();
    }

    /**
     * Get <code>public.deletemarker</code> as a field.
     */
    public static Field<Integer> deletemarker(Field<Integer> id) {
        Deletemarker f = new Deletemarker();
        f.setId(id);

        return f.asField();
    }

    /**
     * Call <code>public.deletemarkergroup</code>
     */
    public static Integer deletemarkergroup(Configuration configuration, Integer id) {
        Deletemarkergroup f = new Deletemarkergroup();
        f.setId(id);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletemarkergroup</code> as a field.
     */
    public static Field<Integer> deletemarkergroup(Integer id) {
        Deletemarkergroup f = new Deletemarkergroup();
        f.setId(id);

        return f.asField();
    }

    /**
     * Get <code>public.deletemarkergroup</code> as a field.
     */
    public static Field<Integer> deletemarkergroup(Field<Integer> id) {
        Deletemarkergroup f = new Deletemarkergroup();
        f.setId(id);

        return f.asField();
    }

    /**
     * Call <code>public.deletemarkergroupbyname</code>
     */
    public static Integer deletemarkergroupbyname(Configuration configuration, String _Name) {
        Deletemarkergroupbyname f = new Deletemarkergroupbyname();
        f.set_Name(_Name);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletemarkergroupbyname</code> as a field.
     */
    public static Field<Integer> deletemarkergroupbyname(String _Name) {
        Deletemarkergroupbyname f = new Deletemarkergroupbyname();
        f.set_Name(_Name);

        return f.asField();
    }

    /**
     * Get <code>public.deletemarkergroupbyname</code> as a field.
     */
    public static Field<Integer> deletemarkergroupbyname(Field<String> _Name) {
        Deletemarkergroupbyname f = new Deletemarkergroupbyname();
        f.set_Name(_Name);

        return f.asField();
    }

    /**
     * Call <code>public.deletemarkerinmarkergroupbyid</code>
     */
    public static void deletemarkerinmarkergroupbyid(Configuration configuration, Integer id, Integer markerid) {
        Deletemarkerinmarkergroupbyid p = new Deletemarkerinmarkergroupbyid();
        p.setId(id);
        p.setMarkerid(markerid);

        p.execute(configuration);
    }

    /**
     * Call <code>public.deletemarkerinmarkergroupbyname</code>
     */
    public static String deletemarkerinmarkergroupbyname(Configuration configuration, Integer id, String markername) {
        Deletemarkerinmarkergroupbyname f = new Deletemarkerinmarkergroupbyname();
        f.setId(id);
        f.setMarkername(markername);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletemarkerinmarkergroupbyname</code> as a field.
     */
    public static Field<String> deletemarkerinmarkergroupbyname(Integer id, String markername) {
        Deletemarkerinmarkergroupbyname f = new Deletemarkerinmarkergroupbyname();
        f.setId(id);
        f.setMarkername(markername);

        return f.asField();
    }

    /**
     * Get <code>public.deletemarkerinmarkergroupbyname</code> as a field.
     */
    public static Field<String> deletemarkerinmarkergroupbyname(Field<Integer> id, Field<String> markername) {
        Deletemarkerinmarkergroupbyname f = new Deletemarkerinmarkergroupbyname();
        f.setId(id);
        f.setMarkername(markername);

        return f.asField();
    }

    /**
     * Call <code>public.deletemarkerlinkagegroup</code>
     */
    public static Integer deletemarkerlinkagegroup(Configuration configuration, Integer id) {
        Deletemarkerlinkagegroup f = new Deletemarkerlinkagegroup();
        f.setId(id);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletemarkerlinkagegroup</code> as a field.
     */
    public static Field<Integer> deletemarkerlinkagegroup(Integer id) {
        Deletemarkerlinkagegroup f = new Deletemarkerlinkagegroup();
        f.setId(id);

        return f.asField();
    }

    /**
     * Get <code>public.deletemarkerlinkagegroup</code> as a field.
     */
    public static Field<Integer> deletemarkerlinkagegroup(Field<Integer> id) {
        Deletemarkerlinkagegroup f = new Deletemarkerlinkagegroup();
        f.setId(id);

        return f.asField();
    }

    /**
     * Call <code>public.deletemarkerpropertybyid</code>
     */
    public static Integer deletemarkerpropertybyid(Configuration configuration, Integer id, Integer propertyid) {
        Deletemarkerpropertybyid f = new Deletemarkerpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletemarkerpropertybyid</code> as a field.
     */
    public static Field<Integer> deletemarkerpropertybyid(Integer id, Integer propertyid) {
        Deletemarkerpropertybyid f = new Deletemarkerpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Get <code>public.deletemarkerpropertybyid</code> as a field.
     */
    public static Field<Integer> deletemarkerpropertybyid(Field<Integer> id, Field<Integer> propertyid) {
        Deletemarkerpropertybyid f = new Deletemarkerpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Call <code>public.deletemarkerpropertybyname</code>
     */
    public static String deletemarkerpropertybyname(Configuration configuration, Integer id, String propertyname) {
        Deletemarkerpropertybyname f = new Deletemarkerpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletemarkerpropertybyname</code> as a field.
     */
    public static Field<String> deletemarkerpropertybyname(Integer id, String propertyname) {
        Deletemarkerpropertybyname f = new Deletemarkerpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);

        return f.asField();
    }

    /**
     * Get <code>public.deletemarkerpropertybyname</code> as a field.
     */
    public static Field<String> deletemarkerpropertybyname(Field<Integer> id, Field<String> propertyname) {
        Deletemarkerpropertybyname f = new Deletemarkerpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);

        return f.asField();
    }

    /**
     * Call <code>public.deleteorganization</code>
     */
    public static Integer deleteorganization(Configuration configuration, Integer id) {
        Deleteorganization f = new Deleteorganization();
        f.setId(id);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deleteorganization</code> as a field.
     */
    public static Field<Integer> deleteorganization(Integer id) {
        Deleteorganization f = new Deleteorganization();
        f.setId(id);

        return f.asField();
    }

    /**
     * Get <code>public.deleteorganization</code> as a field.
     */
    public static Field<Integer> deleteorganization(Field<Integer> id) {
        Deleteorganization f = new Deleteorganization();
        f.setId(id);

        return f.asField();
    }

    /**
     * Call <code>public.deleteplatform</code>
     */
    public static Integer deleteplatform(Configuration configuration, Integer id) {
        Deleteplatform f = new Deleteplatform();
        f.setId(id);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deleteplatform</code> as a field.
     */
    public static Field<Integer> deleteplatform(Integer id) {
        Deleteplatform f = new Deleteplatform();
        f.setId(id);

        return f.asField();
    }

    /**
     * Get <code>public.deleteplatform</code> as a field.
     */
    public static Field<Integer> deleteplatform(Field<Integer> id) {
        Deleteplatform f = new Deleteplatform();
        f.setId(id);

        return f.asField();
    }

    /**
     * Call <code>public.deleteplatformpropertybyid</code>
     */
    public static Integer deleteplatformpropertybyid(Configuration configuration, Integer id, Integer propertyid) {
        Deleteplatformpropertybyid f = new Deleteplatformpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deleteplatformpropertybyid</code> as a field.
     */
    public static Field<Integer> deleteplatformpropertybyid(Integer id, Integer propertyid) {
        Deleteplatformpropertybyid f = new Deleteplatformpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Get <code>public.deleteplatformpropertybyid</code> as a field.
     */
    public static Field<Integer> deleteplatformpropertybyid(Field<Integer> id, Field<Integer> propertyid) {
        Deleteplatformpropertybyid f = new Deleteplatformpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Call <code>public.deleteplatformpropertybyname</code>
     */
    public static String deleteplatformpropertybyname(Configuration configuration, Integer id, String propertyname) {
        Deleteplatformpropertybyname f = new Deleteplatformpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deleteplatformpropertybyname</code> as a field.
     */
    public static Field<String> deleteplatformpropertybyname(Integer id, String propertyname) {
        Deleteplatformpropertybyname f = new Deleteplatformpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);

        return f.asField();
    }

    /**
     * Get <code>public.deleteplatformpropertybyname</code> as a field.
     */
    public static Field<String> deleteplatformpropertybyname(Field<Integer> id, Field<String> propertyname) {
        Deleteplatformpropertybyname f = new Deleteplatformpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);

        return f.asField();
    }

    /**
     * Call <code>public.deleteproject</code>
     */
    public static Integer deleteproject(Configuration configuration, Integer pid) {
        Deleteproject f = new Deleteproject();
        f.setPid(pid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deleteproject</code> as a field.
     */
    public static Field<Integer> deleteproject(Integer pid) {
        Deleteproject f = new Deleteproject();
        f.setPid(pid);

        return f.asField();
    }

    /**
     * Get <code>public.deleteproject</code> as a field.
     */
    public static Field<Integer> deleteproject(Field<Integer> pid) {
        Deleteproject f = new Deleteproject();
        f.setPid(pid);

        return f.asField();
    }

    /**
     * Call <code>public.deleteprojectpropertybyid</code>
     */
    public static Integer deleteprojectpropertybyid(Configuration configuration, Integer projectid, Integer propertyid) {
        Deleteprojectpropertybyid f = new Deleteprojectpropertybyid();
        f.setProjectid(projectid);
        f.setPropertyid(propertyid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deleteprojectpropertybyid</code> as a field.
     */
    public static Field<Integer> deleteprojectpropertybyid(Integer projectid, Integer propertyid) {
        Deleteprojectpropertybyid f = new Deleteprojectpropertybyid();
        f.setProjectid(projectid);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Get <code>public.deleteprojectpropertybyid</code> as a field.
     */
    public static Field<Integer> deleteprojectpropertybyid(Field<Integer> projectid, Field<Integer> propertyid) {
        Deleteprojectpropertybyid f = new Deleteprojectpropertybyid();
        f.setProjectid(projectid);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Call <code>public.deleteprojectpropertybyname</code>
     */
    public static String deleteprojectpropertybyname(Configuration configuration, Integer projectid, String propertyname) {
        Deleteprojectpropertybyname f = new Deleteprojectpropertybyname();
        f.setProjectid(projectid);
        f.setPropertyname(propertyname);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deleteprojectpropertybyname</code> as a field.
     */
    public static Field<String> deleteprojectpropertybyname(Integer projectid, String propertyname) {
        Deleteprojectpropertybyname f = new Deleteprojectpropertybyname();
        f.setProjectid(projectid);
        f.setPropertyname(propertyname);

        return f.asField();
    }

    /**
     * Get <code>public.deleteprojectpropertybyname</code> as a field.
     */
    public static Field<String> deleteprojectpropertybyname(Field<Integer> projectid, Field<String> propertyname) {
        Deleteprojectpropertybyname f = new Deleteprojectpropertybyname();
        f.setProjectid(projectid);
        f.setPropertyname(propertyname);

        return f.asField();
    }

    /**
     * Call <code>public.deleteprotocol</code>
     */
    public static Integer deleteprotocol(Configuration configuration, Integer pid) {
        Deleteprotocol f = new Deleteprotocol();
        f.setPid(pid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deleteprotocol</code> as a field.
     */
    public static Field<Integer> deleteprotocol(Integer pid) {
        Deleteprotocol f = new Deleteprotocol();
        f.setPid(pid);

        return f.asField();
    }

    /**
     * Get <code>public.deleteprotocol</code> as a field.
     */
    public static Field<Integer> deleteprotocol(Field<Integer> pid) {
        Deleteprotocol f = new Deleteprotocol();
        f.setPid(pid);

        return f.asField();
    }

    /**
     * Call <code>public.deleteprotocolpropertybyid</code>
     */
    public static Integer deleteprotocolpropertybyid(Configuration configuration, Integer protocolid, Integer propertyid) {
        Deleteprotocolpropertybyid f = new Deleteprotocolpropertybyid();
        f.setProtocolid(protocolid);
        f.setPropertyid(propertyid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deleteprotocolpropertybyid</code> as a field.
     */
    public static Field<Integer> deleteprotocolpropertybyid(Integer protocolid, Integer propertyid) {
        Deleteprotocolpropertybyid f = new Deleteprotocolpropertybyid();
        f.setProtocolid(protocolid);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Get <code>public.deleteprotocolpropertybyid</code> as a field.
     */
    public static Field<Integer> deleteprotocolpropertybyid(Field<Integer> protocolid, Field<Integer> propertyid) {
        Deleteprotocolpropertybyid f = new Deleteprotocolpropertybyid();
        f.setProtocolid(protocolid);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Call <code>public.deleteprotocolpropertybyname</code>
     */
    public static String deleteprotocolpropertybyname(Configuration configuration, Integer protocolid, String propertyname) {
        Deleteprotocolpropertybyname f = new Deleteprotocolpropertybyname();
        f.setProtocolid(protocolid);
        f.setPropertyname(propertyname);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deleteprotocolpropertybyname</code> as a field.
     */
    public static Field<String> deleteprotocolpropertybyname(Integer protocolid, String propertyname) {
        Deleteprotocolpropertybyname f = new Deleteprotocolpropertybyname();
        f.setProtocolid(protocolid);
        f.setPropertyname(propertyname);

        return f.asField();
    }

    /**
     * Get <code>public.deleteprotocolpropertybyname</code> as a field.
     */
    public static Field<String> deleteprotocolpropertybyname(Field<Integer> protocolid, Field<String> propertyname) {
        Deleteprotocolpropertybyname f = new Deleteprotocolpropertybyname();
        f.setProtocolid(protocolid);
        f.setPropertyname(propertyname);

        return f.asField();
    }

    /**
     * Call <code>public.deletereference</code>
     */
    public static Integer deletereference(Configuration configuration, Integer id) {
        Deletereference f = new Deletereference();
        f.setId(id);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletereference</code> as a field.
     */
    public static Field<Integer> deletereference(Integer id) {
        Deletereference f = new Deletereference();
        f.setId(id);

        return f.asField();
    }

    /**
     * Get <code>public.deletereference</code> as a field.
     */
    public static Field<Integer> deletereference(Field<Integer> id) {
        Deletereference f = new Deletereference();
        f.setId(id);

        return f.asField();
    }

    /**
     * Call <code>public.deleterole</code>
     */
    public static Integer deleterole(Configuration configuration, Integer id) {
        Deleterole f = new Deleterole();
        f.setId(id);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deleterole</code> as a field.
     */
    public static Field<Integer> deleterole(Integer id) {
        Deleterole f = new Deleterole();
        f.setId(id);

        return f.asField();
    }

    /**
     * Get <code>public.deleterole</code> as a field.
     */
    public static Field<Integer> deleterole(Field<Integer> id) {
        Deleterole f = new Deleterole();
        f.setId(id);

        return f.asField();
    }

    /**
     * Call <code>public.deletevariant</code>
     */
    public static Integer deletevariant(Configuration configuration, Integer id) {
        Deletevariant f = new Deletevariant();
        f.setId(id);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletevariant</code> as a field.
     */
    public static Field<Integer> deletevariant(Integer id) {
        Deletevariant f = new Deletevariant();
        f.setId(id);

        return f.asField();
    }

    /**
     * Get <code>public.deletevariant</code> as a field.
     */
    public static Field<Integer> deletevariant(Field<Integer> id) {
        Deletevariant f = new Deletevariant();
        f.setId(id);

        return f.asField();
    }

    /**
     * Call <code>public.deletevendorprotocol</code>
     */
    public static Integer deletevendorprotocol(Configuration configuration, Integer pid) {
        Deletevendorprotocol f = new Deletevendorprotocol();
        f.setPid(pid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.deletevendorprotocol</code> as a field.
     */
    public static Field<Integer> deletevendorprotocol(Integer pid) {
        Deletevendorprotocol f = new Deletevendorprotocol();
        f.setPid(pid);

        return f.asField();
    }

    /**
     * Get <code>public.deletevendorprotocol</code> as a field.
     */
    public static Field<Integer> deletevendorprotocol(Field<Integer> pid) {
        Deletevendorprotocol f = new Deletevendorprotocol();
        f.setPid(pid);

        return f.asField();
    }

    /**
     * Call <code>public.digest</code>
     */
    public static byte[] digest1(Configuration configuration, String __1, String __2) {
        Digest1 f = new Digest1();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.digest</code> as a field.
     */
    public static Field<byte[]> digest1(String __1, String __2) {
        Digest1 f = new Digest1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.digest</code> as a field.
     */
    public static Field<byte[]> digest1(Field<String> __1, Field<String> __2) {
        Digest1 f = new Digest1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public.digest</code>
     */
    public static byte[] digest2(Configuration configuration, byte[] __1, String __2) {
        Digest2 f = new Digest2();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.digest</code> as a field.
     */
    public static Field<byte[]> digest2(byte[] __1, String __2) {
        Digest2 f = new Digest2();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.digest</code> as a field.
     */
    public static Field<byte[]> digest2(Field<byte[]> __1, Field<String> __2) {
        Digest2 f = new Digest2();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public.encrypt</code>
     */
    public static byte[] encrypt(Configuration configuration, byte[] __1, byte[] __2, String __3) {
        Encrypt f = new Encrypt();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.encrypt</code> as a field.
     */
    public static Field<byte[]> encrypt(byte[] __1, byte[] __2, String __3) {
        Encrypt f = new Encrypt();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Get <code>public.encrypt</code> as a field.
     */
    public static Field<byte[]> encrypt(Field<byte[]> __1, Field<byte[]> __2, Field<String> __3) {
        Encrypt f = new Encrypt();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Call <code>public.encrypt_iv</code>
     */
    public static byte[] encryptIv(Configuration configuration, byte[] __1, byte[] __2, byte[] __3, String __4) {
        EncryptIv f = new EncryptIv();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.encrypt_iv</code> as a field.
     */
    public static Field<byte[]> encryptIv(byte[] __1, byte[] __2, byte[] __3, String __4) {
        EncryptIv f = new EncryptIv();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);

        return f.asField();
    }

    /**
     * Get <code>public.encrypt_iv</code> as a field.
     */
    public static Field<byte[]> encryptIv(Field<byte[]> __1, Field<byte[]> __2, Field<byte[]> __3, Field<String> __4) {
        EncryptIv f = new EncryptIv();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Object fileFdwHandler(Configuration configuration) {
        FileFdwHandler f = new FileFdwHandler();

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Object> fileFdwHandler() {
        FileFdwHandler f = new FileFdwHandler();

        return f.asField();
    }

    /**
     * Call <code>public.file_fdw_validator</code>
     */
    public static void fileFdwValidator(Configuration configuration, String[] __1, Long __2) {
        FileFdwValidator p = new FileFdwValidator();
        p.set__1(__1);
        p.set__2(__2);

        p.execute(configuration);
    }

    /**
     * Call <code>public.gen_random_bytes</code>
     */
    public static byte[] genRandomBytes(Configuration configuration, Integer __1) {
        GenRandomBytes f = new GenRandomBytes();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.gen_random_bytes</code> as a field.
     */
    public static Field<byte[]> genRandomBytes(Integer __1) {
        GenRandomBytes f = new GenRandomBytes();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Get <code>public.gen_random_bytes</code> as a field.
     */
    public static Field<byte[]> genRandomBytes(Field<Integer> __1) {
        GenRandomBytes f = new GenRandomBytes();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Call <code>public.gen_random_uuid</code>
     */
    public static UUID genRandomUuid(Configuration configuration) {
        GenRandomUuid f = new GenRandomUuid();

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.gen_random_uuid</code> as a field.
     */
    public static Field<UUID> genRandomUuid() {
        GenRandomUuid f = new GenRandomUuid();

        return f.asField();
    }

    /**
     * Call <code>public.gen_salt</code>
     */
    public static String genSalt1(Configuration configuration, String __1) {
        GenSalt1 f = new GenSalt1();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.gen_salt</code> as a field.
     */
    public static Field<String> genSalt1(String __1) {
        GenSalt1 f = new GenSalt1();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Get <code>public.gen_salt</code> as a field.
     */
    public static Field<String> genSalt1(Field<String> __1) {
        GenSalt1 f = new GenSalt1();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Call <code>public.gen_salt</code>
     */
    public static String genSalt2(Configuration configuration, String __1, Integer __2) {
        GenSalt2 f = new GenSalt2();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.gen_salt</code> as a field.
     */
    public static Field<String> genSalt2(String __1, Integer __2) {
        GenSalt2 f = new GenSalt2();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.gen_salt</code> as a field.
     */
    public static Field<String> genSalt2(Field<String> __1, Field<Integer> __2) {
        GenSalt2 f = new GenSalt2();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public.getallanalysisparameters</code>
     */
    public static Getallanalysisparameters getallanalysisparameters(Configuration configuration, Integer id) {
        Getallanalysisparameters p = new Getallanalysisparameters();
        p.setId(id);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getallchrlenbydataset</code>
     */
    public static Getallchrlenbydataset getallchrlenbydataset(Configuration configuration, Integer datasetid) {
        Getallchrlenbydataset p = new Getallchrlenbydataset();
        p.setDatasetid(datasetid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getallchrlenbydatasetandmap</code>
     */
    public static Getallchrlenbydatasetandmap getallchrlenbydatasetandmap(Configuration configuration, Integer datasetid, Integer mapid) {
        Getallchrlenbydatasetandmap p = new Getallchrlenbydatasetandmap();
        p.setDatasetid(datasetid);
        p.setMapid(mapid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getallchrlenbymarkerlist</code>
     */
    public static Getallchrlenbymarkerlist getallchrlenbymarkerlist(Configuration configuration, String markerlist) {
        Getallchrlenbymarkerlist p = new Getallchrlenbymarkerlist();
        p.setMarkerlist(markerlist);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getallcontactsbyrole</code>
     */
    public static ContactRecord getallcontactsbyrole(Configuration configuration, Integer roleid) {
        Getallcontactsbyrole f = new Getallcontactsbyrole();
        f.setRoleid(roleid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.getallcontactsbyrole</code> as a field.
     */
    public static Field<ContactRecord> getallcontactsbyrole(Integer roleid) {
        Getallcontactsbyrole f = new Getallcontactsbyrole();
        f.setRoleid(roleid);

        return f.asField();
    }

    /**
     * Get <code>public.getallcontactsbyrole</code> as a field.
     */
    public static Field<ContactRecord> getallcontactsbyrole(Field<Integer> roleid) {
        Getallcontactsbyrole f = new Getallcontactsbyrole();
        f.setRoleid(roleid);

        return f.asField();
    }

    /**
     * Call <code>public.getalldatasetsbymarker</code>
     */
    public static Getalldatasetsbymarker getalldatasetsbymarker(Configuration configuration, Integer _Markerid) {
        Getalldatasetsbymarker p = new Getalldatasetsbymarker();
        p.set_Markerid(_Markerid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getallentryvertices</code>
     */
    public static VertexRecord getallentryvertices(Configuration configuration) {
        Getallentryvertices f = new Getallentryvertices();

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.getallentryvertices</code> as a field.
     */
    public static Field<VertexRecord> getallentryvertices() {
        Getallentryvertices f = new Getallentryvertices();

        return f.asField();
    }

    /**
     * Call <code>public.getalljobsbystatus</code>
     */
    public static Getalljobsbystatus getalljobsbystatus(Configuration configuration, String _Status) {
        Getalljobsbystatus p = new Getalljobsbystatus();
        p.set_Status(_Status);

        p.execute(configuration);
        return p;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Getallmarkermetadatabydataset getallmarkermetadatabydataset(Configuration configuration, Integer datasetid) {
        Getallmarkermetadatabydataset p = new Getallmarkermetadatabydataset();
        p.setDatasetid(datasetid);

        p.execute(configuration);
        return p;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Getallmarkermetadatabydatasetandmap getallmarkermetadatabydatasetandmap(Configuration configuration, Integer datasetid, Integer mapid) {
        Getallmarkermetadatabydatasetandmap p = new Getallmarkermetadatabydatasetandmap();
        p.setDatasetid(datasetid);
        p.setMapid(mapid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getallmarkersinmarkergroup</code>
     */
    public static Getallmarkersinmarkergroup getallmarkersinmarkergroup(Configuration configuration, Integer id) {
        Getallmarkersinmarkergroup p = new Getallmarkersinmarkergroup();
        p.setId(id);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getallmarkersinmarkergroups</code>
     */
    public static Getallmarkersinmarkergroups1 getallmarkersinmarkergroups1(Configuration configuration, String _Namelist) {
        Getallmarkersinmarkergroups1 p = new Getallmarkersinmarkergroups1();
        p.set_Namelist(_Namelist);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getallmarkersinmarkergroups</code>
     */
    public static Getallmarkersinmarkergroups2 getallmarkersinmarkergroups2(Configuration configuration, String _Idlist, String _Platformlist) {
        Getallmarkersinmarkergroups2 p = new Getallmarkersinmarkergroups2();
        p.set_Idlist(_Idlist);
        p.set_Platformlist(_Platformlist);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getallmarkersinmarkergroupsbyid</code>
     */
    public static Getallmarkersinmarkergroupsbyid getallmarkersinmarkergroupsbyid(Configuration configuration, String _Idlist) {
        Getallmarkersinmarkergroupsbyid p = new Getallmarkersinmarkergroupsbyid();
        p.set_Idlist(_Idlist);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getallprojectmetadatabydataset</code>
     */
    public static Getallprojectmetadatabydataset getallprojectmetadatabydataset(Configuration configuration, Integer datasetid) {
        Getallprojectmetadatabydataset p = new Getallprojectmetadatabydataset();
        p.setDatasetid(datasetid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getallpropertiesofdnarun</code>
     */
    public static Getallpropertiesofdnarun getallpropertiesofdnarun(Configuration configuration, Integer id) {
        Getallpropertiesofdnarun p = new Getallpropertiesofdnarun();
        p.setId(id);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getallpropertiesofdnasample</code>
     */
    public static Getallpropertiesofdnasample getallpropertiesofdnasample(Configuration configuration, Integer id) {
        Getallpropertiesofdnasample p = new Getallpropertiesofdnasample();
        p.setId(id);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getallpropertiesofgermplasm</code>
     */
    public static Getallpropertiesofgermplasm getallpropertiesofgermplasm(Configuration configuration, Integer id) {
        Getallpropertiesofgermplasm p = new Getallpropertiesofgermplasm();
        p.setId(id);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getallpropertiesofmapset</code>
     */
    public static Getallpropertiesofmapset getallpropertiesofmapset(Configuration configuration, Integer id) {
        Getallpropertiesofmapset p = new Getallpropertiesofmapset();
        p.setId(id);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getallpropertiesofmarker</code>
     */
    public static Getallpropertiesofmarker getallpropertiesofmarker(Configuration configuration, Integer id) {
        Getallpropertiesofmarker p = new Getallpropertiesofmarker();
        p.setId(id);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getallpropertiesofplatform</code>
     */
    public static Getallpropertiesofplatform getallpropertiesofplatform(Configuration configuration, Integer id) {
        Getallpropertiesofplatform p = new Getallpropertiesofplatform();
        p.setId(id);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getallpropertiesofproject</code>
     */
    public static Getallpropertiesofproject getallpropertiesofproject(Configuration configuration, Integer projectid) {
        Getallpropertiesofproject p = new Getallpropertiesofproject();
        p.setProjectid(projectid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getallpropertiesofprotocol</code>
     */
    public static Getallpropertiesofprotocol getallpropertiesofprotocol(Configuration configuration, Integer protocolid) {
        Getallpropertiesofprotocol p = new Getallpropertiesofprotocol();
        p.setProtocolid(protocolid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getallsamplemetadatabydataset</code>
     */
    public static Getallsamplemetadatabydataset getallsamplemetadatabydataset(Configuration configuration, Integer datasetid) {
        Getallsamplemetadatabydataset p = new Getallsamplemetadatabydataset();
        p.setDatasetid(datasetid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getcvgroupid</code>
     */
    public static Integer getcvgroupid(Configuration configuration, String _Groupname, Integer _Grouptype) {
        Getcvgroupid p = new Getcvgroupid();
        p.set_Groupname(_Groupname);
        p.set_Grouptype(_Grouptype);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.getcvid</code>
     */
    public static Integer getcvid(Configuration configuration, String _Term, String _Groupname, Integer _Grouptype) {
        Getcvid p = new Getcvid();
        p.set_Term(_Term);
        p.set_Groupname(_Groupname);
        p.set_Grouptype(_Grouptype);

        p.execute(configuration);
        return p.getCvid();
    }

    /**
     * Call <code>public.getcvterm</code>
     */
    public static String getcvterm(Configuration configuration, Integer _CvId) {
        Getcvterm p = new Getcvterm();
        p.set_CvId(_CvId);

        p.execute(configuration);
        return p.getCvterm();
    }

    /**
     * Call <code>public.getcvtermsbycvgroupname</code>
     */
    public static Getcvtermsbycvgroupname getcvtermsbycvgroupname(Configuration configuration, String cvgroupname) {
        Getcvtermsbycvgroupname p = new Getcvtermsbycvgroupname();
        p.setCvgroupname(cvgroupname);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getdatasetsinexperiment</code>
     */
    public static Getdatasetsinexperiment getdatasetsinexperiment(Configuration configuration, Integer _Experimentid) {
        Getdatasetsinexperiment p = new Getdatasetsinexperiment();
        p.set_Experimentid(_Experimentid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getdatasetsinproject</code>
     */
    public static Getdatasetsinproject getdatasetsinproject(Configuration configuration, Integer _Projectid) {
        Getdatasetsinproject p = new Getdatasetsinproject();
        p.set_Projectid(_Projectid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getdatasetsinvendorprotocol</code>
     */
    public static Getdatasetsinvendorprotocol getdatasetsinvendorprotocol(Configuration configuration, Integer _VendorProtocolId) {
        Getdatasetsinvendorprotocol p = new Getdatasetsinvendorprotocol();
        p.set_VendorProtocolId(_VendorProtocolId);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getdnarunidsbydnasamplenames</code>
     */
    public static Getdnarunidsbydnasamplenames getdnarunidsbydnasamplenames(Configuration configuration, String dnasamplenames) {
        Getdnarunidsbydnasamplenames p = new Getdnarunidsbydnasamplenames();
        p.setDnasamplenames(dnasamplenames);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getdnarunidsbydnasamplenamesandpi</code>
     */
    public static Getdnarunidsbydnasamplenamesandpi getdnarunidsbydnasamplenamesandpi(Configuration configuration, String dnasamplenames, Integer piid) {
        Getdnarunidsbydnasamplenamesandpi p = new Getdnarunidsbydnasamplenamesandpi();
        p.setDnasamplenames(dnasamplenames);
        p.setPiid(piid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getdnarunidsbydnasamplenamesandproject</code>
     */
    public static Getdnarunidsbydnasamplenamesandproject getdnarunidsbydnasamplenamesandproject(Configuration configuration, String dnasamplenames, Integer projectid) {
        Getdnarunidsbydnasamplenamesandproject p = new Getdnarunidsbydnasamplenamesandproject();
        p.setDnasamplenames(dnasamplenames);
        p.setProjectid(projectid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getdnarunidsbyexternalcodes</code>
     */
    public static Getdnarunidsbyexternalcodes getdnarunidsbyexternalcodes(Configuration configuration, String externalcodes) {
        Getdnarunidsbyexternalcodes p = new Getdnarunidsbyexternalcodes();
        p.setExternalcodes(externalcodes);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getdnarunidsbyexternalcodesandpi</code>
     */
    public static Getdnarunidsbyexternalcodesandpi getdnarunidsbyexternalcodesandpi(Configuration configuration, String externalcodes, Integer piid) {
        Getdnarunidsbyexternalcodesandpi p = new Getdnarunidsbyexternalcodesandpi();
        p.setExternalcodes(externalcodes);
        p.setPiid(piid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getdnarunidsbyexternalcodesandproject</code>
     */
    public static Getdnarunidsbyexternalcodesandproject getdnarunidsbyexternalcodesandproject(Configuration configuration, String externalcodes, Integer projectid) {
        Getdnarunidsbyexternalcodesandproject p = new Getdnarunidsbyexternalcodesandproject();
        p.setExternalcodes(externalcodes);
        p.setProjectid(projectid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getdnarunidsbygermplasmnames</code>
     */
    public static Getdnarunidsbygermplasmnames getdnarunidsbygermplasmnames(Configuration configuration, String germplasmnames) {
        Getdnarunidsbygermplasmnames p = new Getdnarunidsbygermplasmnames();
        p.setGermplasmnames(germplasmnames);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getdnarunidsbygermplasmnamesandpi</code>
     */
    public static Getdnarunidsbygermplasmnamesandpi getdnarunidsbygermplasmnamesandpi(Configuration configuration, String germplasmnames, Integer piid) {
        Getdnarunidsbygermplasmnamesandpi p = new Getdnarunidsbygermplasmnamesandpi();
        p.setGermplasmnames(germplasmnames);
        p.setPiid(piid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getdnarunidsbygermplasmnamesandproject</code>
     */
    public static Getdnarunidsbygermplasmnamesandproject getdnarunidsbygermplasmnamesandproject(Configuration configuration, String germplasmnames, Integer projectid) {
        Getdnarunidsbygermplasmnamesandproject p = new Getdnarunidsbygermplasmnamesandproject();
        p.setGermplasmnames(germplasmnames);
        p.setProjectid(projectid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getdnarunidsbypi</code>
     */
    public static Getdnarunidsbypi getdnarunidsbypi(Configuration configuration, Integer piid) {
        Getdnarunidsbypi p = new Getdnarunidsbypi();
        p.setPiid(piid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getdnarunidsbyproject</code>
     */
    public static Getdnarunidsbyproject getdnarunidsbyproject(Configuration configuration, Integer projectid) {
        Getdnarunidsbyproject p = new Getdnarunidsbyproject();
        p.setProjectid(projectid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getdnarunnamesbydataset</code>
     */
    public static Getdnarunnamesbydataset getdnarunnamesbydataset(Configuration configuration, Integer datasetid) {
        Getdnarunnamesbydataset p = new Getdnarunnamesbydataset();
        p.setDatasetid(datasetid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getdnarunpropertybyid</code>
     */
    public static String getdnarunpropertybyid(Configuration configuration, Integer id, Integer propertyid) {
        Getdnarunpropertybyid f = new Getdnarunpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.getdnarunpropertybyid</code> as a field.
     */
    public static Field<String> getdnarunpropertybyid(Integer id, Integer propertyid) {
        Getdnarunpropertybyid f = new Getdnarunpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Get <code>public.getdnarunpropertybyid</code> as a field.
     */
    public static Field<String> getdnarunpropertybyid(Field<Integer> id, Field<Integer> propertyid) {
        Getdnarunpropertybyid f = new Getdnarunpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Call <code>public.getdnarunpropertybyname</code>
     */
    public static Getdnarunpropertybyname getdnarunpropertybyname(Configuration configuration, Integer id, String propertyname) {
        Getdnarunpropertybyname p = new Getdnarunpropertybyname();
        p.setId(id);
        p.setPropertyname(propertyname);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getdnasamplepropertybyid</code>
     */
    public static String getdnasamplepropertybyid(Configuration configuration, Integer id, Integer propertyid) {
        Getdnasamplepropertybyid f = new Getdnasamplepropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.getdnasamplepropertybyid</code> as a field.
     */
    public static Field<String> getdnasamplepropertybyid(Integer id, Integer propertyid) {
        Getdnasamplepropertybyid f = new Getdnasamplepropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Get <code>public.getdnasamplepropertybyid</code> as a field.
     */
    public static Field<String> getdnasamplepropertybyid(Field<Integer> id, Field<Integer> propertyid) {
        Getdnasamplepropertybyid f = new Getdnasamplepropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Call <code>public.getdnasamplepropertybyname</code>
     */
    public static Getdnasamplepropertybyname getdnasamplepropertybyname(Configuration configuration, Integer id, String propertyname) {
        Getdnasamplepropertybyname p = new Getdnasamplepropertybyname();
        p.setId(id);
        p.setPropertyname(propertyname);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getexperimentnamesbyprojectid</code>
     */
    public static Getexperimentnamesbyprojectid getexperimentnamesbyprojectid(Configuration configuration, Integer projectid) {
        Getexperimentnamesbyprojectid p = new Getexperimentnamesbyprojectid();
        p.setProjectid(projectid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getexperimentsbyprojectid</code>
     */
    public static ExperimentRecord getexperimentsbyprojectid(Configuration configuration, Integer projectid) {
        Getexperimentsbyprojectid f = new Getexperimentsbyprojectid();
        f.setProjectid(projectid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.getexperimentsbyprojectid</code> as a field.
     */
    public static Field<ExperimentRecord> getexperimentsbyprojectid(Integer projectid) {
        Getexperimentsbyprojectid f = new Getexperimentsbyprojectid();
        f.setProjectid(projectid);

        return f.asField();
    }

    /**
     * Get <code>public.getexperimentsbyprojectid</code> as a field.
     */
    public static Field<ExperimentRecord> getexperimentsbyprojectid(Field<Integer> projectid) {
        Getexperimentsbyprojectid f = new Getexperimentsbyprojectid();
        f.setProjectid(projectid);

        return f.asField();
    }

    /**
     * Call <code>public.getgermplasmpropertybyid</code>
     */
    public static String getgermplasmpropertybyid(Configuration configuration, Integer id, Integer propertyid) {
        Getgermplasmpropertybyid f = new Getgermplasmpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.getgermplasmpropertybyid</code> as a field.
     */
    public static Field<String> getgermplasmpropertybyid(Integer id, Integer propertyid) {
        Getgermplasmpropertybyid f = new Getgermplasmpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Get <code>public.getgermplasmpropertybyid</code> as a field.
     */
    public static Field<String> getgermplasmpropertybyid(Field<Integer> id, Field<Integer> propertyid) {
        Getgermplasmpropertybyid f = new Getgermplasmpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Call <code>public.getgermplasmpropertybyname</code>
     */
    public static Getgermplasmpropertybyname getgermplasmpropertybyname(Configuration configuration, Integer id, String propertyname) {
        Getgermplasmpropertybyname p = new Getgermplasmpropertybyname();
        p.setId(id);
        p.setPropertyname(propertyname);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getlinkagegroupsbymarker</code>
     */
    public static Getlinkagegroupsbymarker getlinkagegroupsbymarker(Configuration configuration, Integer _Markerid) {
        Getlinkagegroupsbymarker p = new Getlinkagegroupsbymarker();
        p.set_Markerid(_Markerid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmanifestbyexperimentid</code>
     */
    public static ManifestRecord getmanifestbyexperimentid(Configuration configuration, Integer experimentid) {
        Getmanifestbyexperimentid f = new Getmanifestbyexperimentid();
        f.setExperimentid(experimentid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.getmanifestbyexperimentid</code> as a field.
     */
    public static Field<ManifestRecord> getmanifestbyexperimentid(Integer experimentid) {
        Getmanifestbyexperimentid f = new Getmanifestbyexperimentid();
        f.setExperimentid(experimentid);

        return f.asField();
    }

    /**
     * Get <code>public.getmanifestbyexperimentid</code> as a field.
     */
    public static Field<ManifestRecord> getmanifestbyexperimentid(Field<Integer> experimentid) {
        Getmanifestbyexperimentid f = new Getmanifestbyexperimentid();
        f.setExperimentid(experimentid);

        return f.asField();
    }

    /**
     * Call <code>public.getmapsetpropertybyid</code>
     */
    public static String getmapsetpropertybyid(Configuration configuration, Integer id, Integer propertyid) {
        Getmapsetpropertybyid f = new Getmapsetpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.getmapsetpropertybyid</code> as a field.
     */
    public static Field<String> getmapsetpropertybyid(Integer id, Integer propertyid) {
        Getmapsetpropertybyid f = new Getmapsetpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Get <code>public.getmapsetpropertybyid</code> as a field.
     */
    public static Field<String> getmapsetpropertybyid(Field<Integer> id, Field<Integer> propertyid) {
        Getmapsetpropertybyid f = new Getmapsetpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Call <code>public.getmapsetpropertybyname</code>
     */
    public static Getmapsetpropertybyname getmapsetpropertybyname(Configuration configuration, Integer id, String propertyname) {
        Getmapsetpropertybyname p = new Getmapsetpropertybyname();
        p.setId(id);
        p.setPropertyname(propertyname);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmarkerallmapsetinfobydataset</code>
     */
    public static Getmarkerallmapsetinfobydataset getmarkerallmapsetinfobydataset(Configuration configuration, Integer dsid, Integer mapid) {
        Getmarkerallmapsetinfobydataset p = new Getmarkerallmapsetinfobydataset();
        p.setDsid(dsid);
        p.setMapid(mapid);

        p.execute(configuration);
        return p;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Getmarkergroupsbymarker getmarkergroupsbymarker(Configuration configuration, Integer _Markerid) {
        Getmarkergroupsbymarker p = new Getmarkergroupsbymarker();
        p.set_Markerid(_Markerid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmarkerids</code>
     */
    public static Getmarkerids getmarkerids(Configuration configuration, String markernames, String platformlist) {
        Getmarkerids p = new Getmarkerids();
        p.setMarkernames(markernames);
        p.setPlatformlist(platformlist);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmarkeridsbymarkernames</code>
     */
    public static Getmarkeridsbymarkernames getmarkeridsbymarkernames(Configuration configuration, String markernames) {
        Getmarkeridsbymarkernames p = new Getmarkeridsbymarkernames();
        p.setMarkernames(markernames);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmarkeridsbymarkernamesandplatformlist</code>
     */
    public static Getmarkeridsbymarkernamesandplatformlist getmarkeridsbymarkernamesandplatformlist(Configuration configuration, String markernames, String platformlist) {
        Getmarkeridsbymarkernamesandplatformlist p = new Getmarkeridsbymarkernamesandplatformlist();
        p.setMarkernames(markernames);
        p.setPlatformlist(platformlist);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmarkeridsbyplatformlist</code>
     */
    public static Getmarkeridsbyplatformlist getmarkeridsbyplatformlist(Configuration configuration, String platformlist) {
        Getmarkeridsbyplatformlist p = new Getmarkeridsbyplatformlist();
        p.setPlatformlist(platformlist);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmarkeridsbysamplesanddatasettype</code>
     */
    public static Getmarkeridsbysamplesanddatasettype getmarkeridsbysamplesanddatasettype(Configuration configuration, String samplelist, Integer datasettypeid) {
        Getmarkeridsbysamplesanddatasettype p = new Getmarkeridsbysamplesanddatasettype();
        p.setSamplelist(samplelist);
        p.setDatasettypeid(datasettypeid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmarkeridsbysamplesplatformsanddatasettype</code>
     */
    public static Getmarkeridsbysamplesplatformsanddatasettype getmarkeridsbysamplesplatformsanddatasettype(Configuration configuration, String samplelist, String platformlist, Integer datasettypeid) {
        Getmarkeridsbysamplesplatformsanddatasettype p = new Getmarkeridsbysamplesplatformsanddatasettype();
        p.setSamplelist(samplelist);
        p.setPlatformlist(platformlist);
        p.setDatasettypeid(datasettypeid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmarkerinmarkergroupbyid</code>
     */
    public static String getmarkerinmarkergroupbyid(Configuration configuration, Integer id, Integer markerid) {
        Getmarkerinmarkergroupbyid f = new Getmarkerinmarkergroupbyid();
        f.setId(id);
        f.setMarkerid(markerid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.getmarkerinmarkergroupbyid</code> as a field.
     */
    public static Field<String> getmarkerinmarkergroupbyid(Integer id, Integer markerid) {
        Getmarkerinmarkergroupbyid f = new Getmarkerinmarkergroupbyid();
        f.setId(id);
        f.setMarkerid(markerid);

        return f.asField();
    }

    /**
     * Get <code>public.getmarkerinmarkergroupbyid</code> as a field.
     */
    public static Field<String> getmarkerinmarkergroupbyid(Field<Integer> id, Field<Integer> markerid) {
        Getmarkerinmarkergroupbyid f = new Getmarkerinmarkergroupbyid();
        f.setId(id);
        f.setMarkerid(markerid);

        return f.asField();
    }

    /**
     * Call <code>public.getmarkerinmarkergroupbyname</code>
     */
    public static Getmarkerinmarkergroupbyname getmarkerinmarkergroupbyname(Configuration configuration, Integer id, String markername) {
        Getmarkerinmarkergroupbyname p = new Getmarkerinmarkergroupbyname();
        p.setId(id);
        p.setMarkername(markername);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmarkermapsetinfobydataset</code>
     */
    public static Getmarkermapsetinfobydataset getmarkermapsetinfobydataset(Configuration configuration, Integer dsid, Integer mapid) {
        Getmarkermapsetinfobydataset p = new Getmarkermapsetinfobydataset();
        p.setDsid(dsid);
        p.setMapid(mapid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmarkermapsetinfobymarkerlist</code>
     */
    public static Getmarkermapsetinfobymarkerlist getmarkermapsetinfobymarkerlist(Configuration configuration, String markerlist) {
        Getmarkermapsetinfobymarkerlist p = new Getmarkermapsetinfobymarkerlist();
        p.setMarkerlist(markerlist);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmarkernamesbydataset</code>
     */
    public static Getmarkernamesbydataset getmarkernamesbydataset(Configuration configuration, Integer datasetid) {
        Getmarkernamesbydataset p = new Getmarkernamesbydataset();
        p.setDatasetid(datasetid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmarkernamesbydatasetandmap</code>
     */
    public static Getmarkernamesbydatasetandmap getmarkernamesbydatasetandmap(Configuration configuration, Integer datasetid, Integer mapid) {
        Getmarkernamesbydatasetandmap p = new Getmarkernamesbydatasetandmap();
        p.setDatasetid(datasetid);
        p.setMapid(mapid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmarkerpropertybyid</code>
     */
    public static String getmarkerpropertybyid(Configuration configuration, Integer id, Integer propertyid) {
        Getmarkerpropertybyid f = new Getmarkerpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.getmarkerpropertybyid</code> as a field.
     */
    public static Field<String> getmarkerpropertybyid(Integer id, Integer propertyid) {
        Getmarkerpropertybyid f = new Getmarkerpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Get <code>public.getmarkerpropertybyid</code> as a field.
     */
    public static Field<String> getmarkerpropertybyid(Field<Integer> id, Field<Integer> propertyid) {
        Getmarkerpropertybyid f = new Getmarkerpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Call <code>public.getmarkerpropertybyname</code>
     */
    public static Getmarkerpropertybyname getmarkerpropertybyname(Configuration configuration, Integer id, String propertyname) {
        Getmarkerpropertybyname p = new Getmarkerpropertybyname();
        p.setId(id);
        p.setPropertyname(propertyname);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmarkerqcmetadatabydataset</code>
     */
    public static Getmarkerqcmetadatabydataset getmarkerqcmetadatabydataset(Configuration configuration, Integer datasetid) {
        Getmarkerqcmetadatabydataset p = new Getmarkerqcmetadatabydataset();
        p.setDatasetid(datasetid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmarkerqcmetadatabymarkerlist</code>
     */
    public static Getmarkerqcmetadatabymarkerlist getmarkerqcmetadatabymarkerlist(Configuration configuration, String markerlist) {
        Getmarkerqcmetadatabymarkerlist p = new Getmarkerqcmetadatabymarkerlist();
        p.setMarkerlist(markerlist);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmarkersinanalysis</code>
     */
    public static Getmarkersinanalysis getmarkersinanalysis(Configuration configuration, Integer _AnalysisId) {
        Getmarkersinanalysis p = new Getmarkersinanalysis();
        p.set_AnalysisId(_AnalysisId);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmarkersincallinganalysis</code>
     */
    public static Getmarkersincallinganalysis getmarkersincallinganalysis(Configuration configuration, Integer _CallingAnalysisId) {
        Getmarkersincallinganalysis p = new Getmarkersincallinganalysis();
        p.set_CallingAnalysisId(_CallingAnalysisId);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmarkersinexperiment</code>
     */
    public static Getmarkersinexperiment getmarkersinexperiment(Configuration configuration, Integer _Experimentid) {
        Getmarkersinexperiment p = new Getmarkersinexperiment();
        p.set_Experimentid(_Experimentid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmarkersinlinkagegroup</code>
     */
    public static Getmarkersinlinkagegroup getmarkersinlinkagegroup(Configuration configuration, Integer _LinkageGroupId) {
        Getmarkersinlinkagegroup p = new Getmarkersinlinkagegroup();
        p.set_LinkageGroupId(_LinkageGroupId);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmarkersinmapset</code>
     */
    public static Getmarkersinmapset getmarkersinmapset(Configuration configuration, Integer _MapsetId) {
        Getmarkersinmapset p = new Getmarkersinmapset();
        p.set_MapsetId(_MapsetId);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmarkersinproject</code>
     */
    public static Getmarkersinproject getmarkersinproject(Configuration configuration, Integer _Projectid) {
        Getmarkersinproject p = new Getmarkersinproject();
        p.set_Projectid(_Projectid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmarkersinvendorprotocol</code>
     */
    public static Getmarkersinvendorprotocol getmarkersinvendorprotocol(Configuration configuration, Integer _VendorProtocolId) {
        Getmarkersinvendorprotocol p = new Getmarkersinvendorprotocol();
        p.set_VendorProtocolId(_VendorProtocolId);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmatrixposofmarkers</code>
     */
    public static Getmatrixposofmarkers1 getmatrixposofmarkers1(Configuration configuration, String markerlist) {
        Getmatrixposofmarkers1 p = new Getmatrixposofmarkers1();
        p.setMarkerlist(markerlist);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmatrixposofmarkers</code>
     */
    public static Getmatrixposofmarkers2 getmatrixposofmarkers2(Configuration configuration, String markerlist, Integer datasettypeid) {
        Getmatrixposofmarkers2 p = new Getmatrixposofmarkers2();
        p.setMarkerlist(markerlist);
        p.setDatasettypeid(datasettypeid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getmatrixposofsamples</code>
     */
    public static Getmatrixposofsamples getmatrixposofsamples(Configuration configuration, String samplelist, Integer datasettypeid) {
        Getmatrixposofsamples p = new Getmatrixposofsamples();
        p.setSamplelist(samplelist);
        p.setDatasettypeid(datasettypeid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getminimalmarkermetadatabydataset</code>
     */
    public static Getminimalmarkermetadatabydataset getminimalmarkermetadatabydataset(Configuration configuration, Integer datasetid) {
        Getminimalmarkermetadatabydataset p = new Getminimalmarkermetadatabydataset();
        p.setDatasetid(datasetid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getminimalmarkermetadatabydatasetandmap</code>
     */
    public static Getminimalmarkermetadatabydatasetandmap getminimalmarkermetadatabydatasetandmap(Configuration configuration, Integer datasetid, Integer mapid) {
        Getminimalmarkermetadatabydatasetandmap p = new Getminimalmarkermetadatabydatasetandmap();
        p.setDatasetid(datasetid);
        p.setMapid(mapid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getminimalsamplemetadatabydataset</code>
     */
    public static Getminimalsamplemetadatabydataset getminimalsamplemetadatabydataset(Configuration configuration, Integer datasetid) {
        Getminimalsamplemetadatabydataset p = new Getminimalsamplemetadatabydataset();
        p.setDatasetid(datasetid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getplatformpropertybyid</code>
     */
    public static String getplatformpropertybyid(Configuration configuration, Integer id, Integer propertyid) {
        Getplatformpropertybyid f = new Getplatformpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.getplatformpropertybyid</code> as a field.
     */
    public static Field<String> getplatformpropertybyid(Integer id, Integer propertyid) {
        Getplatformpropertybyid f = new Getplatformpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Get <code>public.getplatformpropertybyid</code> as a field.
     */
    public static Field<String> getplatformpropertybyid(Field<Integer> id, Field<Integer> propertyid) {
        Getplatformpropertybyid f = new Getplatformpropertybyid();
        f.setId(id);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Call <code>public.getplatformpropertybyname</code>
     */
    public static Getplatformpropertybyname getplatformpropertybyname(Configuration configuration, Integer id, String propertyname) {
        Getplatformpropertybyname p = new Getplatformpropertybyname();
        p.setId(id);
        p.setPropertyname(propertyname);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getprojectnamesbypi</code>
     */
    public static Result<Record> getprojectnamesbypi(Configuration configuration, Integer _ContactId) {
        Getprojectnamesbypi f = new Getprojectnamesbypi();
        f.set_ContactId(_ContactId);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.getprojectnamesbypi</code> as a field.
     */
    public static Field<Result<Record>> getprojectnamesbypi(Integer _ContactId) {
        Getprojectnamesbypi f = new Getprojectnamesbypi();
        f.set_ContactId(_ContactId);

        return f.asField();
    }

    /**
     * Get <code>public.getprojectnamesbypi</code> as a field.
     */
    public static Field<Result<Record>> getprojectnamesbypi(Field<Integer> _ContactId) {
        Getprojectnamesbypi f = new Getprojectnamesbypi();
        f.set_ContactId(_ContactId);

        return f.asField();
    }

    /**
     * Call <code>public.getprojectpropertybyid</code>
     */
    public static String getprojectpropertybyid(Configuration configuration, Integer projectid, Integer propertyid) {
        Getprojectpropertybyid f = new Getprojectpropertybyid();
        f.setProjectid(projectid);
        f.setPropertyid(propertyid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.getprojectpropertybyid</code> as a field.
     */
    public static Field<String> getprojectpropertybyid(Integer projectid, Integer propertyid) {
        Getprojectpropertybyid f = new Getprojectpropertybyid();
        f.setProjectid(projectid);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Get <code>public.getprojectpropertybyid</code> as a field.
     */
    public static Field<String> getprojectpropertybyid(Field<Integer> projectid, Field<Integer> propertyid) {
        Getprojectpropertybyid f = new Getprojectpropertybyid();
        f.setProjectid(projectid);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Call <code>public.getprojectpropertybyname</code>
     */
    public static Getprojectpropertybyname getprojectpropertybyname(Configuration configuration, Integer projectid, String propertyname) {
        Getprojectpropertybyname p = new Getprojectpropertybyname();
        p.setProjectid(projectid);
        p.setPropertyname(propertyname);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getpropertyidbynamesandtype</code>
     */
    public static Integer getpropertyidbynamesandtype(Configuration configuration, String groupname, String propname, Integer cvtype) {
        Getpropertyidbynamesandtype f = new Getpropertyidbynamesandtype();
        f.setGroupname(groupname);
        f.setPropname(propname);
        f.setCvtype(cvtype);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.getpropertyidbynamesandtype</code> as a field.
     */
    public static Field<Integer> getpropertyidbynamesandtype(String groupname, String propname, Integer cvtype) {
        Getpropertyidbynamesandtype f = new Getpropertyidbynamesandtype();
        f.setGroupname(groupname);
        f.setPropname(propname);
        f.setCvtype(cvtype);

        return f.asField();
    }

    /**
     * Get <code>public.getpropertyidbynamesandtype</code> as a field.
     */
    public static Field<Integer> getpropertyidbynamesandtype(Field<String> groupname, Field<String> propname, Field<Integer> cvtype) {
        Getpropertyidbynamesandtype f = new Getpropertyidbynamesandtype();
        f.setGroupname(groupname);
        f.setPropname(propname);
        f.setCvtype(cvtype);

        return f.asField();
    }

    /**
     * Call <code>public.getprotocolpropertybyid</code>
     */
    public static String getprotocolpropertybyid(Configuration configuration, Integer protocolid, Integer propertyid) {
        Getprotocolpropertybyid f = new Getprotocolpropertybyid();
        f.setProtocolid(protocolid);
        f.setPropertyid(propertyid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.getprotocolpropertybyid</code> as a field.
     */
    public static Field<String> getprotocolpropertybyid(Integer protocolid, Integer propertyid) {
        Getprotocolpropertybyid f = new Getprotocolpropertybyid();
        f.setProtocolid(protocolid);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Get <code>public.getprotocolpropertybyid</code> as a field.
     */
    public static Field<String> getprotocolpropertybyid(Field<Integer> protocolid, Field<Integer> propertyid) {
        Getprotocolpropertybyid f = new Getprotocolpropertybyid();
        f.setProtocolid(protocolid);
        f.setPropertyid(propertyid);

        return f.asField();
    }

    /**
     * Call <code>public.getprotocolpropertybyname</code>
     */
    public static Getprotocolpropertybyname getprotocolpropertybyname(Configuration configuration, Integer protocolid, String propertyname) {
        Getprotocolpropertybyname p = new Getprotocolpropertybyname();
        p.setProtocolid(protocolid);
        p.setPropertyname(propertyname);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getrolesofcontact</code>
     */
    public static RoleRecord getrolesofcontact(Configuration configuration, Integer contactid) {
        Getrolesofcontact f = new Getrolesofcontact();
        f.setContactid(contactid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.getrolesofcontact</code> as a field.
     */
    public static Field<RoleRecord> getrolesofcontact(Integer contactid) {
        Getrolesofcontact f = new Getrolesofcontact();
        f.setContactid(contactid);

        return f.asField();
    }

    /**
     * Get <code>public.getrolesofcontact</code> as a field.
     */
    public static Field<RoleRecord> getrolesofcontact(Field<Integer> contactid) {
        Getrolesofcontact f = new Getrolesofcontact();
        f.setContactid(contactid);

        return f.asField();
    }

    /**
     * Call <code>public.getsampleqcmetadatabydataset</code>
     */
    public static Getsampleqcmetadatabydataset getsampleqcmetadatabydataset(Configuration configuration, Integer datasetid) {
        Getsampleqcmetadatabydataset p = new Getsampleqcmetadatabydataset();
        p.setDatasetid(datasetid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getsampleqcmetadatabymarkerlist</code>
     */
    public static Getsampleqcmetadatabymarkerlist1 getsampleqcmetadatabymarkerlist1(Configuration configuration, String markerlist) {
        Getsampleqcmetadatabymarkerlist1 p = new Getsampleqcmetadatabymarkerlist1();
        p.setMarkerlist(markerlist);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getsampleqcmetadatabymarkerlist</code>
     */
    public static Getsampleqcmetadatabymarkerlist2 getsampleqcmetadatabymarkerlist2(Configuration configuration, String markerlist, Integer datasettypeid) {
        Getsampleqcmetadatabymarkerlist2 p = new Getsampleqcmetadatabymarkerlist2();
        p.setMarkerlist(markerlist);
        p.setDatasettypeid(datasettypeid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getsampleqcmetadatabymarkerlistx</code>
     */
    public static Getsampleqcmetadatabymarkerlistx1 getsampleqcmetadatabymarkerlistx1(Configuration configuration, String markerlist) {
        Getsampleqcmetadatabymarkerlistx1 p = new Getsampleqcmetadatabymarkerlistx1();
        p.setMarkerlist(markerlist);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getsampleqcmetadatabymarkerlistx</code>
     */
    public static Getsampleqcmetadatabymarkerlistx2 getsampleqcmetadatabymarkerlistx2(Configuration configuration, String markerlist, Integer datasettypeid) {
        Getsampleqcmetadatabymarkerlistx2 p = new Getsampleqcmetadatabymarkerlistx2();
        p.setMarkerlist(markerlist);
        p.setDatasettypeid(datasettypeid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.getsampleqcmetadatabysamplelist</code>
     */
    public static Getsampleqcmetadatabysamplelist getsampleqcmetadatabysamplelist(Configuration configuration, String samplelist, Integer datasettypeid) {
        Getsampleqcmetadatabysamplelist p = new Getsampleqcmetadatabysamplelist();
        p.setSamplelist(samplelist);
        p.setDatasettypeid(datasettypeid);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.gettimescoper</code>
     */
    public static Gettimescoper gettimescoper(Configuration configuration, String _Username, String _Password) {
        Gettimescoper p = new Gettimescoper();
        p.set_Username(_Username);
        p.set_Password(_Password);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.gettotaldnarunsindataset</code>
     */
    public static Integer gettotaldnarunsindataset(Configuration configuration, String _DatasetId) {
        Gettotaldnarunsindataset f = new Gettotaldnarunsindataset();
        f.set_DatasetId(_DatasetId);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.gettotaldnarunsindataset</code> as a field.
     */
    public static Field<Integer> gettotaldnarunsindataset(String _DatasetId) {
        Gettotaldnarunsindataset f = new Gettotaldnarunsindataset();
        f.set_DatasetId(_DatasetId);

        return f.asField();
    }

    /**
     * Get <code>public.gettotaldnarunsindataset</code> as a field.
     */
    public static Field<Integer> gettotaldnarunsindataset(Field<String> _DatasetId) {
        Gettotaldnarunsindataset f = new Gettotaldnarunsindataset();
        f.set_DatasetId(_DatasetId);

        return f.asField();
    }

    /**
     * Call <code>public.gettotalmarkersindataset</code>
     */
    public static Integer gettotalmarkersindataset(Configuration configuration, String _DatasetId) {
        Gettotalmarkersindataset f = new Gettotalmarkersindataset();
        f.set_DatasetId(_DatasetId);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.gettotalmarkersindataset</code> as a field.
     */
    public static Field<Integer> gettotalmarkersindataset(String _DatasetId) {
        Gettotalmarkersindataset f = new Gettotalmarkersindataset();
        f.set_DatasetId(_DatasetId);

        return f.asField();
    }

    /**
     * Get <code>public.gettotalmarkersindataset</code> as a field.
     */
    public static Field<Integer> gettotalmarkersindataset(Field<String> _DatasetId) {
        Gettotalmarkersindataset f = new Gettotalmarkersindataset();
        f.set_DatasetId(_DatasetId);

        return f.asField();
    }

    /**
     * Call <code>public.gettotalprojects</code>
     */
    public static Integer gettotalprojects(Configuration configuration) {
        Gettotalprojects f = new Gettotalprojects();

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.gettotalprojects</code> as a field.
     */
    public static Field<Integer> gettotalprojects() {
        Gettotalprojects f = new Gettotalprojects();

        return f.asField();
    }

    /**
     * Call <code>public.hmac</code>
     */
    public static byte[] hmac1(Configuration configuration, String __1, String __2, String __3) {
        Hmac1 f = new Hmac1();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.hmac</code> as a field.
     */
    public static Field<byte[]> hmac1(String __1, String __2, String __3) {
        Hmac1 f = new Hmac1();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Get <code>public.hmac</code> as a field.
     */
    public static Field<byte[]> hmac1(Field<String> __1, Field<String> __2, Field<String> __3) {
        Hmac1 f = new Hmac1();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Call <code>public.hmac</code>
     */
    public static byte[] hmac2(Configuration configuration, byte[] __1, byte[] __2, String __3) {
        Hmac2 f = new Hmac2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.hmac</code> as a field.
     */
    public static Field<byte[]> hmac2(byte[] __1, byte[] __2, String __3) {
        Hmac2 f = new Hmac2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Get <code>public.hmac</code> as a field.
     */
    public static Field<byte[]> hmac2(Field<byte[]> __1, Field<byte[]> __2, Field<String> __3) {
        Hmac2 f = new Hmac2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static AggregateFunction<Object> max(Object __1) {
        Max f = new Max();
        f.set__1(__1);

        return f.asAggregateFunction();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static AggregateFunction<Object> max(Field<Object> __1) {
        Max f = new Max();
        f.set__1(__1);

        return f.asAggregateFunction();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static AggregateFunction<Object> min(Object __1) {
        Min f = new Min();
        f.set__1(__1);

        return f.asAggregateFunction();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static AggregateFunction<Object> min(Field<Object> __1) {
        Min f = new Min();
        f.set__1(__1);

        return f.asAggregateFunction();
    }

    /**
     * Call <code>public.pgp_armor_headers</code>
     */
    public static PgpArmorHeaders pgpArmorHeaders(Configuration configuration, String __1) {
        PgpArmorHeaders p = new PgpArmorHeaders();
        p.set__1(__1);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.pgp_key_id</code>
     */
    public static String pgpKeyId(Configuration configuration, byte[] __1) {
        PgpKeyId f = new PgpKeyId();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.pgp_key_id</code> as a field.
     */
    public static Field<String> pgpKeyId(byte[] __1) {
        PgpKeyId f = new PgpKeyId();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Get <code>public.pgp_key_id</code> as a field.
     */
    public static Field<String> pgpKeyId(Field<byte[]> __1) {
        PgpKeyId f = new PgpKeyId();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Call <code>public.pgp_pub_decrypt</code>
     */
    public static String pgpPubDecrypt1(Configuration configuration, byte[] __1, byte[] __2) {
        PgpPubDecrypt1 f = new PgpPubDecrypt1();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.pgp_pub_decrypt</code> as a field.
     */
    public static Field<String> pgpPubDecrypt1(byte[] __1, byte[] __2) {
        PgpPubDecrypt1 f = new PgpPubDecrypt1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.pgp_pub_decrypt</code> as a field.
     */
    public static Field<String> pgpPubDecrypt1(Field<byte[]> __1, Field<byte[]> __2) {
        PgpPubDecrypt1 f = new PgpPubDecrypt1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public.pgp_pub_decrypt</code>
     */
    public static String pgpPubDecrypt2(Configuration configuration, byte[] __1, byte[] __2, String __3) {
        PgpPubDecrypt2 f = new PgpPubDecrypt2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.pgp_pub_decrypt</code> as a field.
     */
    public static Field<String> pgpPubDecrypt2(byte[] __1, byte[] __2, String __3) {
        PgpPubDecrypt2 f = new PgpPubDecrypt2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Get <code>public.pgp_pub_decrypt</code> as a field.
     */
    public static Field<String> pgpPubDecrypt2(Field<byte[]> __1, Field<byte[]> __2, Field<String> __3) {
        PgpPubDecrypt2 f = new PgpPubDecrypt2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Call <code>public.pgp_pub_decrypt</code>
     */
    public static String pgpPubDecrypt3(Configuration configuration, byte[] __1, byte[] __2, String __3, String __4) {
        PgpPubDecrypt3 f = new PgpPubDecrypt3();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.pgp_pub_decrypt</code> as a field.
     */
    public static Field<String> pgpPubDecrypt3(byte[] __1, byte[] __2, String __3, String __4) {
        PgpPubDecrypt3 f = new PgpPubDecrypt3();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);

        return f.asField();
    }

    /**
     * Get <code>public.pgp_pub_decrypt</code> as a field.
     */
    public static Field<String> pgpPubDecrypt3(Field<byte[]> __1, Field<byte[]> __2, Field<String> __3, Field<String> __4) {
        PgpPubDecrypt3 f = new PgpPubDecrypt3();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);

        return f.asField();
    }

    /**
     * Call <code>public.pgp_pub_decrypt_bytea</code>
     */
    public static byte[] pgpPubDecryptBytea1(Configuration configuration, byte[] __1, byte[] __2) {
        PgpPubDecryptBytea1 f = new PgpPubDecryptBytea1();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.pgp_pub_decrypt_bytea</code> as a field.
     */
    public static Field<byte[]> pgpPubDecryptBytea1(byte[] __1, byte[] __2) {
        PgpPubDecryptBytea1 f = new PgpPubDecryptBytea1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.pgp_pub_decrypt_bytea</code> as a field.
     */
    public static Field<byte[]> pgpPubDecryptBytea1(Field<byte[]> __1, Field<byte[]> __2) {
        PgpPubDecryptBytea1 f = new PgpPubDecryptBytea1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public.pgp_pub_decrypt_bytea</code>
     */
    public static byte[] pgpPubDecryptBytea2(Configuration configuration, byte[] __1, byte[] __2, String __3) {
        PgpPubDecryptBytea2 f = new PgpPubDecryptBytea2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.pgp_pub_decrypt_bytea</code> as a field.
     */
    public static Field<byte[]> pgpPubDecryptBytea2(byte[] __1, byte[] __2, String __3) {
        PgpPubDecryptBytea2 f = new PgpPubDecryptBytea2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Get <code>public.pgp_pub_decrypt_bytea</code> as a field.
     */
    public static Field<byte[]> pgpPubDecryptBytea2(Field<byte[]> __1, Field<byte[]> __2, Field<String> __3) {
        PgpPubDecryptBytea2 f = new PgpPubDecryptBytea2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Call <code>public.pgp_pub_decrypt_bytea</code>
     */
    public static byte[] pgpPubDecryptBytea3(Configuration configuration, byte[] __1, byte[] __2, String __3, String __4) {
        PgpPubDecryptBytea3 f = new PgpPubDecryptBytea3();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.pgp_pub_decrypt_bytea</code> as a field.
     */
    public static Field<byte[]> pgpPubDecryptBytea3(byte[] __1, byte[] __2, String __3, String __4) {
        PgpPubDecryptBytea3 f = new PgpPubDecryptBytea3();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);

        return f.asField();
    }

    /**
     * Get <code>public.pgp_pub_decrypt_bytea</code> as a field.
     */
    public static Field<byte[]> pgpPubDecryptBytea3(Field<byte[]> __1, Field<byte[]> __2, Field<String> __3, Field<String> __4) {
        PgpPubDecryptBytea3 f = new PgpPubDecryptBytea3();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);

        return f.asField();
    }

    /**
     * Call <code>public.pgp_pub_encrypt</code>
     */
    public static byte[] pgpPubEncrypt1(Configuration configuration, String __1, byte[] __2) {
        PgpPubEncrypt1 f = new PgpPubEncrypt1();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.pgp_pub_encrypt</code> as a field.
     */
    public static Field<byte[]> pgpPubEncrypt1(String __1, byte[] __2) {
        PgpPubEncrypt1 f = new PgpPubEncrypt1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.pgp_pub_encrypt</code> as a field.
     */
    public static Field<byte[]> pgpPubEncrypt1(Field<String> __1, Field<byte[]> __2) {
        PgpPubEncrypt1 f = new PgpPubEncrypt1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public.pgp_pub_encrypt</code>
     */
    public static byte[] pgpPubEncrypt2(Configuration configuration, String __1, byte[] __2, String __3) {
        PgpPubEncrypt2 f = new PgpPubEncrypt2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.pgp_pub_encrypt</code> as a field.
     */
    public static Field<byte[]> pgpPubEncrypt2(String __1, byte[] __2, String __3) {
        PgpPubEncrypt2 f = new PgpPubEncrypt2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Get <code>public.pgp_pub_encrypt</code> as a field.
     */
    public static Field<byte[]> pgpPubEncrypt2(Field<String> __1, Field<byte[]> __2, Field<String> __3) {
        PgpPubEncrypt2 f = new PgpPubEncrypt2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Call <code>public.pgp_pub_encrypt_bytea</code>
     */
    public static byte[] pgpPubEncryptBytea1(Configuration configuration, byte[] __1, byte[] __2) {
        PgpPubEncryptBytea1 f = new PgpPubEncryptBytea1();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.pgp_pub_encrypt_bytea</code> as a field.
     */
    public static Field<byte[]> pgpPubEncryptBytea1(byte[] __1, byte[] __2) {
        PgpPubEncryptBytea1 f = new PgpPubEncryptBytea1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.pgp_pub_encrypt_bytea</code> as a field.
     */
    public static Field<byte[]> pgpPubEncryptBytea1(Field<byte[]> __1, Field<byte[]> __2) {
        PgpPubEncryptBytea1 f = new PgpPubEncryptBytea1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public.pgp_pub_encrypt_bytea</code>
     */
    public static byte[] pgpPubEncryptBytea2(Configuration configuration, byte[] __1, byte[] __2, String __3) {
        PgpPubEncryptBytea2 f = new PgpPubEncryptBytea2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.pgp_pub_encrypt_bytea</code> as a field.
     */
    public static Field<byte[]> pgpPubEncryptBytea2(byte[] __1, byte[] __2, String __3) {
        PgpPubEncryptBytea2 f = new PgpPubEncryptBytea2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Get <code>public.pgp_pub_encrypt_bytea</code> as a field.
     */
    public static Field<byte[]> pgpPubEncryptBytea2(Field<byte[]> __1, Field<byte[]> __2, Field<String> __3) {
        PgpPubEncryptBytea2 f = new PgpPubEncryptBytea2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Call <code>public.pgp_sym_decrypt</code>
     */
    public static String pgpSymDecrypt1(Configuration configuration, byte[] __1, String __2) {
        PgpSymDecrypt1 f = new PgpSymDecrypt1();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.pgp_sym_decrypt</code> as a field.
     */
    public static Field<String> pgpSymDecrypt1(byte[] __1, String __2) {
        PgpSymDecrypt1 f = new PgpSymDecrypt1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.pgp_sym_decrypt</code> as a field.
     */
    public static Field<String> pgpSymDecrypt1(Field<byte[]> __1, Field<String> __2) {
        PgpSymDecrypt1 f = new PgpSymDecrypt1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public.pgp_sym_decrypt</code>
     */
    public static String pgpSymDecrypt2(Configuration configuration, byte[] __1, String __2, String __3) {
        PgpSymDecrypt2 f = new PgpSymDecrypt2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.pgp_sym_decrypt</code> as a field.
     */
    public static Field<String> pgpSymDecrypt2(byte[] __1, String __2, String __3) {
        PgpSymDecrypt2 f = new PgpSymDecrypt2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Get <code>public.pgp_sym_decrypt</code> as a field.
     */
    public static Field<String> pgpSymDecrypt2(Field<byte[]> __1, Field<String> __2, Field<String> __3) {
        PgpSymDecrypt2 f = new PgpSymDecrypt2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Call <code>public.pgp_sym_decrypt_bytea</code>
     */
    public static byte[] pgpSymDecryptBytea1(Configuration configuration, byte[] __1, String __2) {
        PgpSymDecryptBytea1 f = new PgpSymDecryptBytea1();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.pgp_sym_decrypt_bytea</code> as a field.
     */
    public static Field<byte[]> pgpSymDecryptBytea1(byte[] __1, String __2) {
        PgpSymDecryptBytea1 f = new PgpSymDecryptBytea1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.pgp_sym_decrypt_bytea</code> as a field.
     */
    public static Field<byte[]> pgpSymDecryptBytea1(Field<byte[]> __1, Field<String> __2) {
        PgpSymDecryptBytea1 f = new PgpSymDecryptBytea1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public.pgp_sym_decrypt_bytea</code>
     */
    public static byte[] pgpSymDecryptBytea2(Configuration configuration, byte[] __1, String __2, String __3) {
        PgpSymDecryptBytea2 f = new PgpSymDecryptBytea2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.pgp_sym_decrypt_bytea</code> as a field.
     */
    public static Field<byte[]> pgpSymDecryptBytea2(byte[] __1, String __2, String __3) {
        PgpSymDecryptBytea2 f = new PgpSymDecryptBytea2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Get <code>public.pgp_sym_decrypt_bytea</code> as a field.
     */
    public static Field<byte[]> pgpSymDecryptBytea2(Field<byte[]> __1, Field<String> __2, Field<String> __3) {
        PgpSymDecryptBytea2 f = new PgpSymDecryptBytea2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Call <code>public.pgp_sym_encrypt</code>
     */
    public static byte[] pgpSymEncrypt1(Configuration configuration, String __1, String __2) {
        PgpSymEncrypt1 f = new PgpSymEncrypt1();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.pgp_sym_encrypt</code> as a field.
     */
    public static Field<byte[]> pgpSymEncrypt1(String __1, String __2) {
        PgpSymEncrypt1 f = new PgpSymEncrypt1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.pgp_sym_encrypt</code> as a field.
     */
    public static Field<byte[]> pgpSymEncrypt1(Field<String> __1, Field<String> __2) {
        PgpSymEncrypt1 f = new PgpSymEncrypt1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public.pgp_sym_encrypt</code>
     */
    public static byte[] pgpSymEncrypt2(Configuration configuration, String __1, String __2, String __3) {
        PgpSymEncrypt2 f = new PgpSymEncrypt2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.pgp_sym_encrypt</code> as a field.
     */
    public static Field<byte[]> pgpSymEncrypt2(String __1, String __2, String __3) {
        PgpSymEncrypt2 f = new PgpSymEncrypt2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Get <code>public.pgp_sym_encrypt</code> as a field.
     */
    public static Field<byte[]> pgpSymEncrypt2(Field<String> __1, Field<String> __2, Field<String> __3) {
        PgpSymEncrypt2 f = new PgpSymEncrypt2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Call <code>public.pgp_sym_encrypt_bytea</code>
     */
    public static byte[] pgpSymEncryptBytea1(Configuration configuration, byte[] __1, String __2) {
        PgpSymEncryptBytea1 f = new PgpSymEncryptBytea1();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.pgp_sym_encrypt_bytea</code> as a field.
     */
    public static Field<byte[]> pgpSymEncryptBytea1(byte[] __1, String __2) {
        PgpSymEncryptBytea1 f = new PgpSymEncryptBytea1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.pgp_sym_encrypt_bytea</code> as a field.
     */
    public static Field<byte[]> pgpSymEncryptBytea1(Field<byte[]> __1, Field<String> __2) {
        PgpSymEncryptBytea1 f = new PgpSymEncryptBytea1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public.pgp_sym_encrypt_bytea</code>
     */
    public static byte[] pgpSymEncryptBytea2(Configuration configuration, byte[] __1, String __2, String __3) {
        PgpSymEncryptBytea2 f = new PgpSymEncryptBytea2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.pgp_sym_encrypt_bytea</code> as a field.
     */
    public static Field<byte[]> pgpSymEncryptBytea2(byte[] __1, String __2, String __3) {
        PgpSymEncryptBytea2 f = new PgpSymEncryptBytea2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Get <code>public.pgp_sym_encrypt_bytea</code> as a field.
     */
    public static Field<byte[]> pgpSymEncryptBytea2(Field<byte[]> __1, Field<String> __2, Field<String> __3) {
        PgpSymEncryptBytea2 f = new PgpSymEncryptBytea2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static String[] regexpMatches1(Configuration configuration, Object __1, Object __2) {
        RegexpMatches1 f = new RegexpMatches1();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<String[]> regexpMatches1(Object __1, Object __2) {
        RegexpMatches1 f = new RegexpMatches1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<String[]> regexpMatches1(Field<Object> __1, Field<Object> __2) {
        RegexpMatches1 f = new RegexpMatches1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static String[] regexpMatches2(Configuration configuration, Object __1, Object __2, String __3) {
        RegexpMatches2 f = new RegexpMatches2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<String[]> regexpMatches2(Object __1, Object __2, String __3) {
        RegexpMatches2 f = new RegexpMatches2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<String[]> regexpMatches2(Field<Object> __1, Field<Object> __2, Field<String> __3) {
        RegexpMatches2 f = new RegexpMatches2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static String regexpReplace1(Configuration configuration, Object __1, Object __2, String __3) {
        RegexpReplace1 f = new RegexpReplace1();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<String> regexpReplace1(Object __1, Object __2, String __3) {
        RegexpReplace1 f = new RegexpReplace1();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<String> regexpReplace1(Field<Object> __1, Field<Object> __2, Field<String> __3) {
        RegexpReplace1 f = new RegexpReplace1();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static String regexpReplace2(Configuration configuration, Object __1, Object __2, String __3, String __4) {
        RegexpReplace2 f = new RegexpReplace2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<String> regexpReplace2(Object __1, Object __2, String __3, String __4) {
        RegexpReplace2 f = new RegexpReplace2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<String> regexpReplace2(Field<Object> __1, Field<Object> __2, Field<String> __3, Field<String> __4) {
        RegexpReplace2 f = new RegexpReplace2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static String[] regexpSplitToArray1(Configuration configuration, Object __1, Object __2) {
        RegexpSplitToArray1 f = new RegexpSplitToArray1();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<String[]> regexpSplitToArray1(Object __1, Object __2) {
        RegexpSplitToArray1 f = new RegexpSplitToArray1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<String[]> regexpSplitToArray1(Field<Object> __1, Field<Object> __2) {
        RegexpSplitToArray1 f = new RegexpSplitToArray1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static String[] regexpSplitToArray2(Configuration configuration, Object __1, Object __2, String __3) {
        RegexpSplitToArray2 f = new RegexpSplitToArray2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<String[]> regexpSplitToArray2(Object __1, Object __2, String __3) {
        RegexpSplitToArray2 f = new RegexpSplitToArray2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<String[]> regexpSplitToArray2(Field<Object> __1, Field<Object> __2, Field<String> __3) {
        RegexpSplitToArray2 f = new RegexpSplitToArray2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static String regexpSplitToTable1(Configuration configuration, Object __1, Object __2) {
        RegexpSplitToTable1 f = new RegexpSplitToTable1();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<String> regexpSplitToTable1(Object __1, Object __2) {
        RegexpSplitToTable1 f = new RegexpSplitToTable1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<String> regexpSplitToTable1(Field<Object> __1, Field<Object> __2) {
        RegexpSplitToTable1 f = new RegexpSplitToTable1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static String regexpSplitToTable2(Configuration configuration, Object __1, Object __2, String __3) {
        RegexpSplitToTable2 f = new RegexpSplitToTable2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<String> regexpSplitToTable2(Object __1, Object __2, String __3) {
        RegexpSplitToTable2 f = new RegexpSplitToTable2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<String> regexpSplitToTable2(Field<Object> __1, Field<Object> __2, Field<String> __3) {
        RegexpSplitToTable2 f = new RegexpSplitToTable2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Call <code>public.removeanalysisfromdataset</code>
     */
    public static void removeanalysisfromdataset(Configuration configuration, Integer datasetid, Integer analysisid) {
        Removeanalysisfromdataset p = new Removeanalysisfromdataset();
        p.setDatasetid(datasetid);
        p.setAnalysisid(analysisid);

        p.execute(configuration);
    }

    /**
     * Call <code>public.removereadtablefromrole</code>
     */
    public static void removereadtablefromrole(Configuration configuration, Integer roleid, Integer tableid) {
        Removereadtablefromrole p = new Removereadtablefromrole();
        p.setRoleid(roleid);
        p.setTableid(tableid);

        p.execute(configuration);
    }

    /**
     * Call <code>public.removerolefromcontact</code>
     */
    public static void removerolefromcontact(Configuration configuration, Integer contactid, Integer roleid) {
        Removerolefromcontact p = new Removerolefromcontact();
        p.setContactid(contactid);
        p.setRoleid(roleid);

        p.execute(configuration);
    }

    /**
     * Call <code>public.removewritetablefromrole</code>
     */
    public static void removewritetablefromrole(Configuration configuration, Integer roleid, Integer tableid) {
        Removewritetablefromrole p = new Removewritetablefromrole();
        p.setRoleid(roleid);
        p.setTableid(tableid);

        p.execute(configuration);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static String replace(Configuration configuration, Object __1, Object __2, Object __3) {
        Replace f = new Replace();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<String> replace(Object __1, Object __2, Object __3) {
        Replace f = new Replace();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<String> replace(Field<Object> __1, Field<Object> __2, Field<Object> __3) {
        Replace f = new Replace();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Call <code>public.setdatasetjobstatusok</code>
     */
    public static Integer setdatasetjobstatusok(Configuration configuration, Integer datasetid) {
        Setdatasetjobstatusok f = new Setdatasetjobstatusok();
        f.setDatasetid(datasetid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.setdatasetjobstatusok</code> as a field.
     */
    public static Field<Integer> setdatasetjobstatusok(Integer datasetid) {
        Setdatasetjobstatusok f = new Setdatasetjobstatusok();
        f.setDatasetid(datasetid);

        return f.asField();
    }

    /**
     * Get <code>public.setdatasetjobstatusok</code> as a field.
     */
    public static Field<Integer> setdatasetjobstatusok(Field<Integer> datasetid) {
        Setdatasetjobstatusok f = new Setdatasetjobstatusok();
        f.setDatasetid(datasetid);

        return f.asField();
    }

    /**
     * Call <code>public.setdatawarehouseversion</code>
     */
    public static Integer setdatawarehouseversion(Configuration configuration, String ver) {
        Setdatawarehouseversion f = new Setdatawarehouseversion();
        f.setVer(ver);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.setdatawarehouseversion</code> as a field.
     */
    public static Field<Integer> setdatawarehouseversion(String ver) {
        Setdatawarehouseversion f = new Setdatawarehouseversion();
        f.setVer(ver);

        return f.asField();
    }

    /**
     * Get <code>public.setdatawarehouseversion</code> as a field.
     */
    public static Field<Integer> setdatawarehouseversion(Field<String> ver) {
        Setdatawarehouseversion f = new Setdatawarehouseversion();
        f.setVer(ver);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static String splitPart(Configuration configuration, Object __1, Object __2, Integer __3) {
        SplitPart f = new SplitPart();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<String> splitPart(Object __1, Object __2, Integer __3) {
        SplitPart f = new SplitPart();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<String> splitPart(Field<Object> __1, Field<Object> __2, Field<Integer> __3) {
        SplitPart f = new SplitPart();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Integer strpos(Configuration configuration, Object __1, Object __2) {
        Strpos f = new Strpos();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Integer> strpos(Object __1, Object __2) {
        Strpos f = new Strpos();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Integer> strpos(Field<Object> __1, Field<Object> __2) {
        Strpos f = new Strpos();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Boolean texticlike1(Configuration configuration, Object __1, Object __2) {
        Texticlike1 f = new Texticlike1();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> texticlike1(Object __1, Object __2) {
        Texticlike1 f = new Texticlike1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> texticlike1(Field<Object> __1, Field<Object> __2) {
        Texticlike1 f = new Texticlike1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Boolean texticlike2(Configuration configuration, Object __1, String __2) {
        Texticlike2 f = new Texticlike2();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> texticlike2(Object __1, String __2) {
        Texticlike2 f = new Texticlike2();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> texticlike2(Field<Object> __1, Field<String> __2) {
        Texticlike2 f = new Texticlike2();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Boolean texticnlike1(Configuration configuration, Object __1, Object __2) {
        Texticnlike1 f = new Texticnlike1();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> texticnlike1(Object __1, Object __2) {
        Texticnlike1 f = new Texticnlike1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> texticnlike1(Field<Object> __1, Field<Object> __2) {
        Texticnlike1 f = new Texticnlike1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Boolean texticnlike2(Configuration configuration, Object __1, String __2) {
        Texticnlike2 f = new Texticnlike2();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> texticnlike2(Object __1, String __2) {
        Texticnlike2 f = new Texticnlike2();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> texticnlike2(Field<Object> __1, Field<String> __2) {
        Texticnlike2 f = new Texticnlike2();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Boolean texticregexeq1(Configuration configuration, Object __1, Object __2) {
        Texticregexeq1 f = new Texticregexeq1();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> texticregexeq1(Object __1, Object __2) {
        Texticregexeq1 f = new Texticregexeq1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> texticregexeq1(Field<Object> __1, Field<Object> __2) {
        Texticregexeq1 f = new Texticregexeq1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Boolean texticregexeq2(Configuration configuration, Object __1, String __2) {
        Texticregexeq2 f = new Texticregexeq2();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> texticregexeq2(Object __1, String __2) {
        Texticregexeq2 f = new Texticregexeq2();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> texticregexeq2(Field<Object> __1, Field<String> __2) {
        Texticregexeq2 f = new Texticregexeq2();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Boolean texticregexne1(Configuration configuration, Object __1, Object __2) {
        Texticregexne1 f = new Texticregexne1();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> texticregexne1(Object __1, Object __2) {
        Texticregexne1 f = new Texticregexne1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> texticregexne1(Field<Object> __1, Field<Object> __2) {
        Texticregexne1 f = new Texticregexne1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Boolean texticregexne2(Configuration configuration, Object __1, String __2) {
        Texticregexne2 f = new Texticregexne2();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> texticregexne2(Object __1, String __2) {
        Texticregexne2 f = new Texticregexne2();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Boolean> texticregexne2(Field<Object> __1, Field<String> __2) {
        Texticregexne2 f = new Texticregexne2();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static String translate(Configuration configuration, Object __1, Object __2, String __3) {
        Translate f = new Translate();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<String> translate(Object __1, Object __2, String __3) {
        Translate f = new Translate();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<String> translate(Field<Object> __1, Field<Object> __2, Field<String> __3) {
        Translate f = new Translate();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static void updateanalysis1(Configuration configuration, Integer id, String analysisname, String analysisdescription, Integer typeid, String analysisprogram, String analysisprogramversion, String aanalysisalgorithm, String analysissourcename, String analysissourceversion, String analysissourceuri, Integer referenceid, Object analysisparameters, Timestamp analysistimeexecuted, Integer analysisstatus) {
        Updateanalysis1 p = new Updateanalysis1();
        p.setId(id);
        p.setAnalysisname(analysisname);
        p.setAnalysisdescription(analysisdescription);
        p.setTypeid(typeid);
        p.setAnalysisprogram(analysisprogram);
        p.setAnalysisprogramversion(analysisprogramversion);
        p.setAanalysisalgorithm(aanalysisalgorithm);
        p.setAnalysissourcename(analysissourcename);
        p.setAnalysissourceversion(analysissourceversion);
        p.setAnalysissourceuri(analysissourceuri);
        p.setReferenceid(referenceid);
        p.setAnalysisparameters(analysisparameters);
        p.setAnalysistimeexecuted(analysistimeexecuted);
        p.setAnalysisstatus(analysisstatus);

        p.execute(configuration);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static void updateanalysis2(Configuration configuration, Integer id, String analysisname, String analysisdescription, Integer typeid, String analysisprogram, String analysisprogramversion, String aanalysisalgorithm, String analysissourcename, String analysissourceversion, String analysissourceuri, Integer referenceid, Object analysisparameters, Timestamp analysistimeexecuted, Integer analysisstatus, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate) {
        Updateanalysis2 p = new Updateanalysis2();
        p.setId(id);
        p.setAnalysisname(analysisname);
        p.setAnalysisdescription(analysisdescription);
        p.setTypeid(typeid);
        p.setAnalysisprogram(analysisprogram);
        p.setAnalysisprogramversion(analysisprogramversion);
        p.setAanalysisalgorithm(aanalysisalgorithm);
        p.setAnalysissourcename(analysissourcename);
        p.setAnalysissourceversion(analysissourceversion);
        p.setAnalysissourceuri(analysissourceuri);
        p.setReferenceid(referenceid);
        p.setAnalysisparameters(analysisparameters);
        p.setAnalysistimeexecuted(analysistimeexecuted);
        p.setAnalysisstatus(analysisstatus);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updateanalysis</code>
     */
    public static void updateanalysis3(Configuration configuration, Integer id, String analysisname, String analysisdescription, Integer typeid, String analysisprogram, String analysisprogramversion, String aanalysisalgorithm, String analysissourcename, String analysissourceversion, String analysissourceuri, Integer referenceid, Timestamp analysistimeexecuted, Integer analysisstatus, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate) {
        Updateanalysis3 p = new Updateanalysis3();
        p.setId(id);
        p.setAnalysisname(analysisname);
        p.setAnalysisdescription(analysisdescription);
        p.setTypeid(typeid);
        p.setAnalysisprogram(analysisprogram);
        p.setAnalysisprogramversion(analysisprogramversion);
        p.setAanalysisalgorithm(aanalysisalgorithm);
        p.setAnalysissourcename(analysissourcename);
        p.setAnalysissourceversion(analysissourceversion);
        p.setAnalysissourceuri(analysissourceuri);
        p.setReferenceid(referenceid);
        p.setAnalysistimeexecuted(analysistimeexecuted);
        p.setAnalysisstatus(analysisstatus);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updatecontact</code>
     */
    public static void updatecontact(Configuration configuration, Integer contactid, String contactlastname, String contactfirstname, String contactcode, String contactemail, Integer[] contactroles, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate, Integer organizationid, String uname) {
        Updatecontact p = new Updatecontact();
        p.setContactid(contactid);
        p.setContactlastname(contactlastname);
        p.setContactfirstname(contactfirstname);
        p.setContactcode(contactcode);
        p.setContactemail(contactemail);
        p.setContactroles(contactroles);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);
        p.setOrganizationid(organizationid);
        p.setUname(uname);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updatecv</code>
     */
    public static Integer updatecv(Configuration configuration, Integer pid, Integer pcvgroupid, String pcvterm, String pcvdefinition, Integer pcvrank, String pabbreviation, Integer pdbxrefid, Integer pstatus) {
        Updatecv f = new Updatecv();
        f.setPid(pid);
        f.setPcvgroupid(pcvgroupid);
        f.setPcvterm(pcvterm);
        f.setPcvdefinition(pcvdefinition);
        f.setPcvrank(pcvrank);
        f.setPabbreviation(pabbreviation);
        f.setPdbxrefid(pdbxrefid);
        f.setPstatus(pstatus);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.updatecv</code> as a field.
     */
    public static Field<Integer> updatecv(Integer pid, Integer pcvgroupid, String pcvterm, String pcvdefinition, Integer pcvrank, String pabbreviation, Integer pdbxrefid, Integer pstatus) {
        Updatecv f = new Updatecv();
        f.setPid(pid);
        f.setPcvgroupid(pcvgroupid);
        f.setPcvterm(pcvterm);
        f.setPcvdefinition(pcvdefinition);
        f.setPcvrank(pcvrank);
        f.setPabbreviation(pabbreviation);
        f.setPdbxrefid(pdbxrefid);
        f.setPstatus(pstatus);

        return f.asField();
    }

    /**
     * Get <code>public.updatecv</code> as a field.
     */
    public static Field<Integer> updatecv(Field<Integer> pid, Field<Integer> pcvgroupid, Field<String> pcvterm, Field<String> pcvdefinition, Field<Integer> pcvrank, Field<String> pabbreviation, Field<Integer> pdbxrefid, Field<Integer> pstatus) {
        Updatecv f = new Updatecv();
        f.setPid(pid);
        f.setPcvgroupid(pcvgroupid);
        f.setPcvterm(pcvterm);
        f.setPcvdefinition(pcvdefinition);
        f.setPcvrank(pcvrank);
        f.setPabbreviation(pabbreviation);
        f.setPdbxrefid(pdbxrefid);
        f.setPstatus(pstatus);

        return f.asField();
    }

    /**
     * Call <code>public.updatecvgroup</code>
     */
    public static Integer updatecvgroup(Configuration configuration, Integer pid, String pname, String pdefinition, Integer ptype) {
        Updatecvgroup f = new Updatecvgroup();
        f.setPid(pid);
        f.setPname(pname);
        f.setPdefinition(pdefinition);
        f.setPtype(ptype);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.updatecvgroup</code> as a field.
     */
    public static Field<Integer> updatecvgroup(Integer pid, String pname, String pdefinition, Integer ptype) {
        Updatecvgroup f = new Updatecvgroup();
        f.setPid(pid);
        f.setPname(pname);
        f.setPdefinition(pdefinition);
        f.setPtype(ptype);

        return f.asField();
    }

    /**
     * Get <code>public.updatecvgroup</code> as a field.
     */
    public static Field<Integer> updatecvgroup(Field<Integer> pid, Field<String> pname, Field<String> pdefinition, Field<Integer> ptype) {
        Updatecvgroup f = new Updatecvgroup();
        f.setPid(pid);
        f.setPname(pname);
        f.setPdefinition(pdefinition);
        f.setPtype(ptype);

        return f.asField();
    }

    /**
     * Call <code>public.updatedataset</code>
     */
    public static void updatedataset(Configuration configuration, Integer id, String datasetname, Integer experimentid, Integer callinganalysisid, Integer[] datasetanalyses, String datatable, String datafile, String qualitytable, String qualityfile, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate, Integer datasetstatus, Integer typeid, Integer jobid) {
        Updatedataset p = new Updatedataset();
        p.setId(id);
        p.setDatasetname(datasetname);
        p.setExperimentid(experimentid);
        p.setCallinganalysisid(callinganalysisid);
        p.setDatasetanalyses(datasetanalyses);
        p.setDatatable(datatable);
        p.setDatafile(datafile);
        p.setQualitytable(qualitytable);
        p.setQualityfile(qualityfile);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);
        p.setDatasetstatus(datasetstatus);
        p.setTypeid(typeid);
        p.setJobid(jobid);

        p.execute(configuration);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static void updatedatasetmarker(Configuration configuration, Integer id, Integer datasetid, Integer markerid, Float callrate, Float datasetmarkermaf, Float datasetmarkerreproducibility, Object datasetmarkerscores) {
        Updatedatasetmarker p = new Updatedatasetmarker();
        p.setId(id);
        p.setDatasetid(datasetid);
        p.setMarkerid(markerid);
        p.setCallrate(callrate);
        p.setDatasetmarkermaf(datasetmarkermaf);
        p.setDatasetmarkerreproducibility(datasetmarkerreproducibility);
        p.setDatasetmarkerscores(datasetmarkerscores);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updatedbxref</code>
     */
    public static Integer updatedbxref(Configuration configuration, Integer pid, String paccession, String pver, String pdescription, String pdbname, String purl) {
        Updatedbxref f = new Updatedbxref();
        f.setPid(pid);
        f.setPaccession(paccession);
        f.setPver(pver);
        f.setPdescription(pdescription);
        f.setPdbname(pdbname);
        f.setPurl(purl);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.updatedbxref</code> as a field.
     */
    public static Field<Integer> updatedbxref(Integer pid, String paccession, String pver, String pdescription, String pdbname, String purl) {
        Updatedbxref f = new Updatedbxref();
        f.setPid(pid);
        f.setPaccession(paccession);
        f.setPver(pver);
        f.setPdescription(pdescription);
        f.setPdbname(pdbname);
        f.setPurl(purl);

        return f.asField();
    }

    /**
     * Get <code>public.updatedbxref</code> as a field.
     */
    public static Field<Integer> updatedbxref(Field<Integer> pid, Field<String> paccession, Field<String> pver, Field<String> pdescription, Field<String> pdbname, Field<String> purl) {
        Updatedbxref f = new Updatedbxref();
        f.setPid(pid);
        f.setPaccession(paccession);
        f.setPver(pver);
        f.setPdescription(pdescription);
        f.setPdbname(pdbname);
        f.setPurl(purl);

        return f.asField();
    }

    /**
     * Call <code>public.updatedisplay</code>
     */
    public static void updatedisplay(Configuration configuration, Integer id, String tablename, String columnname, String displayname, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate, Integer displayrank) {
        Updatedisplay p = new Updatedisplay();
        p.setId(id);
        p.setTablename(tablename);
        p.setColumnname(columnname);
        p.setDisplayname(displayname);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);
        p.setDisplayrank(displayrank);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updatednarun</code>
     */
    public static void updatednarun(Configuration configuration, Integer id, Integer experimentid, Integer dnasampleid, String dnarunname, String dnaruncode) {
        Updatednarun p = new Updatednarun();
        p.setId(id);
        p.setExperimentid(experimentid);
        p.setDnasampleid(dnasampleid);
        p.setDnarunname(dnarunname);
        p.setDnaruncode(dnaruncode);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updatednarunpropertybyid</code>
     */
    public static void updatednarunpropertybyid(Configuration configuration, Integer id, Integer propertyid, String propertyvalue) {
        Updatednarunpropertybyid p = new Updatednarunpropertybyid();
        p.setId(id);
        p.setPropertyid(propertyid);
        p.setPropertyvalue(propertyvalue);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updatednarunpropertybyname</code>
     */
    public static void updatednarunpropertybyname(Configuration configuration, Integer id, String propertyname, String propertyvalue) {
        Updatednarunpropertybyname p = new Updatednarunpropertybyname();
        p.setId(id);
        p.setPropertyname(propertyname);
        p.setPropertyvalue(propertyvalue);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updatednasample</code>
     */
    public static void updatednasample1(Configuration configuration, Integer id, String dnasamplename, String dnasamplecode, String dnasampleplatename, String dnasamplenum, String wellrow, String wellcol, Integer projectid, Integer germplasmid, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate, Integer dnasamplestatus) {
        Updatednasample1 p = new Updatednasample1();
        p.setId(id);
        p.setDnasamplename(dnasamplename);
        p.setDnasamplecode(dnasamplecode);
        p.setDnasampleplatename(dnasampleplatename);
        p.setDnasamplenum(dnasamplenum);
        p.setWellrow(wellrow);
        p.setWellcol(wellcol);
        p.setProjectid(projectid);
        p.setGermplasmid(germplasmid);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);
        p.setDnasamplestatus(dnasamplestatus);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updatednasample</code>
     */
    public static void updatednasample2(Configuration configuration, Integer id, String dnasamplename, String dnasamplecode, String dnasampleplatename, String dnasamplenum, String wellrow, String wellcol, Integer projectid, Integer germplasmid, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate, Integer dnasamplestatus, String _Uuid) {
        Updatednasample2 p = new Updatednasample2();
        p.setId(id);
        p.setDnasamplename(dnasamplename);
        p.setDnasamplecode(dnasamplecode);
        p.setDnasampleplatename(dnasampleplatename);
        p.setDnasamplenum(dnasamplenum);
        p.setWellrow(wellrow);
        p.setWellcol(wellcol);
        p.setProjectid(projectid);
        p.setGermplasmid(germplasmid);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);
        p.setDnasamplestatus(dnasamplestatus);
        p.set_Uuid(_Uuid);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updatednasamplepropertybyid</code>
     */
    public static void updatednasamplepropertybyid(Configuration configuration, Integer id, Integer propertyid, String propertyvalue) {
        Updatednasamplepropertybyid p = new Updatednasamplepropertybyid();
        p.setId(id);
        p.setPropertyid(propertyid);
        p.setPropertyvalue(propertyvalue);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updatednasamplepropertybyname</code>
     */
    public static void updatednasamplepropertybyname(Configuration configuration, Integer id, String propertyname, String propertyvalue) {
        Updatednasamplepropertybyname p = new Updatednasamplepropertybyname();
        p.setId(id);
        p.setPropertyname(propertyname);
        p.setPropertyvalue(propertyvalue);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updateexperiment</code>
     */
    public static Integer updateexperiment(Configuration configuration, Integer pid, String pname, String pcode, Integer pprojectid, Integer pvendorprotocolid, Integer pmanifestid, String pdatafile, Integer pcreatedby, Date pcreateddate, Integer pmodifiedby, Date pmodifieddate, Integer pstatus) {
        Updateexperiment f = new Updateexperiment();
        f.setPid(pid);
        f.setPname(pname);
        f.setPcode(pcode);
        f.setPprojectid(pprojectid);
        f.setPvendorprotocolid(pvendorprotocolid);
        f.setPmanifestid(pmanifestid);
        f.setPdatafile(pdatafile);
        f.setPcreatedby(pcreatedby);
        f.setPcreateddate(pcreateddate);
        f.setPmodifiedby(pmodifiedby);
        f.setPmodifieddate(pmodifieddate);
        f.setPstatus(pstatus);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.updateexperiment</code> as a field.
     */
    public static Field<Integer> updateexperiment(Integer pid, String pname, String pcode, Integer pprojectid, Integer pvendorprotocolid, Integer pmanifestid, String pdatafile, Integer pcreatedby, Date pcreateddate, Integer pmodifiedby, Date pmodifieddate, Integer pstatus) {
        Updateexperiment f = new Updateexperiment();
        f.setPid(pid);
        f.setPname(pname);
        f.setPcode(pcode);
        f.setPprojectid(pprojectid);
        f.setPvendorprotocolid(pvendorprotocolid);
        f.setPmanifestid(pmanifestid);
        f.setPdatafile(pdatafile);
        f.setPcreatedby(pcreatedby);
        f.setPcreateddate(pcreateddate);
        f.setPmodifiedby(pmodifiedby);
        f.setPmodifieddate(pmodifieddate);
        f.setPstatus(pstatus);

        return f.asField();
    }

    /**
     * Get <code>public.updateexperiment</code> as a field.
     */
    public static Field<Integer> updateexperiment(Field<Integer> pid, Field<String> pname, Field<String> pcode, Field<Integer> pprojectid, Field<Integer> pvendorprotocolid, Field<Integer> pmanifestid, Field<String> pdatafile, Field<Integer> pcreatedby, Field<Date> pcreateddate, Field<Integer> pmodifiedby, Field<Date> pmodifieddate, Field<Integer> pstatus) {
        Updateexperiment f = new Updateexperiment();
        f.setPid(pid);
        f.setPname(pname);
        f.setPcode(pcode);
        f.setPprojectid(pprojectid);
        f.setPvendorprotocolid(pvendorprotocolid);
        f.setPmanifestid(pmanifestid);
        f.setPdatafile(pdatafile);
        f.setPcreatedby(pcreatedby);
        f.setPcreateddate(pcreateddate);
        f.setPmodifiedby(pmodifiedby);
        f.setPmodifieddate(pmodifieddate);
        f.setPstatus(pstatus);

        return f.asField();
    }

    /**
     * Call <code>public.updategermplasm</code>
     */
    public static void updategermplasm(Configuration configuration, Integer id, String germplasmname, String externalcode, Integer speciesid, Integer typeid, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate, Integer germplasmstatus, String germplasmcode) {
        Updategermplasm p = new Updategermplasm();
        p.setId(id);
        p.setGermplasmname(germplasmname);
        p.setExternalcode(externalcode);
        p.setSpeciesid(speciesid);
        p.setTypeid(typeid);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);
        p.setGermplasmstatus(germplasmstatus);
        p.setGermplasmcode(germplasmcode);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updategermplasmpropertybyid</code>
     */
    public static void updategermplasmpropertybyid(Configuration configuration, Integer id, Integer propertyid, String propertyvalue) {
        Updategermplasmpropertybyid p = new Updategermplasmpropertybyid();
        p.setId(id);
        p.setPropertyid(propertyid);
        p.setPropertyvalue(propertyvalue);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updategermplasmpropertybyname</code>
     */
    public static void updategermplasmpropertybyname(Configuration configuration, Integer id, String propertyname, String propertyvalue) {
        Updategermplasmpropertybyname p = new Updategermplasmpropertybyname();
        p.setId(id);
        p.setPropertyname(propertyname);
        p.setPropertyvalue(propertyvalue);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updatejob</code>
     */
    public static void updatejob1(Configuration configuration, Integer id, String _Name, String _Type, String _PayloadType, String _Status, String _Message, Integer _SubmittedBy) {
        Updatejob1 p = new Updatejob1();
        p.setId(id);
        p.set_Name(_Name);
        p.set_Type(_Type);
        p.set_PayloadType(_PayloadType);
        p.set_Status(_Status);
        p.set_Message(_Message);
        p.set_SubmittedBy(_SubmittedBy);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updatejob</code>
     */
    public static void updatejob2(Configuration configuration, Integer id, String _Name, Integer _TypeId, Integer _PayloadTypeId, Integer _Status, String _Message, Integer _SubmittedBy) {
        Updatejob2 p = new Updatejob2();
        p.setId(id);
        p.set_Name(_Name);
        p.set_TypeId(_TypeId);
        p.set_PayloadTypeId(_PayloadTypeId);
        p.set_Status(_Status);
        p.set_Message(_Message);
        p.set_SubmittedBy(_SubmittedBy);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updatelinkagegroup</code>
     */
    public static void updatelinkagegroup1(Configuration configuration, Integer id, String linkagegroupname, Integer linkagegroupstart, Integer linkagegroupstop, Integer mapid, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate) {
        Updatelinkagegroup1 p = new Updatelinkagegroup1();
        p.setId(id);
        p.setLinkagegroupname(linkagegroupname);
        p.setLinkagegroupstart(linkagegroupstart);
        p.setLinkagegroupstop(linkagegroupstop);
        p.setMapid(mapid);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updatelinkagegroup</code>
     */
    public static void updatelinkagegroup2(Configuration configuration, Integer id, String linkagegroupname, BigDecimal linkagegroupstart, BigDecimal linkagegroupstop, Integer mapid, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate) {
        Updatelinkagegroup2 p = new Updatelinkagegroup2();
        p.setId(id);
        p.setLinkagegroupname(linkagegroupname);
        p.setLinkagegroupstart(linkagegroupstart);
        p.setLinkagegroupstop(linkagegroupstop);
        p.setMapid(mapid);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updatemanifest</code>
     */
    public static void updatemanifest(Configuration configuration, Integer manifestid, String manifestname, String manifestcode, String filepath, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate) {
        Updatemanifest p = new Updatemanifest();
        p.setManifestid(manifestid);
        p.setManifestname(manifestname);
        p.setManifestcode(manifestcode);
        p.setFilepath(filepath);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updatemapset</code>
     */
    public static void updatemapset(Configuration configuration, Integer id, String mapsetname, String mapsetcode, String mapsetdescription, Integer referenceid, Integer typeid, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate, Integer mapsetstatus) {
        Updatemapset p = new Updatemapset();
        p.setId(id);
        p.setMapsetname(mapsetname);
        p.setMapsetcode(mapsetcode);
        p.setMapsetdescription(mapsetdescription);
        p.setReferenceid(referenceid);
        p.setTypeid(typeid);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);
        p.setMapsetstatus(mapsetstatus);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updatemapsetpropertybyid</code>
     */
    public static void updatemapsetpropertybyid(Configuration configuration, Integer id, Integer propertyid, String propertyvalue) {
        Updatemapsetpropertybyid p = new Updatemapsetpropertybyid();
        p.setId(id);
        p.setPropertyid(propertyid);
        p.setPropertyvalue(propertyvalue);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updatemapsetpropertybyname</code>
     */
    public static void updatemapsetpropertybyname(Configuration configuration, Integer id, String propertyname, String propertyvalue) {
        Updatemapsetpropertybyname p = new Updatemapsetpropertybyname();
        p.setId(id);
        p.setPropertyname(propertyname);
        p.setPropertyvalue(propertyvalue);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updatemarker</code>
     */
    public static void updatemarker(Configuration configuration, Integer id, Integer platformid, Integer variantid, String markername, String markercode, String markerref, String[] markeralts, String markersequence, Integer referenceid, Integer strandid, Integer markerstatus) {
        Updatemarker p = new Updatemarker();
        p.setId(id);
        p.setPlatformid(platformid);
        p.setVariantid(variantid);
        p.setMarkername(markername);
        p.setMarkercode(markercode);
        p.setMarkerref(markerref);
        p.setMarkeralts(markeralts);
        p.setMarkersequence(markersequence);
        p.setReferenceid(referenceid);
        p.setStrandid(strandid);
        p.setMarkerstatus(markerstatus);

        p.execute(configuration);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static void updatemarkergroup1(Configuration configuration, Integer id, String markergroupname, String markergroupcode, Object markergroupmarkers, String germplasmgroup, Integer createdby, Date createdate, String modifiedby, Date modifieddate, Integer markergroupstatus) {
        Updatemarkergroup1 p = new Updatemarkergroup1();
        p.setId(id);
        p.setMarkergroupname(markergroupname);
        p.setMarkergroupcode(markergroupcode);
        p.setMarkergroupmarkers(markergroupmarkers);
        p.setGermplasmgroup(germplasmgroup);
        p.setCreatedby(createdby);
        p.setCreatedate(createdate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);
        p.setMarkergroupstatus(markergroupstatus);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updatemarkergroup</code>
     */
    public static void updatemarkergroup2(Configuration configuration, Integer id, String markergroupname, String markergroupcode, String germplasmgroup, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate, Integer markergroupstatus) {
        Updatemarkergroup2 p = new Updatemarkergroup2();
        p.setId(id);
        p.setMarkergroupname(markergroupname);
        p.setMarkergroupcode(markergroupcode);
        p.setGermplasmgroup(germplasmgroup);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);
        p.setMarkergroupstatus(markergroupstatus);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updatemarkergroupname</code>
     */
    public static Integer updatemarkergroupname(Configuration configuration, Integer _Id, String _Name) {
        Updatemarkergroupname f = new Updatemarkergroupname();
        f.set_Id(_Id);
        f.set_Name(_Name);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.updatemarkergroupname</code> as a field.
     */
    public static Field<Integer> updatemarkergroupname(Integer _Id, String _Name) {
        Updatemarkergroupname f = new Updatemarkergroupname();
        f.set_Id(_Id);
        f.set_Name(_Name);

        return f.asField();
    }

    /**
     * Get <code>public.updatemarkergroupname</code> as a field.
     */
    public static Field<Integer> updatemarkergroupname(Field<Integer> _Id, Field<String> _Name) {
        Updatemarkergroupname f = new Updatemarkergroupname();
        f.set_Id(_Id);
        f.set_Name(_Name);

        return f.asField();
    }

    /**
     * Call <code>public.updatemarkerlinkagegroup</code>
     */
    public static void updatemarkerlinkagegroup(Configuration configuration, Integer id, Integer markerid, BigDecimal markerlinkagegroupstart, BigDecimal markerlinkagegroupstop, Integer linkagegroupid) {
        Updatemarkerlinkagegroup p = new Updatemarkerlinkagegroup();
        p.setId(id);
        p.setMarkerid(markerid);
        p.setMarkerlinkagegroupstart(markerlinkagegroupstart);
        p.setMarkerlinkagegroupstop(markerlinkagegroupstop);
        p.setLinkagegroupid(linkagegroupid);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updatemarkerpropertybyid</code>
     */
    public static void updatemarkerpropertybyid(Configuration configuration, Integer id, Integer propertyid, String propertyvalue) {
        Updatemarkerpropertybyid p = new Updatemarkerpropertybyid();
        p.setId(id);
        p.setPropertyid(propertyid);
        p.setPropertyvalue(propertyvalue);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updatemarkerpropertybyname</code>
     */
    public static void updatemarkerpropertybyname(Configuration configuration, Integer id, String propertyname, String propertyvalue) {
        Updatemarkerpropertybyname p = new Updatemarkerpropertybyname();
        p.setId(id);
        p.setPropertyname(propertyname);
        p.setPropertyvalue(propertyvalue);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updateorganization</code>
     */
    public static void updateorganization(Configuration configuration, Integer orgid, String orgname, String orgaddress, String orgwebsite, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate, Integer orgstatus) {
        Updateorganization p = new Updateorganization();
        p.setOrgid(orgid);
        p.setOrgname(orgname);
        p.setOrgaddress(orgaddress);
        p.setOrgwebsite(orgwebsite);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);
        p.setOrgstatus(orgstatus);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updateplatform</code>
     */
    public static Integer updateplatform(Configuration configuration, Integer id, String platformname, String platformcode, String platformdescription, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate, Integer platformstatus, Integer typeid) {
        Updateplatform f = new Updateplatform();
        f.setId(id);
        f.setPlatformname(platformname);
        f.setPlatformcode(platformcode);
        f.setPlatformdescription(platformdescription);
        f.setCreatedby(createdby);
        f.setCreateddate(createddate);
        f.setModifiedby(modifiedby);
        f.setModifieddate(modifieddate);
        f.setPlatformstatus(platformstatus);
        f.setTypeid(typeid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.updateplatform</code> as a field.
     */
    public static Field<Integer> updateplatform(Integer id, String platformname, String platformcode, String platformdescription, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate, Integer platformstatus, Integer typeid) {
        Updateplatform f = new Updateplatform();
        f.setId(id);
        f.setPlatformname(platformname);
        f.setPlatformcode(platformcode);
        f.setPlatformdescription(platformdescription);
        f.setCreatedby(createdby);
        f.setCreateddate(createddate);
        f.setModifiedby(modifiedby);
        f.setModifieddate(modifieddate);
        f.setPlatformstatus(platformstatus);
        f.setTypeid(typeid);

        return f.asField();
    }

    /**
     * Get <code>public.updateplatform</code> as a field.
     */
    public static Field<Integer> updateplatform(Field<Integer> id, Field<String> platformname, Field<String> platformcode, Field<String> platformdescription, Field<Integer> createdby, Field<Date> createddate, Field<Integer> modifiedby, Field<Date> modifieddate, Field<Integer> platformstatus, Field<Integer> typeid) {
        Updateplatform f = new Updateplatform();
        f.setId(id);
        f.setPlatformname(platformname);
        f.setPlatformcode(platformcode);
        f.setPlatformdescription(platformdescription);
        f.setCreatedby(createdby);
        f.setCreateddate(createddate);
        f.setModifiedby(modifiedby);
        f.setModifieddate(modifieddate);
        f.setPlatformstatus(platformstatus);
        f.setTypeid(typeid);

        return f.asField();
    }

    /**
     * Call <code>public.updateplatformpropertybyid</code>
     */
    public static void updateplatformpropertybyid(Configuration configuration, Integer id, Integer propertyid, String propertyvalue) {
        Updateplatformpropertybyid p = new Updateplatformpropertybyid();
        p.setId(id);
        p.setPropertyid(propertyid);
        p.setPropertyvalue(propertyvalue);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updateplatformpropertybyname</code>
     */
    public static void updateplatformpropertybyname(Configuration configuration, Integer id, String propertyname, String propertyvalue) {
        Updateplatformpropertybyname p = new Updateplatformpropertybyname();
        p.setId(id);
        p.setPropertyname(propertyname);
        p.setPropertyvalue(propertyvalue);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updateproject</code>
     */
    public static void updateproject(Configuration configuration, Integer pid, String projectname, String projectcode, String projectdescription, Integer picontact, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate, Integer projectstatus) {
        Updateproject p = new Updateproject();
        p.setPid(pid);
        p.setProjectname(projectname);
        p.setProjectcode(projectcode);
        p.setProjectdescription(projectdescription);
        p.setPicontact(picontact);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);
        p.setProjectstatus(projectstatus);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updateprojectpropertybyid</code>
     */
    public static void updateprojectpropertybyid(Configuration configuration, Integer projectid, Integer propertyid, String propertyvalue) {
        Updateprojectpropertybyid p = new Updateprojectpropertybyid();
        p.setProjectid(projectid);
        p.setPropertyid(propertyid);
        p.setPropertyvalue(propertyvalue);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updateprojectpropertybyname</code>
     */
    public static void updateprojectpropertybyname(Configuration configuration, Integer projectid, String propertyname, String propertyvalue) {
        Updateprojectpropertybyname p = new Updateprojectpropertybyname();
        p.setProjectid(projectid);
        p.setPropertyname(propertyname);
        p.setPropertyvalue(propertyvalue);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updateprotocol</code>
     */
    public static Integer updateprotocol(Configuration configuration, Integer pid, String pname, String pdescription, Integer ptypeid, Integer pplatformid, Integer pcreatedby, Date pcreateddate, Integer pmodifiedby, Date pmodifieddate, Integer pstatus) {
        Updateprotocol f = new Updateprotocol();
        f.setPid(pid);
        f.setPname(pname);
        f.setPdescription(pdescription);
        f.setPtypeid(ptypeid);
        f.setPplatformid(pplatformid);
        f.setPcreatedby(pcreatedby);
        f.setPcreateddate(pcreateddate);
        f.setPmodifiedby(pmodifiedby);
        f.setPmodifieddate(pmodifieddate);
        f.setPstatus(pstatus);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.updateprotocol</code> as a field.
     */
    public static Field<Integer> updateprotocol(Integer pid, String pname, String pdescription, Integer ptypeid, Integer pplatformid, Integer pcreatedby, Date pcreateddate, Integer pmodifiedby, Date pmodifieddate, Integer pstatus) {
        Updateprotocol f = new Updateprotocol();
        f.setPid(pid);
        f.setPname(pname);
        f.setPdescription(pdescription);
        f.setPtypeid(ptypeid);
        f.setPplatformid(pplatformid);
        f.setPcreatedby(pcreatedby);
        f.setPcreateddate(pcreateddate);
        f.setPmodifiedby(pmodifiedby);
        f.setPmodifieddate(pmodifieddate);
        f.setPstatus(pstatus);

        return f.asField();
    }

    /**
     * Get <code>public.updateprotocol</code> as a field.
     */
    public static Field<Integer> updateprotocol(Field<Integer> pid, Field<String> pname, Field<String> pdescription, Field<Integer> ptypeid, Field<Integer> pplatformid, Field<Integer> pcreatedby, Field<Date> pcreateddate, Field<Integer> pmodifiedby, Field<Date> pmodifieddate, Field<Integer> pstatus) {
        Updateprotocol f = new Updateprotocol();
        f.setPid(pid);
        f.setPname(pname);
        f.setPdescription(pdescription);
        f.setPtypeid(ptypeid);
        f.setPplatformid(pplatformid);
        f.setPcreatedby(pcreatedby);
        f.setPcreateddate(pcreateddate);
        f.setPmodifiedby(pmodifiedby);
        f.setPmodifieddate(pmodifieddate);
        f.setPstatus(pstatus);

        return f.asField();
    }

    /**
     * Call <code>public.updatereference</code>
     */
    public static void updatereference(Configuration configuration, Integer id, String referencename, String referenceversion, String referencelink, String filepath, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate) {
        Updatereference p = new Updatereference();
        p.setId(id);
        p.setReferencename(referencename);
        p.setReferenceversion(referenceversion);
        p.setReferencelink(referencelink);
        p.setFilepath(filepath);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updaterole</code>
     */
    public static void updaterole(Configuration configuration, Integer roleid, String rolename, String rolecode, Integer[] readtables, Integer[] writetables) {
        Updaterole p = new Updaterole();
        p.setRoleid(roleid);
        p.setRolename(rolename);
        p.setRolecode(rolecode);
        p.setReadtables(readtables);
        p.setWritetables(writetables);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updatevariant</code>
     */
    public static void updatevariant(Configuration configuration, Integer id, String variantcode, Integer createdby, Date createddate, Integer modifiedby, Date modifieddate) {
        Updatevariant p = new Updatevariant();
        p.setId(id);
        p.setVariantcode(variantcode);
        p.setCreatedby(createdby);
        p.setCreateddate(createddate);
        p.setModifiedby(modifiedby);
        p.setModifieddate(modifieddate);

        p.execute(configuration);
    }

    /**
     * Call <code>public.updatevendorprotocol</code>
     */
    public static Integer updatevendorprotocol(Configuration configuration, Integer pid, String pname, Integer pvendorid, Integer pprotocolid, Integer pstatus) {
        Updatevendorprotocol f = new Updatevendorprotocol();
        f.setPid(pid);
        f.setPname(pname);
        f.setPvendorid(pvendorid);
        f.setPprotocolid(pprotocolid);
        f.setPstatus(pstatus);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.updatevendorprotocol</code> as a field.
     */
    public static Field<Integer> updatevendorprotocol(Integer pid, String pname, Integer pvendorid, Integer pprotocolid, Integer pstatus) {
        Updatevendorprotocol f = new Updatevendorprotocol();
        f.setPid(pid);
        f.setPname(pname);
        f.setPvendorid(pvendorid);
        f.setPprotocolid(pprotocolid);
        f.setPstatus(pstatus);

        return f.asField();
    }

    /**
     * Get <code>public.updatevendorprotocol</code> as a field.
     */
    public static Field<Integer> updatevendorprotocol(Field<Integer> pid, Field<String> pname, Field<Integer> pvendorid, Field<Integer> pprotocolid, Field<Integer> pstatus) {
        Updatevendorprotocol f = new Updatevendorprotocol();
        f.setPid(pid);
        f.setPname(pname);
        f.setPvendorid(pvendorid);
        f.setPprotocolid(pprotocolid);
        f.setPstatus(pstatus);

        return f.asField();
    }

    /**
     * Call <code>public.upsertanalysisparameter</code>
     */
    public static void upsertanalysisparameter(Configuration configuration, Integer id, String parametername, String parametervalue) {
        Upsertanalysisparameter p = new Upsertanalysisparameter();
        p.setId(id);
        p.setParametername(parametername);
        p.setParametervalue(parametervalue);

        p.execute(configuration);
    }

    /**
     * Call <code>public.upsertdatasetvendorprotocol</code>
     */
    public static Integer upsertdatasetvendorprotocol(Configuration configuration, Integer pid, Integer pdatasetid, Integer pvendorprotocolid) {
        Upsertdatasetvendorprotocol f = new Upsertdatasetvendorprotocol();
        f.setPid(pid);
        f.setPdatasetid(pdatasetid);
        f.setPvendorprotocolid(pvendorprotocolid);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.upsertdatasetvendorprotocol</code> as a field.
     */
    public static Field<Integer> upsertdatasetvendorprotocol(Integer pid, Integer pdatasetid, Integer pvendorprotocolid) {
        Upsertdatasetvendorprotocol f = new Upsertdatasetvendorprotocol();
        f.setPid(pid);
        f.setPdatasetid(pdatasetid);
        f.setPvendorprotocolid(pvendorprotocolid);

        return f.asField();
    }

    /**
     * Get <code>public.upsertdatasetvendorprotocol</code> as a field.
     */
    public static Field<Integer> upsertdatasetvendorprotocol(Field<Integer> pid, Field<Integer> pdatasetid, Field<Integer> pvendorprotocolid) {
        Upsertdatasetvendorprotocol f = new Upsertdatasetvendorprotocol();
        f.setPid(pid);
        f.setPdatasetid(pdatasetid);
        f.setPvendorprotocolid(pvendorprotocolid);

        return f.asField();
    }

    /**
     * Call <code>public.upsertdnarunpropertybyid</code>
     */
    public static void upsertdnarunpropertybyid(Configuration configuration, Integer id, Integer propertyid, String propertyvalue) {
        Upsertdnarunpropertybyid p = new Upsertdnarunpropertybyid();
        p.setId(id);
        p.setPropertyid(propertyid);
        p.setPropertyvalue(propertyvalue);

        p.execute(configuration);
    }

    /**
     * Call <code>public.upsertdnarunpropertybyname</code>
     */
    public static Integer upsertdnarunpropertybyname(Configuration configuration, Integer id, String propertyname, String propertyvalue) {
        Upsertdnarunpropertybyname f = new Upsertdnarunpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);
        f.setPropertyvalue(propertyvalue);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.upsertdnarunpropertybyname</code> as a field.
     */
    public static Field<Integer> upsertdnarunpropertybyname(Integer id, String propertyname, String propertyvalue) {
        Upsertdnarunpropertybyname f = new Upsertdnarunpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);
        f.setPropertyvalue(propertyvalue);

        return f.asField();
    }

    /**
     * Get <code>public.upsertdnarunpropertybyname</code> as a field.
     */
    public static Field<Integer> upsertdnarunpropertybyname(Field<Integer> id, Field<String> propertyname, Field<String> propertyvalue) {
        Upsertdnarunpropertybyname f = new Upsertdnarunpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);
        f.setPropertyvalue(propertyvalue);

        return f.asField();
    }

    /**
     * Call <code>public.upsertdnasamplepropertybyid</code>
     */
    public static void upsertdnasamplepropertybyid(Configuration configuration, Integer id, Integer propertyid, String propertyvalue) {
        Upsertdnasamplepropertybyid p = new Upsertdnasamplepropertybyid();
        p.setId(id);
        p.setPropertyid(propertyid);
        p.setPropertyvalue(propertyvalue);

        p.execute(configuration);
    }

    /**
     * Call <code>public.upsertdnasamplepropertybyname</code>
     */
    public static Integer upsertdnasamplepropertybyname(Configuration configuration, Integer id, String propertyname, String propertyvalue) {
        Upsertdnasamplepropertybyname f = new Upsertdnasamplepropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);
        f.setPropertyvalue(propertyvalue);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.upsertdnasamplepropertybyname</code> as a field.
     */
    public static Field<Integer> upsertdnasamplepropertybyname(Integer id, String propertyname, String propertyvalue) {
        Upsertdnasamplepropertybyname f = new Upsertdnasamplepropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);
        f.setPropertyvalue(propertyvalue);

        return f.asField();
    }

    /**
     * Get <code>public.upsertdnasamplepropertybyname</code> as a field.
     */
    public static Field<Integer> upsertdnasamplepropertybyname(Field<Integer> id, Field<String> propertyname, Field<String> propertyvalue) {
        Upsertdnasamplepropertybyname f = new Upsertdnasamplepropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);
        f.setPropertyvalue(propertyvalue);

        return f.asField();
    }

    /**
     * Call <code>public.upsertgermplasmpropertybyid</code>
     */
    public static void upsertgermplasmpropertybyid(Configuration configuration, Integer id, Integer propertyid, String propertyvalue) {
        Upsertgermplasmpropertybyid p = new Upsertgermplasmpropertybyid();
        p.setId(id);
        p.setPropertyid(propertyid);
        p.setPropertyvalue(propertyvalue);

        p.execute(configuration);
    }

    /**
     * Call <code>public.upsertgermplasmpropertybyname</code>
     */
    public static Integer upsertgermplasmpropertybyname(Configuration configuration, Integer id, String propertyname, String propertyvalue) {
        Upsertgermplasmpropertybyname f = new Upsertgermplasmpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);
        f.setPropertyvalue(propertyvalue);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.upsertgermplasmpropertybyname</code> as a field.
     */
    public static Field<Integer> upsertgermplasmpropertybyname(Integer id, String propertyname, String propertyvalue) {
        Upsertgermplasmpropertybyname f = new Upsertgermplasmpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);
        f.setPropertyvalue(propertyvalue);

        return f.asField();
    }

    /**
     * Get <code>public.upsertgermplasmpropertybyname</code> as a field.
     */
    public static Field<Integer> upsertgermplasmpropertybyname(Field<Integer> id, Field<String> propertyname, Field<String> propertyvalue) {
        Upsertgermplasmpropertybyname f = new Upsertgermplasmpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);
        f.setPropertyvalue(propertyvalue);

        return f.asField();
    }

    /**
     * Call <code>public.upsertkvpfromforeigntable</code>
     */
    public static Integer upsertkvpfromforeigntable(Configuration configuration, String foreigntable, String sourcekeycol, String sourcevaluecol, String targettable, String targetidcol, String targetjsonbcol) {
        Upsertkvpfromforeigntable f = new Upsertkvpfromforeigntable();
        f.setForeigntable(foreigntable);
        f.setSourcekeycol(sourcekeycol);
        f.setSourcevaluecol(sourcevaluecol);
        f.setTargettable(targettable);
        f.setTargetidcol(targetidcol);
        f.setTargetjsonbcol(targetjsonbcol);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.upsertkvpfromforeigntable</code> as a field.
     */
    public static Field<Integer> upsertkvpfromforeigntable(String foreigntable, String sourcekeycol, String sourcevaluecol, String targettable, String targetidcol, String targetjsonbcol) {
        Upsertkvpfromforeigntable f = new Upsertkvpfromforeigntable();
        f.setForeigntable(foreigntable);
        f.setSourcekeycol(sourcekeycol);
        f.setSourcevaluecol(sourcevaluecol);
        f.setTargettable(targettable);
        f.setTargetidcol(targetidcol);
        f.setTargetjsonbcol(targetjsonbcol);

        return f.asField();
    }

    /**
     * Get <code>public.upsertkvpfromforeigntable</code> as a field.
     */
    public static Field<Integer> upsertkvpfromforeigntable(Field<String> foreigntable, Field<String> sourcekeycol, Field<String> sourcevaluecol, Field<String> targettable, Field<String> targetidcol, Field<String> targetjsonbcol) {
        Upsertkvpfromforeigntable f = new Upsertkvpfromforeigntable();
        f.setForeigntable(foreigntable);
        f.setSourcekeycol(sourcekeycol);
        f.setSourcevaluecol(sourcevaluecol);
        f.setTargettable(targettable);
        f.setTargetidcol(targetidcol);
        f.setTargetjsonbcol(targetjsonbcol);

        return f.asField();
    }

    /**
     * Call <code>public.upsertmapsetpropertybyid</code>
     */
    public static void upsertmapsetpropertybyid(Configuration configuration, Integer id, Integer propertyid, String propertyvalue) {
        Upsertmapsetpropertybyid p = new Upsertmapsetpropertybyid();
        p.setId(id);
        p.setPropertyid(propertyid);
        p.setPropertyvalue(propertyvalue);

        p.execute(configuration);
    }

    /**
     * Call <code>public.upsertmapsetpropertybyname</code>
     */
    public static Integer upsertmapsetpropertybyname(Configuration configuration, Integer id, String propertyname, String propertyvalue) {
        Upsertmapsetpropertybyname f = new Upsertmapsetpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);
        f.setPropertyvalue(propertyvalue);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.upsertmapsetpropertybyname</code> as a field.
     */
    public static Field<Integer> upsertmapsetpropertybyname(Integer id, String propertyname, String propertyvalue) {
        Upsertmapsetpropertybyname f = new Upsertmapsetpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);
        f.setPropertyvalue(propertyvalue);

        return f.asField();
    }

    /**
     * Get <code>public.upsertmapsetpropertybyname</code> as a field.
     */
    public static Field<Integer> upsertmapsetpropertybyname(Field<Integer> id, Field<String> propertyname, Field<String> propertyvalue) {
        Upsertmapsetpropertybyname f = new Upsertmapsetpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);
        f.setPropertyvalue(propertyvalue);

        return f.asField();
    }

    /**
     * Call <code>public.upsertmarkergroup</code>
     */
    public static Integer upsertmarkergroup(Configuration configuration, String _Name, String _Code, String _Markers, String _GermplasmGroup, Integer _CreatedBy, Date _CreatedDate, Integer _ModifiedBy, Date _ModifiedDate, Integer _Status) {
        Upsertmarkergroup p = new Upsertmarkergroup();
        p.set_Name(_Name);
        p.set_Code(_Code);
        p.set_Markers(_Markers);
        p.set_GermplasmGroup(_GermplasmGroup);
        p.set_CreatedBy(_CreatedBy);
        p.set_CreatedDate(_CreatedDate);
        p.set_ModifiedBy(_ModifiedBy);
        p.set_ModifiedDate(_ModifiedDate);
        p.set_Status(_Status);

        p.execute(configuration);
        return p.getId();
    }

    /**
     * Call <code>public.upsertmarkerpropertybyid</code>
     */
    public static void upsertmarkerpropertybyid(Configuration configuration, Integer id, Integer propertyid, String propertyvalue) {
        Upsertmarkerpropertybyid p = new Upsertmarkerpropertybyid();
        p.setId(id);
        p.setPropertyid(propertyid);
        p.setPropertyvalue(propertyvalue);

        p.execute(configuration);
    }

    /**
     * Call <code>public.upsertmarkerpropertybyname</code>
     */
    public static Integer upsertmarkerpropertybyname(Configuration configuration, Integer id, String propertyname, String propertyvalue) {
        Upsertmarkerpropertybyname f = new Upsertmarkerpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);
        f.setPropertyvalue(propertyvalue);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.upsertmarkerpropertybyname</code> as a field.
     */
    public static Field<Integer> upsertmarkerpropertybyname(Integer id, String propertyname, String propertyvalue) {
        Upsertmarkerpropertybyname f = new Upsertmarkerpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);
        f.setPropertyvalue(propertyvalue);

        return f.asField();
    }

    /**
     * Get <code>public.upsertmarkerpropertybyname</code> as a field.
     */
    public static Field<Integer> upsertmarkerpropertybyname(Field<Integer> id, Field<String> propertyname, Field<String> propertyvalue) {
        Upsertmarkerpropertybyname f = new Upsertmarkerpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);
        f.setPropertyvalue(propertyvalue);

        return f.asField();
    }

    /**
     * Call <code>public.upsertmarkertomarkergroupbyid</code>
     */
    public static void upsertmarkertomarkergroupbyid(Configuration configuration, Integer id, Integer markerid, String favallele) {
        Upsertmarkertomarkergroupbyid p = new Upsertmarkertomarkergroupbyid();
        p.setId(id);
        p.setMarkerid(markerid);
        p.setFavallele(favallele);

        p.execute(configuration);
    }

    /**
     * Call <code>public.upsertmarkertomarkergroupbyname</code>
     */
    public static Integer upsertmarkertomarkergroupbyname(Configuration configuration, Integer id, String markername, String favallele) {
        Upsertmarkertomarkergroupbyname f = new Upsertmarkertomarkergroupbyname();
        f.setId(id);
        f.setMarkername(markername);
        f.setFavallele(favallele);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.upsertmarkertomarkergroupbyname</code> as a field.
     */
    public static Field<Integer> upsertmarkertomarkergroupbyname(Integer id, String markername, String favallele) {
        Upsertmarkertomarkergroupbyname f = new Upsertmarkertomarkergroupbyname();
        f.setId(id);
        f.setMarkername(markername);
        f.setFavallele(favallele);

        return f.asField();
    }

    /**
     * Get <code>public.upsertmarkertomarkergroupbyname</code> as a field.
     */
    public static Field<Integer> upsertmarkertomarkergroupbyname(Field<Integer> id, Field<String> markername, Field<String> favallele) {
        Upsertmarkertomarkergroupbyname f = new Upsertmarkertomarkergroupbyname();
        f.setId(id);
        f.setMarkername(markername);
        f.setFavallele(favallele);

        return f.asField();
    }

    /**
     * Call <code>public.upsertplatformpropertybyid</code>
     */
    public static void upsertplatformpropertybyid(Configuration configuration, Integer id, Integer propertyid, String propertyvalue) {
        Upsertplatformpropertybyid p = new Upsertplatformpropertybyid();
        p.setId(id);
        p.setPropertyid(propertyid);
        p.setPropertyvalue(propertyvalue);

        p.execute(configuration);
    }

    /**
     * Call <code>public.upsertplatformpropertybyname</code>
     */
    public static Integer upsertplatformpropertybyname(Configuration configuration, Integer id, String propertyname, String propertyvalue) {
        Upsertplatformpropertybyname f = new Upsertplatformpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);
        f.setPropertyvalue(propertyvalue);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.upsertplatformpropertybyname</code> as a field.
     */
    public static Field<Integer> upsertplatformpropertybyname(Integer id, String propertyname, String propertyvalue) {
        Upsertplatformpropertybyname f = new Upsertplatformpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);
        f.setPropertyvalue(propertyvalue);

        return f.asField();
    }

    /**
     * Get <code>public.upsertplatformpropertybyname</code> as a field.
     */
    public static Field<Integer> upsertplatformpropertybyname(Field<Integer> id, Field<String> propertyname, Field<String> propertyvalue) {
        Upsertplatformpropertybyname f = new Upsertplatformpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);
        f.setPropertyvalue(propertyvalue);

        return f.asField();
    }

    /**
     * Call <code>public.upsertprojectpropertybyid</code>
     */
    public static void upsertprojectpropertybyid(Configuration configuration, Integer id, Integer propertyid, String propertyvalue) {
        Upsertprojectpropertybyid p = new Upsertprojectpropertybyid();
        p.setId(id);
        p.setPropertyid(propertyid);
        p.setPropertyvalue(propertyvalue);

        p.execute(configuration);
    }

    /**
     * Call <code>public.upsertprojectpropertybyname</code>
     */
    public static Integer upsertprojectpropertybyname(Configuration configuration, Integer id, String propertyname, String propertyvalue) {
        Upsertprojectpropertybyname f = new Upsertprojectpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);
        f.setPropertyvalue(propertyvalue);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.upsertprojectpropertybyname</code> as a field.
     */
    public static Field<Integer> upsertprojectpropertybyname(Integer id, String propertyname, String propertyvalue) {
        Upsertprojectpropertybyname f = new Upsertprojectpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);
        f.setPropertyvalue(propertyvalue);

        return f.asField();
    }

    /**
     * Get <code>public.upsertprojectpropertybyname</code> as a field.
     */
    public static Field<Integer> upsertprojectpropertybyname(Field<Integer> id, Field<String> propertyname, Field<String> propertyvalue) {
        Upsertprojectpropertybyname f = new Upsertprojectpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);
        f.setPropertyvalue(propertyvalue);

        return f.asField();
    }

    /**
     * Call <code>public.upsertprotocolpropertybyid</code>
     */
    public static void upsertprotocolpropertybyid(Configuration configuration, Integer id, Integer propertyid, String propertyvalue) {
        Upsertprotocolpropertybyid p = new Upsertprotocolpropertybyid();
        p.setId(id);
        p.setPropertyid(propertyid);
        p.setPropertyvalue(propertyvalue);

        p.execute(configuration);
    }

    /**
     * Call <code>public.upsertprotocolpropertybyname</code>
     */
    public static Integer upsertprotocolpropertybyname(Configuration configuration, Integer id, String propertyname, String propertyvalue) {
        Upsertprotocolpropertybyname f = new Upsertprotocolpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);
        f.setPropertyvalue(propertyvalue);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.upsertprotocolpropertybyname</code> as a field.
     */
    public static Field<Integer> upsertprotocolpropertybyname(Integer id, String propertyname, String propertyvalue) {
        Upsertprotocolpropertybyname f = new Upsertprotocolpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);
        f.setPropertyvalue(propertyvalue);

        return f.asField();
    }

    /**
     * Get <code>public.upsertprotocolpropertybyname</code> as a field.
     */
    public static Field<Integer> upsertprotocolpropertybyname(Field<Integer> id, Field<String> propertyname, Field<String> propertyvalue) {
        Upsertprotocolpropertybyname f = new Upsertprotocolpropertybyname();
        f.setId(id);
        f.setPropertyname(propertyname);
        f.setPropertyvalue(propertyvalue);

        return f.asField();
    }
}
