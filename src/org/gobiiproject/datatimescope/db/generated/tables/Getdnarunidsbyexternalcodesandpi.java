/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.tables;


import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.Public;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetdnarunidsbyexternalcodesandpiRecord;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Getdnarunidsbyexternalcodesandpi extends TableImpl<GetdnarunidsbyexternalcodesandpiRecord> {

    private static final long serialVersionUID = 1676360142;

    /**
     * The reference instance of <code>public.getdnarunidsbyexternalcodesandpi</code>
     */
    public static final Getdnarunidsbyexternalcodesandpi GETDNARUNIDSBYEXTERNALCODESANDPI = new Getdnarunidsbyexternalcodesandpi();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GetdnarunidsbyexternalcodesandpiRecord> getRecordType() {
        return GetdnarunidsbyexternalcodesandpiRecord.class;
    }

    /**
     * The column <code>public.getdnarunidsbyexternalcodesandpi.dnarun_id</code>.
     */
    public final TableField<GetdnarunidsbyexternalcodesandpiRecord, Integer> DNARUN_ID = createField("dnarun_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.getdnarunidsbyexternalcodesandpi</code> table reference
     */
    public Getdnarunidsbyexternalcodesandpi() {
        this(DSL.name("getdnarunidsbyexternalcodesandpi"), null);
    }

    /**
     * Create an aliased <code>public.getdnarunidsbyexternalcodesandpi</code> table reference
     */
    public Getdnarunidsbyexternalcodesandpi(String alias) {
        this(DSL.name(alias), GETDNARUNIDSBYEXTERNALCODESANDPI);
    }

    /**
     * Create an aliased <code>public.getdnarunidsbyexternalcodesandpi</code> table reference
     */
    public Getdnarunidsbyexternalcodesandpi(Name alias) {
        this(alias, GETDNARUNIDSBYEXTERNALCODESANDPI);
    }

    private Getdnarunidsbyexternalcodesandpi(Name alias, Table<GetdnarunidsbyexternalcodesandpiRecord> aliased) {
        this(alias, aliased, new Field[2]);
    }

    private Getdnarunidsbyexternalcodesandpi(Name alias, Table<GetdnarunidsbyexternalcodesandpiRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Getdnarunidsbyexternalcodesandpi as(String alias) {
        return new Getdnarunidsbyexternalcodesandpi(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Getdnarunidsbyexternalcodesandpi as(Name alias) {
        return new Getdnarunidsbyexternalcodesandpi(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Getdnarunidsbyexternalcodesandpi rename(String name) {
        return new Getdnarunidsbyexternalcodesandpi(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Getdnarunidsbyexternalcodesandpi rename(Name name) {
        return new Getdnarunidsbyexternalcodesandpi(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public Getdnarunidsbyexternalcodesandpi call(String externalcodes, Integer piid) {
        return new Getdnarunidsbyexternalcodesandpi(DSL.name(getName()), null, new Field[] { 
              DSL.val(externalcodes, org.jooq.impl.SQLDataType.CLOB)
            , DSL.val(piid, org.jooq.impl.SQLDataType.INTEGER)
        });
    }

    /**
     * Call this table-valued function
     */
    public Getdnarunidsbyexternalcodesandpi call(Field<String> externalcodes, Field<Integer> piid) {
        return new Getdnarunidsbyexternalcodesandpi(DSL.name(getName()), null, new Field[] { 
              externalcodes
            , piid
        });
    }
}
