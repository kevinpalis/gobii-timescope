/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.tables;


import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.Public;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetdnarunidsbydnasamplenamesRecord;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Getdnarunidsbydnasamplenames extends TableImpl<GetdnarunidsbydnasamplenamesRecord> {

    private static final long serialVersionUID = -1758364733;

    /**
     * The reference instance of <code>public.getdnarunidsbydnasamplenames</code>
     */
    public static final Getdnarunidsbydnasamplenames GETDNARUNIDSBYDNASAMPLENAMES = new Getdnarunidsbydnasamplenames();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GetdnarunidsbydnasamplenamesRecord> getRecordType() {
        return GetdnarunidsbydnasamplenamesRecord.class;
    }

    /**
     * The column <code>public.getdnarunidsbydnasamplenames.dnarun_id</code>.
     */
    public final TableField<GetdnarunidsbydnasamplenamesRecord, Integer> DNARUN_ID = createField("dnarun_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.getdnarunidsbydnasamplenames</code> table reference
     */
    public Getdnarunidsbydnasamplenames() {
        this(DSL.name("getdnarunidsbydnasamplenames"), null);
    }

    /**
     * Create an aliased <code>public.getdnarunidsbydnasamplenames</code> table reference
     */
    public Getdnarunidsbydnasamplenames(String alias) {
        this(DSL.name(alias), GETDNARUNIDSBYDNASAMPLENAMES);
    }

    /**
     * Create an aliased <code>public.getdnarunidsbydnasamplenames</code> table reference
     */
    public Getdnarunidsbydnasamplenames(Name alias) {
        this(alias, GETDNARUNIDSBYDNASAMPLENAMES);
    }

    private Getdnarunidsbydnasamplenames(Name alias, Table<GetdnarunidsbydnasamplenamesRecord> aliased) {
        this(alias, aliased, new Field[1]);
    }

    private Getdnarunidsbydnasamplenames(Name alias, Table<GetdnarunidsbydnasamplenamesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Getdnarunidsbydnasamplenames as(String alias) {
        return new Getdnarunidsbydnasamplenames(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Getdnarunidsbydnasamplenames as(Name alias) {
        return new Getdnarunidsbydnasamplenames(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Getdnarunidsbydnasamplenames rename(String name) {
        return new Getdnarunidsbydnasamplenames(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Getdnarunidsbydnasamplenames rename(Name name) {
        return new Getdnarunidsbydnasamplenames(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public Getdnarunidsbydnasamplenames call(String dnasamplenames) {
        return new Getdnarunidsbydnasamplenames(DSL.name(getName()), null, new Field[] { 
              DSL.val(dnasamplenames, org.jooq.impl.SQLDataType.CLOB)
        });
    }

    /**
     * Call this table-valued function
     */
    public Getdnarunidsbydnasamplenames call(Field<String> dnasamplenames) {
        return new Getdnarunidsbydnasamplenames(DSL.name(getName()), null, new Field[] { 
              dnasamplenames
        });
    }
}
