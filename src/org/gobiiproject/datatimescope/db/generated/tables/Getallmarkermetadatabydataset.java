/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.tables;


import java.math.BigDecimal;

import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.Public;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetallmarkermetadatabydatasetRecord;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Getallmarkermetadatabydataset extends TableImpl<GetallmarkermetadatabydatasetRecord> {

    private static final long serialVersionUID = 1320381876;

    /**
     * The reference instance of <code>public.getallmarkermetadatabydataset</code>
     */
    public static final Getallmarkermetadatabydataset GETALLMARKERMETADATABYDATASET = new Getallmarkermetadatabydataset();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GetallmarkermetadatabydatasetRecord> getRecordType() {
        return GetallmarkermetadatabydatasetRecord.class;
    }

    /**
     * The column <code>public.getallmarkermetadatabydataset.marker_name</code>.
     */
    public final TableField<GetallmarkermetadatabydatasetRecord, String> MARKER_NAME = createField("marker_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getallmarkermetadatabydataset.linkage_group_name</code>.
     */
    public final TableField<GetallmarkermetadatabydatasetRecord, String> LINKAGE_GROUP_NAME = createField("linkage_group_name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.getallmarkermetadatabydataset.start</code>.
     */
    public final TableField<GetallmarkermetadatabydatasetRecord, BigDecimal> START = createField("start", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>public.getallmarkermetadatabydataset.stop</code>.
     */
    public final TableField<GetallmarkermetadatabydatasetRecord, BigDecimal> STOP = createField("stop", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>public.getallmarkermetadatabydataset.mapset_name</code>.
     */
    public final TableField<GetallmarkermetadatabydatasetRecord, String> MAPSET_NAME = createField("mapset_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getallmarkermetadatabydataset.platform_name</code>.
     */
    public final TableField<GetallmarkermetadatabydatasetRecord, String> PLATFORM_NAME = createField("platform_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getallmarkermetadatabydataset.variant_id</code>.
     */
    public final TableField<GetallmarkermetadatabydatasetRecord, Integer> VARIANT_ID = createField("variant_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.getallmarkermetadatabydataset.code</code>.
     */
    public final TableField<GetallmarkermetadatabydatasetRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getallmarkermetadatabydataset.ref</code>.
     */
    public final TableField<GetallmarkermetadatabydatasetRecord, String> REF = createField("ref", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getallmarkermetadatabydataset.alts</code>.
     */
    public final TableField<GetallmarkermetadatabydatasetRecord, String> ALTS = createField("alts", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getallmarkermetadatabydataset.sequence</code>.
     */
    public final TableField<GetallmarkermetadatabydatasetRecord, String> SEQUENCE = createField("sequence", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getallmarkermetadatabydataset.reference_name</code>.
     */
    public final TableField<GetallmarkermetadatabydatasetRecord, String> REFERENCE_NAME = createField("reference_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<GetallmarkermetadatabydatasetRecord, Object> PRIMERS = createField("primers", org.jooq.impl.DefaultDataType.getDefaultDataType("jsonb"), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<GetallmarkermetadatabydatasetRecord, Object> PROBSETS = createField("probsets", org.jooq.impl.DefaultDataType.getDefaultDataType("jsonb"), this, "");

    /**
     * The column <code>public.getallmarkermetadatabydataset.strand_name</code>.
     */
    public final TableField<GetallmarkermetadatabydatasetRecord, String> STRAND_NAME = createField("strand_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.getallmarkermetadatabydataset</code> table reference
     */
    public Getallmarkermetadatabydataset() {
        this(DSL.name("getallmarkermetadatabydataset"), null);
    }

    /**
     * Create an aliased <code>public.getallmarkermetadatabydataset</code> table reference
     */
    public Getallmarkermetadatabydataset(String alias) {
        this(DSL.name(alias), GETALLMARKERMETADATABYDATASET);
    }

    /**
     * Create an aliased <code>public.getallmarkermetadatabydataset</code> table reference
     */
    public Getallmarkermetadatabydataset(Name alias) {
        this(alias, GETALLMARKERMETADATABYDATASET);
    }

    private Getallmarkermetadatabydataset(Name alias, Table<GetallmarkermetadatabydatasetRecord> aliased) {
        this(alias, aliased, new Field[1]);
    }

    private Getallmarkermetadatabydataset(Name alias, Table<GetallmarkermetadatabydatasetRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Getallmarkermetadatabydataset as(String alias) {
        return new Getallmarkermetadatabydataset(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Getallmarkermetadatabydataset as(Name alias) {
        return new Getallmarkermetadatabydataset(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Getallmarkermetadatabydataset rename(String name) {
        return new Getallmarkermetadatabydataset(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Getallmarkermetadatabydataset rename(Name name) {
        return new Getallmarkermetadatabydataset(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public Getallmarkermetadatabydataset call(Integer datasetid) {
        return new Getallmarkermetadatabydataset(DSL.name(getName()), null, new Field[] { 
              DSL.val(datasetid, org.jooq.impl.SQLDataType.INTEGER)
        });
    }

    /**
     * Call this table-valued function
     */
    public Getallmarkermetadatabydataset call(Field<Integer> datasetid) {
        return new Getallmarkermetadatabydataset(DSL.name(getName()), null, new Field[] { 
              datasetid
        });
    }
}
