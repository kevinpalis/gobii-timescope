/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.tables;


import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.Keys;
import org.gobiiproject.datatimescope.db.generated.Public;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetrolesofcontactRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Getrolesofcontact extends TableImpl<GetrolesofcontactRecord> {

    private static final long serialVersionUID = 1552195752;

    /**
     * The reference instance of <code>public.getrolesofcontact</code>
     */
    public static final Getrolesofcontact GETROLESOFCONTACT = new Getrolesofcontact();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GetrolesofcontactRecord> getRecordType() {
        return GetrolesofcontactRecord.class;
    }

    /**
     * The column <code>public.getrolesofcontact.role_id</code>.
     */
    public final TableField<GetrolesofcontactRecord, Integer> ROLE_ID = createField("role_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('role_role_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.getrolesofcontact.role_name</code>.
     */
    public final TableField<GetrolesofcontactRecord, String> ROLE_NAME = createField("role_name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.getrolesofcontact.role_code</code>.
     */
    public final TableField<GetrolesofcontactRecord, String> ROLE_CODE = createField("role_code", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.getrolesofcontact.read_tables</code>.
     */
    public final TableField<GetrolesofcontactRecord, Integer[]> READ_TABLES = createField("read_tables", org.jooq.impl.SQLDataType.INTEGER.getArrayDataType(), this, "");

    /**
     * The column <code>public.getrolesofcontact.write_tables</code>.
     */
    public final TableField<GetrolesofcontactRecord, Integer[]> WRITE_TABLES = createField("write_tables", org.jooq.impl.SQLDataType.INTEGER.getArrayDataType(), this, "");

    /**
     * Create a <code>public.getrolesofcontact</code> table reference
     */
    public Getrolesofcontact() {
        this(DSL.name("getrolesofcontact"), null);
    }

    /**
     * Create an aliased <code>public.getrolesofcontact</code> table reference
     */
    public Getrolesofcontact(String alias) {
        this(DSL.name(alias), GETROLESOFCONTACT);
    }

    /**
     * Create an aliased <code>public.getrolesofcontact</code> table reference
     */
    public Getrolesofcontact(Name alias) {
        this(alias, GETROLESOFCONTACT);
    }

    private Getrolesofcontact(Name alias, Table<GetrolesofcontactRecord> aliased) {
        this(alias, aliased, new Field[1]);
    }

    private Getrolesofcontact(Name alias, Table<GetrolesofcontactRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<GetrolesofcontactRecord, Integer> getIdentity() {
        return Keys.IDENTITY_GETROLESOFCONTACT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Getrolesofcontact as(String alias) {
        return new Getrolesofcontact(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Getrolesofcontact as(Name alias) {
        return new Getrolesofcontact(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Getrolesofcontact rename(String name) {
        return new Getrolesofcontact(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Getrolesofcontact rename(Name name) {
        return new Getrolesofcontact(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public Getrolesofcontact call(Integer contactid) {
        return new Getrolesofcontact(DSL.name(getName()), null, new Field[] { 
              DSL.val(contactid, org.jooq.impl.SQLDataType.INTEGER)
        });
    }

    /**
     * Call this table-valued function
     */
    public Getrolesofcontact call(Field<Integer> contactid) {
        return new Getrolesofcontact(DSL.name(getName()), null, new Field[] { 
              contactid
        });
    }
}
