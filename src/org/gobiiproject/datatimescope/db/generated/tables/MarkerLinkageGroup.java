/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.Indexes;
import org.gobiiproject.datatimescope.db.generated.Keys;
import org.gobiiproject.datatimescope.db.generated.Public;
import org.gobiiproject.datatimescope.db.generated.tables.records.MarkerLinkageGroupRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MarkerLinkageGroup extends TableImpl<MarkerLinkageGroupRecord> {

    private static final long serialVersionUID = -922566997;

    /**
     * The reference instance of <code>public.marker_linkage_group</code>
     */
    public static final MarkerLinkageGroup MARKER_LINKAGE_GROUP = new MarkerLinkageGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MarkerLinkageGroupRecord> getRecordType() {
        return MarkerLinkageGroupRecord.class;
    }

    /**
     * The column <code>public.marker_linkage_group.marker_linkage_group_id</code>.
     */
    public final TableField<MarkerLinkageGroupRecord, Integer> MARKER_LINKAGE_GROUP_ID = createField("marker_linkage_group_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('marker_map_marker_map_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.marker_linkage_group.marker_id</code>.
     */
    public final TableField<MarkerLinkageGroupRecord, Integer> MARKER_ID = createField("marker_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.marker_linkage_group.start</code>.
     */
    public final TableField<MarkerLinkageGroupRecord, BigDecimal> START = createField("start", org.jooq.impl.SQLDataType.NUMERIC(13, 3), this, "");

    /**
     * The column <code>public.marker_linkage_group.stop</code>.
     */
    public final TableField<MarkerLinkageGroupRecord, BigDecimal> STOP = createField("stop", org.jooq.impl.SQLDataType.NUMERIC(13, 3), this, "");

    /**
     * The column <code>public.marker_linkage_group.linkage_group_id</code>.
     */
    public final TableField<MarkerLinkageGroupRecord, Integer> LINKAGE_GROUP_ID = createField("linkage_group_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.marker_linkage_group</code> table reference
     */
    public MarkerLinkageGroup() {
        this(DSL.name("marker_linkage_group"), null);
    }

    /**
     * Create an aliased <code>public.marker_linkage_group</code> table reference
     */
    public MarkerLinkageGroup(String alias) {
        this(DSL.name(alias), MARKER_LINKAGE_GROUP);
    }

    /**
     * Create an aliased <code>public.marker_linkage_group</code> table reference
     */
    public MarkerLinkageGroup(Name alias) {
        this(alias, MARKER_LINKAGE_GROUP);
    }

    private MarkerLinkageGroup(Name alias, Table<MarkerLinkageGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private MarkerLinkageGroup(Name alias, Table<MarkerLinkageGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IDX_MARKER_LINKAGE_GROUP_LINKAGE_GROUP_ID, Indexes.IDX_MARKER_LINKAGE_GROUP_MARKER_ID, Indexes.IDX_MARKER_LINKAGE_GROUP_START, Indexes.IDX_MARKER_LINKAGE_GROUP_STOP, Indexes.PK_MARKER_MAP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MarkerLinkageGroupRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MARKER_LINKAGE_GROUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MarkerLinkageGroupRecord> getPrimaryKey() {
        return Keys.PK_MARKER_MAP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MarkerLinkageGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<MarkerLinkageGroupRecord>>asList(Keys.PK_MARKER_MAP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<MarkerLinkageGroupRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MarkerLinkageGroupRecord, ?>>asList(Keys.MARKER_LINKAGE_GROUP__MARKER_MAP_MARKER_ID_FKEY, Keys.MARKER_LINKAGE_GROUP__MARKER_LINKAGE_GROUP_LINKAGE_GROUP_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MarkerLinkageGroup as(String alias) {
        return new MarkerLinkageGroup(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MarkerLinkageGroup as(Name alias) {
        return new MarkerLinkageGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MarkerLinkageGroup rename(String name) {
        return new MarkerLinkageGroup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MarkerLinkageGroup rename(Name name) {
        return new MarkerLinkageGroup(name, null);
    }
}
