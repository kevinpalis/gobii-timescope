/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.tables;


import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.Public;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetdnarunidsbygermplasmnamesandprojectRecord;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Getdnarunidsbygermplasmnamesandproject extends TableImpl<GetdnarunidsbygermplasmnamesandprojectRecord> {

    private static final long serialVersionUID = -1057869210;

    /**
     * The reference instance of <code>public.getdnarunidsbygermplasmnamesandproject</code>
     */
    public static final Getdnarunidsbygermplasmnamesandproject GETDNARUNIDSBYGERMPLASMNAMESANDPROJECT = new Getdnarunidsbygermplasmnamesandproject();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GetdnarunidsbygermplasmnamesandprojectRecord> getRecordType() {
        return GetdnarunidsbygermplasmnamesandprojectRecord.class;
    }

    /**
     * The column <code>public.getdnarunidsbygermplasmnamesandproject.dnarun_id</code>.
     */
    public final TableField<GetdnarunidsbygermplasmnamesandprojectRecord, Integer> DNARUN_ID = createField("dnarun_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.getdnarunidsbygermplasmnamesandproject</code> table reference
     */
    public Getdnarunidsbygermplasmnamesandproject() {
        this(DSL.name("getdnarunidsbygermplasmnamesandproject"), null);
    }

    /**
     * Create an aliased <code>public.getdnarunidsbygermplasmnamesandproject</code> table reference
     */
    public Getdnarunidsbygermplasmnamesandproject(String alias) {
        this(DSL.name(alias), GETDNARUNIDSBYGERMPLASMNAMESANDPROJECT);
    }

    /**
     * Create an aliased <code>public.getdnarunidsbygermplasmnamesandproject</code> table reference
     */
    public Getdnarunidsbygermplasmnamesandproject(Name alias) {
        this(alias, GETDNARUNIDSBYGERMPLASMNAMESANDPROJECT);
    }

    private Getdnarunidsbygermplasmnamesandproject(Name alias, Table<GetdnarunidsbygermplasmnamesandprojectRecord> aliased) {
        this(alias, aliased, new Field[2]);
    }

    private Getdnarunidsbygermplasmnamesandproject(Name alias, Table<GetdnarunidsbygermplasmnamesandprojectRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Getdnarunidsbygermplasmnamesandproject as(String alias) {
        return new Getdnarunidsbygermplasmnamesandproject(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Getdnarunidsbygermplasmnamesandproject as(Name alias) {
        return new Getdnarunidsbygermplasmnamesandproject(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Getdnarunidsbygermplasmnamesandproject rename(String name) {
        return new Getdnarunidsbygermplasmnamesandproject(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Getdnarunidsbygermplasmnamesandproject rename(Name name) {
        return new Getdnarunidsbygermplasmnamesandproject(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public Getdnarunidsbygermplasmnamesandproject call(String germplasmnames, Integer projectid) {
        return new Getdnarunidsbygermplasmnamesandproject(DSL.name(getName()), null, new Field[] { 
              DSL.val(germplasmnames, org.jooq.impl.SQLDataType.CLOB)
            , DSL.val(projectid, org.jooq.impl.SQLDataType.INTEGER)
        });
    }

    /**
     * Call this table-valued function
     */
    public Getdnarunidsbygermplasmnamesandproject call(Field<String> germplasmnames, Field<Integer> projectid) {
        return new Getdnarunidsbygermplasmnamesandproject(DSL.name(getName()), null, new Field[] { 
              germplasmnames
            , projectid
        });
    }
}
