/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.tables;


import java.sql.Date;

import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.Keys;
import org.gobiiproject.datatimescope.db.generated.Public;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetallcontactsbyroleRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Getallcontactsbyrole extends TableImpl<GetallcontactsbyroleRecord> {

    private static final long serialVersionUID = 257654844;

    /**
     * The reference instance of <code>public.getallcontactsbyrole</code>
     */
    public static final Getallcontactsbyrole GETALLCONTACTSBYROLE = new Getallcontactsbyrole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GetallcontactsbyroleRecord> getRecordType() {
        return GetallcontactsbyroleRecord.class;
    }

    /**
     * The column <code>public.getallcontactsbyrole.contact_id</code>.
     */
    public final TableField<GetallcontactsbyroleRecord, Integer> CONTACT_ID = createField("contact_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('contact_contact_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.getallcontactsbyrole.lastname</code>.
     */
    public final TableField<GetallcontactsbyroleRecord, String> LASTNAME = createField("lastname", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.getallcontactsbyrole.firstname</code>.
     */
    public final TableField<GetallcontactsbyroleRecord, String> FIRSTNAME = createField("firstname", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.getallcontactsbyrole.code</code>.
     */
    public final TableField<GetallcontactsbyroleRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.getallcontactsbyrole.email</code>.
     */
    public final TableField<GetallcontactsbyroleRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.getallcontactsbyrole.roles</code>.
     */
    public final TableField<GetallcontactsbyroleRecord, Integer[]> ROLES = createField("roles", org.jooq.impl.SQLDataType.INTEGER.getArrayDataType(), this, "");

    /**
     * The column <code>public.getallcontactsbyrole.created_by</code>.
     */
    public final TableField<GetallcontactsbyroleRecord, Integer> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.getallcontactsbyrole.created_date</code>.
     */
    public final TableField<GetallcontactsbyroleRecord, Date> CREATED_DATE = createField("created_date", org.jooq.impl.SQLDataType.DATE.defaultValue(org.jooq.impl.DSL.field("('now'::text)::date", org.jooq.impl.SQLDataType.DATE)), this, "");

    /**
     * The column <code>public.getallcontactsbyrole.modified_by</code>.
     */
    public final TableField<GetallcontactsbyroleRecord, Integer> MODIFIED_BY = createField("modified_by", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.getallcontactsbyrole.modified_date</code>.
     */
    public final TableField<GetallcontactsbyroleRecord, Date> MODIFIED_DATE = createField("modified_date", org.jooq.impl.SQLDataType.DATE.defaultValue(org.jooq.impl.DSL.field("('now'::text)::date", org.jooq.impl.SQLDataType.DATE)), this, "");

    /**
     * The column <code>public.getallcontactsbyrole.organization_id</code>.
     */
    public final TableField<GetallcontactsbyroleRecord, Integer> ORGANIZATION_ID = createField("organization_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.getallcontactsbyrole.username</code>.
     */
    public final TableField<GetallcontactsbyroleRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.getallcontactsbyrole</code> table reference
     */
    public Getallcontactsbyrole() {
        this(DSL.name("getallcontactsbyrole"), null);
    }

    /**
     * Create an aliased <code>public.getallcontactsbyrole</code> table reference
     */
    public Getallcontactsbyrole(String alias) {
        this(DSL.name(alias), GETALLCONTACTSBYROLE);
    }

    /**
     * Create an aliased <code>public.getallcontactsbyrole</code> table reference
     */
    public Getallcontactsbyrole(Name alias) {
        this(alias, GETALLCONTACTSBYROLE);
    }

    private Getallcontactsbyrole(Name alias, Table<GetallcontactsbyroleRecord> aliased) {
        this(alias, aliased, new Field[1]);
    }

    private Getallcontactsbyrole(Name alias, Table<GetallcontactsbyroleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<GetallcontactsbyroleRecord, Integer> getIdentity() {
        return Keys.IDENTITY_GETALLCONTACTSBYROLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Getallcontactsbyrole as(String alias) {
        return new Getallcontactsbyrole(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Getallcontactsbyrole as(Name alias) {
        return new Getallcontactsbyrole(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Getallcontactsbyrole rename(String name) {
        return new Getallcontactsbyrole(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Getallcontactsbyrole rename(Name name) {
        return new Getallcontactsbyrole(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public Getallcontactsbyrole call(Integer roleid) {
        return new Getallcontactsbyrole(DSL.name(getName()), null, new Field[] { 
              DSL.val(roleid, org.jooq.impl.SQLDataType.INTEGER)
        });
    }

    /**
     * Call this table-valued function
     */
    public Getallcontactsbyrole call(Field<Integer> roleid) {
        return new Getallcontactsbyrole(DSL.name(getName()), null, new Field[] { 
              roleid
        });
    }
}
