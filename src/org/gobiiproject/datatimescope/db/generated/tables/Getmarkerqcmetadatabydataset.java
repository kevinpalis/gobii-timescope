/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.tables;


import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.Public;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetmarkerqcmetadatabydatasetRecord;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Getmarkerqcmetadatabydataset extends TableImpl<GetmarkerqcmetadatabydatasetRecord> {

    private static final long serialVersionUID = -1241736283;

    /**
     * The reference instance of <code>public.getmarkerqcmetadatabydataset</code>
     */
    public static final Getmarkerqcmetadatabydataset GETMARKERQCMETADATABYDATASET = new Getmarkerqcmetadatabydataset();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GetmarkerqcmetadatabydatasetRecord> getRecordType() {
        return GetmarkerqcmetadatabydatasetRecord.class;
    }

    /**
     * The column <code>public.getmarkerqcmetadatabydataset.marker_name</code>.
     */
    public final TableField<GetmarkerqcmetadatabydatasetRecord, String> MARKER_NAME = createField("marker_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getmarkerqcmetadatabydataset.platform_name</code>.
     */
    public final TableField<GetmarkerqcmetadatabydatasetRecord, String> PLATFORM_NAME = createField("platform_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getmarkerqcmetadatabydataset.variant_id</code>.
     */
    public final TableField<GetmarkerqcmetadatabydatasetRecord, Integer> VARIANT_ID = createField("variant_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.getmarkerqcmetadatabydataset.variant_code</code>.
     */
    public final TableField<GetmarkerqcmetadatabydatasetRecord, String> VARIANT_CODE = createField("variant_code", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getmarkerqcmetadatabydataset.marker_ref</code>.
     */
    public final TableField<GetmarkerqcmetadatabydatasetRecord, String> MARKER_REF = createField("marker_ref", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getmarkerqcmetadatabydataset.marker_alts</code>.
     */
    public final TableField<GetmarkerqcmetadatabydatasetRecord, String> MARKER_ALTS = createField("marker_alts", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getmarkerqcmetadatabydataset.marker_sequence</code>.
     */
    public final TableField<GetmarkerqcmetadatabydatasetRecord, String> MARKER_SEQUENCE = createField("marker_sequence", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getmarkerqcmetadatabydataset.marker_strand</code>.
     */
    public final TableField<GetmarkerqcmetadatabydatasetRecord, String> MARKER_STRAND = createField("marker_strand", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getmarkerqcmetadatabydataset.marker_primer_forw1</code>.
     */
    public final TableField<GetmarkerqcmetadatabydatasetRecord, String> MARKER_PRIMER_FORW1 = createField("marker_primer_forw1", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getmarkerqcmetadatabydataset.marker_primer_forw2</code>.
     */
    public final TableField<GetmarkerqcmetadatabydatasetRecord, String> MARKER_PRIMER_FORW2 = createField("marker_primer_forw2", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getmarkerqcmetadatabydataset.marker_primer_rev1</code>.
     */
    public final TableField<GetmarkerqcmetadatabydatasetRecord, String> MARKER_PRIMER_REV1 = createField("marker_primer_rev1", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getmarkerqcmetadatabydataset.marker_primer_rev2</code>.
     */
    public final TableField<GetmarkerqcmetadatabydatasetRecord, String> MARKER_PRIMER_REV2 = createField("marker_primer_rev2", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getmarkerqcmetadatabydataset.marker_probe1</code>.
     */
    public final TableField<GetmarkerqcmetadatabydatasetRecord, String> MARKER_PROBE1 = createField("marker_probe1", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getmarkerqcmetadatabydataset.marker_probe2</code>.
     */
    public final TableField<GetmarkerqcmetadatabydatasetRecord, String> MARKER_PROBE2 = createField("marker_probe2", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getmarkerqcmetadatabydataset.marker_polymorphism_type</code>.
     */
    public final TableField<GetmarkerqcmetadatabydatasetRecord, String> MARKER_POLYMORPHISM_TYPE = createField("marker_polymorphism_type", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getmarkerqcmetadatabydataset.marker_synonym</code>.
     */
    public final TableField<GetmarkerqcmetadatabydatasetRecord, String> MARKER_SYNONYM = createField("marker_synonym", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getmarkerqcmetadatabydataset.marker_source</code>.
     */
    public final TableField<GetmarkerqcmetadatabydatasetRecord, String> MARKER_SOURCE = createField("marker_source", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getmarkerqcmetadatabydataset.marker_gene_id</code>.
     */
    public final TableField<GetmarkerqcmetadatabydatasetRecord, String> MARKER_GENE_ID = createField("marker_gene_id", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getmarkerqcmetadatabydataset.marker_gene_annotation</code>.
     */
    public final TableField<GetmarkerqcmetadatabydatasetRecord, String> MARKER_GENE_ANNOTATION = createField("marker_gene_annotation", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getmarkerqcmetadatabydataset.marker_polymorphism_annotation</code>.
     */
    public final TableField<GetmarkerqcmetadatabydatasetRecord, String> MARKER_POLYMORPHISM_ANNOTATION = createField("marker_polymorphism_annotation", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getmarkerqcmetadatabydataset.marker_marker_dom</code>.
     */
    public final TableField<GetmarkerqcmetadatabydatasetRecord, String> MARKER_MARKER_DOM = createField("marker_marker_dom", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getmarkerqcmetadatabydataset.marker_clone_id_pos</code>.
     */
    public final TableField<GetmarkerqcmetadatabydatasetRecord, String> MARKER_CLONE_ID_POS = createField("marker_clone_id_pos", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getmarkerqcmetadatabydataset.marker_genome_build</code>.
     */
    public final TableField<GetmarkerqcmetadatabydatasetRecord, String> MARKER_GENOME_BUILD = createField("marker_genome_build", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getmarkerqcmetadatabydataset.marker_typeofrefallele_alleleorder</code>.
     */
    public final TableField<GetmarkerqcmetadatabydatasetRecord, String> MARKER_TYPEOFREFALLELE_ALLELEORDER = createField("marker_typeofrefallele_alleleorder", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getmarkerqcmetadatabydataset.marker_strand_data_read</code>.
     */
    public final TableField<GetmarkerqcmetadatabydatasetRecord, String> MARKER_STRAND_DATA_READ = createField("marker_strand_data_read", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.getmarkerqcmetadatabydataset</code> table reference
     */
    public Getmarkerqcmetadatabydataset() {
        this(DSL.name("getmarkerqcmetadatabydataset"), null);
    }

    /**
     * Create an aliased <code>public.getmarkerqcmetadatabydataset</code> table reference
     */
    public Getmarkerqcmetadatabydataset(String alias) {
        this(DSL.name(alias), GETMARKERQCMETADATABYDATASET);
    }

    /**
     * Create an aliased <code>public.getmarkerqcmetadatabydataset</code> table reference
     */
    public Getmarkerqcmetadatabydataset(Name alias) {
        this(alias, GETMARKERQCMETADATABYDATASET);
    }

    private Getmarkerqcmetadatabydataset(Name alias, Table<GetmarkerqcmetadatabydatasetRecord> aliased) {
        this(alias, aliased, new Field[1]);
    }

    private Getmarkerqcmetadatabydataset(Name alias, Table<GetmarkerqcmetadatabydatasetRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Getmarkerqcmetadatabydataset as(String alias) {
        return new Getmarkerqcmetadatabydataset(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Getmarkerqcmetadatabydataset as(Name alias) {
        return new Getmarkerqcmetadatabydataset(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Getmarkerqcmetadatabydataset rename(String name) {
        return new Getmarkerqcmetadatabydataset(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Getmarkerqcmetadatabydataset rename(Name name) {
        return new Getmarkerqcmetadatabydataset(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public Getmarkerqcmetadatabydataset call(Integer datasetid) {
        return new Getmarkerqcmetadatabydataset(DSL.name(getName()), null, new Field[] { 
              DSL.val(datasetid, org.jooq.impl.SQLDataType.INTEGER)
        });
    }

    /**
     * Call this table-valued function
     */
    public Getmarkerqcmetadatabydataset call(Field<Integer> datasetid) {
        return new Getmarkerqcmetadatabydataset(DSL.name(getName()), null, new Field[] { 
              datasetid
        });
    }
}
