/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.tables.records;


import java.sql.Date;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.tables.Analysis;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record18;
import org.jooq.Row18;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnalysisRecord extends UpdatableRecordImpl<AnalysisRecord> implements Record18<Integer, String, String, Integer, String, String, String, String, String, String, Integer, Object, Timestamp, Integer, Integer, Date, Integer, Date> {

    private static final long serialVersionUID = 248943003;

    /**
     * Setter for <code>public.analysis.analysis_id</code>.
     */
    public void setAnalysisId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.analysis.analysis_id</code>.
     */
    public Integer getAnalysisId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.analysis.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.analysis.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.analysis.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.analysis.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.analysis.type_id</code>.
     */
    public void setTypeId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.analysis.type_id</code>.
     */
    public Integer getTypeId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.analysis.program</code>.
     */
    public void setProgram(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.analysis.program</code>.
     */
    public String getProgram() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.analysis.programversion</code>.
     */
    public void setProgramversion(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.analysis.programversion</code>.
     */
    public String getProgramversion() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.analysis.algorithm</code>.
     */
    public void setAlgorithm(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.analysis.algorithm</code>.
     */
    public String getAlgorithm() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.analysis.sourcename</code>.
     */
    public void setSourcename(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.analysis.sourcename</code>.
     */
    public String getSourcename() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.analysis.sourceversion</code>.
     */
    public void setSourceversion(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.analysis.sourceversion</code>.
     */
    public String getSourceversion() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.analysis.sourceuri</code>.
     */
    public void setSourceuri(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.analysis.sourceuri</code>.
     */
    public String getSourceuri() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.analysis.reference_id</code>.
     */
    public void setReferenceId(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.analysis.reference_id</code>.
     */
    public Integer getReferenceId() {
        return (Integer) get(10);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setParameters(Object value) {
        set(11, value);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public Object getParameters() {
        return get(11);
    }

    /**
     * Setter for <code>public.analysis.timeexecuted</code>.
     */
    public void setTimeexecuted(Timestamp value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.analysis.timeexecuted</code>.
     */
    public Timestamp getTimeexecuted() {
        return (Timestamp) get(12);
    }

    /**
     * Setter for <code>public.analysis.status</code>.
     */
    public void setStatus(Integer value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.analysis.status</code>.
     */
    public Integer getStatus() {
        return (Integer) get(13);
    }

    /**
     * Setter for <code>public.analysis.created_by</code>.
     */
    public void setCreatedBy(Integer value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.analysis.created_by</code>.
     */
    public Integer getCreatedBy() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>public.analysis.created_date</code>.
     */
    public void setCreatedDate(Date value) {
        set(15, value);
    }

    /**
     * Getter for <code>public.analysis.created_date</code>.
     */
    public Date getCreatedDate() {
        return (Date) get(15);
    }

    /**
     * Setter for <code>public.analysis.modified_by</code>.
     */
    public void setModifiedBy(Integer value) {
        set(16, value);
    }

    /**
     * Getter for <code>public.analysis.modified_by</code>.
     */
    public Integer getModifiedBy() {
        return (Integer) get(16);
    }

    /**
     * Setter for <code>public.analysis.modified_date</code>.
     */
    public void setModifiedDate(Date value) {
        set(17, value);
    }

    /**
     * Getter for <code>public.analysis.modified_date</code>.
     */
    public Date getModifiedDate() {
        return (Date) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record18 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row18<Integer, String, String, Integer, String, String, String, String, String, String, Integer, Object, Timestamp, Integer, Integer, Date, Integer, Date> fieldsRow() {
        return (Row18) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row18<Integer, String, String, Integer, String, String, String, String, String, String, Integer, Object, Timestamp, Integer, Integer, Date, Integer, Date> valuesRow() {
        return (Row18) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Analysis.ANALYSIS.ANALYSIS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Analysis.ANALYSIS.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Analysis.ANALYSIS.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Analysis.ANALYSIS.TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Analysis.ANALYSIS.PROGRAM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Analysis.ANALYSIS.PROGRAMVERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Analysis.ANALYSIS.ALGORITHM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Analysis.ANALYSIS.SOURCENAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return Analysis.ANALYSIS.SOURCEVERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return Analysis.ANALYSIS.SOURCEURI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field11() {
        return Analysis.ANALYSIS.REFERENCE_ID;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Field<Object> field12() {
        return Analysis.ANALYSIS.PARAMETERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field13() {
        return Analysis.ANALYSIS.TIMEEXECUTED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field14() {
        return Analysis.ANALYSIS.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field15() {
        return Analysis.ANALYSIS.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field16() {
        return Analysis.ANALYSIS.CREATED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field17() {
        return Analysis.ANALYSIS.MODIFIED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field18() {
        return Analysis.ANALYSIS.MODIFIED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getAnalysisId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getProgram();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getProgramversion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getAlgorithm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getSourcename();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getSourceversion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getSourceuri();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component11() {
        return getReferenceId();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object component12() {
        return getParameters();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component13() {
        return getTimeexecuted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component14() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component15() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component16() {
        return getCreatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component17() {
        return getModifiedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component18() {
        return getModifiedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getAnalysisId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getProgram();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getProgramversion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getAlgorithm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getSourcename();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getSourceversion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getSourceuri();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value11() {
        return getReferenceId();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object value12() {
        return getParameters();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value13() {
        return getTimeexecuted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value14() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value15() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value16() {
        return getCreatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value17() {
        return getModifiedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value18() {
        return getModifiedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalysisRecord value1(Integer value) {
        setAnalysisId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalysisRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalysisRecord value3(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalysisRecord value4(Integer value) {
        setTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalysisRecord value5(String value) {
        setProgram(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalysisRecord value6(String value) {
        setProgramversion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalysisRecord value7(String value) {
        setAlgorithm(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalysisRecord value8(String value) {
        setSourcename(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalysisRecord value9(String value) {
        setSourceversion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalysisRecord value10(String value) {
        setSourceuri(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalysisRecord value11(Integer value) {
        setReferenceId(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public AnalysisRecord value12(Object value) {
        setParameters(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalysisRecord value13(Timestamp value) {
        setTimeexecuted(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalysisRecord value14(Integer value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalysisRecord value15(Integer value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalysisRecord value16(Date value) {
        setCreatedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalysisRecord value17(Integer value) {
        setModifiedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalysisRecord value18(Date value) {
        setModifiedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalysisRecord values(Integer value1, String value2, String value3, Integer value4, String value5, String value6, String value7, String value8, String value9, String value10, Integer value11, Object value12, Timestamp value13, Integer value14, Integer value15, Date value16, Integer value17, Date value18) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AnalysisRecord
     */
    public AnalysisRecord() {
        super(Analysis.ANALYSIS);
    }

    /**
     * Create a detached, initialised AnalysisRecord
     */
    public AnalysisRecord(Integer analysisId, String name, String description, Integer typeId, String program, String programversion, String algorithm, String sourcename, String sourceversion, String sourceuri, Integer referenceId, Object parameters, Timestamp timeexecuted, Integer status, Integer createdBy, Date createdDate, Integer modifiedBy, Date modifiedDate) {
        super(Analysis.ANALYSIS);

        set(0, analysisId);
        set(1, name);
        set(2, description);
        set(3, typeId);
        set(4, program);
        set(5, programversion);
        set(6, algorithm);
        set(7, sourcename);
        set(8, sourceversion);
        set(9, sourceuri);
        set(10, referenceId);
        set(11, parameters);
        set(12, timeexecuted);
        set(13, status);
        set(14, createdBy);
        set(15, createdDate);
        set(16, modifiedBy);
        set(17, modifiedDate);
    }
}
