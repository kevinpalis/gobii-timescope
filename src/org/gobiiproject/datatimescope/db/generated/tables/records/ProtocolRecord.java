/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.tables.Protocol;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * A Platform can have multiple protocols and more than one protocol can be 
 * run by more than one vendor. 
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProtocolRecord extends UpdatableRecordImpl<ProtocolRecord> implements Record11<Integer, String, String, Integer, Integer, Object, Integer, Date, Integer, Date, Integer> {

    private static final long serialVersionUID = 1846674098;

    /**
     * Setter for <code>public.protocol.protocol_id</code>.
     */
    public void setProtocolId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.protocol.protocol_id</code>.
     */
    public Integer getProtocolId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.protocol.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.protocol.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.protocol.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.protocol.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.protocol.type_id</code>.
     */
    public void setTypeId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.protocol.type_id</code>.
     */
    public Integer getTypeId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.protocol.platform_id</code>.
     */
    public void setPlatformId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.protocol.platform_id</code>.
     */
    public Integer getPlatformId() {
        return (Integer) get(4);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setProps(Object value) {
        set(5, value);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public Object getProps() {
        return get(5);
    }

    /**
     * Setter for <code>public.protocol.created_by</code>.
     */
    public void setCreatedBy(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.protocol.created_by</code>.
     */
    public Integer getCreatedBy() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>public.protocol.created_date</code>.
     */
    public void setCreatedDate(Date value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.protocol.created_date</code>.
     */
    public Date getCreatedDate() {
        return (Date) get(7);
    }

    /**
     * Setter for <code>public.protocol.modified_by</code>.
     */
    public void setModifiedBy(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.protocol.modified_by</code>.
     */
    public Integer getModifiedBy() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>public.protocol.modified_date</code>.
     */
    public void setModifiedDate(Date value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.protocol.modified_date</code>.
     */
    public Date getModifiedDate() {
        return (Date) get(9);
    }

    /**
     * Setter for <code>public.protocol.status</code>.
     */
    public void setStatus(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.protocol.status</code>.
     */
    public Integer getStatus() {
        return (Integer) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Integer, String, String, Integer, Integer, Object, Integer, Date, Integer, Date, Integer> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Integer, String, String, Integer, Integer, Object, Integer, Date, Integer, Date, Integer> valuesRow() {
        return (Row11) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Protocol.PROTOCOL.PROTOCOL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Protocol.PROTOCOL.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Protocol.PROTOCOL.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Protocol.PROTOCOL.TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Protocol.PROTOCOL.PLATFORM_ID;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Field<Object> field6() {
        return Protocol.PROTOCOL.PROPS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return Protocol.PROTOCOL.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field8() {
        return Protocol.PROTOCOL.CREATED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return Protocol.PROTOCOL.MODIFIED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field10() {
        return Protocol.PROTOCOL.MODIFIED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field11() {
        return Protocol.PROTOCOL.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getProtocolId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getPlatformId();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object component6() {
        return getProps();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component8() {
        return getCreatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component9() {
        return getModifiedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component10() {
        return getModifiedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component11() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getProtocolId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getPlatformId();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object value6() {
        return getProps();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value8() {
        return getCreatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getModifiedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value10() {
        return getModifiedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value11() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProtocolRecord value1(Integer value) {
        setProtocolId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProtocolRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProtocolRecord value3(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProtocolRecord value4(Integer value) {
        setTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProtocolRecord value5(Integer value) {
        setPlatformId(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public ProtocolRecord value6(Object value) {
        setProps(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProtocolRecord value7(Integer value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProtocolRecord value8(Date value) {
        setCreatedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProtocolRecord value9(Integer value) {
        setModifiedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProtocolRecord value10(Date value) {
        setModifiedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProtocolRecord value11(Integer value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProtocolRecord values(Integer value1, String value2, String value3, Integer value4, Integer value5, Object value6, Integer value7, Date value8, Integer value9, Date value10, Integer value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProtocolRecord
     */
    public ProtocolRecord() {
        super(Protocol.PROTOCOL);
    }

    /**
     * Create a detached, initialised ProtocolRecord
     */
    public ProtocolRecord(Integer protocolId, String name, String description, Integer typeId, Integer platformId, Object props, Integer createdBy, Date createdDate, Integer modifiedBy, Date modifiedDate, Integer status) {
        super(Protocol.PROTOCOL);

        set(0, protocolId);
        set(1, name);
        set(2, description);
        set(3, typeId);
        set(4, platformId);
        set(5, props);
        set(6, createdBy);
        set(7, createdDate);
        set(8, modifiedBy);
        set(9, modifiedDate);
        set(10, status);
    }
}
