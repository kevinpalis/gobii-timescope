/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.tables.records;


import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.tables.Vertex;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VertexRecord extends UpdatableRecordImpl<VertexRecord> implements Record9<Integer, String, Integer, String, String, String, String, Integer, Boolean> {

    private static final long serialVersionUID = 56322283;

    /**
     * Setter for <code>public.vertex.vertex_id</code>.
     */
    public void setVertexId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.vertex.vertex_id</code>.
     */
    public Integer getVertexId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.vertex.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.vertex.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.vertex.type_id</code>.
     */
    public void setTypeId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.vertex.type_id</code>.
     */
    public Integer getTypeId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.vertex.table_name</code>.
     */
    public void setTableName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.vertex.table_name</code>.
     */
    public String getTableName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.vertex.data_loc</code>.
     */
    public void setDataLoc(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.vertex.data_loc</code>.
     */
    public String getDataLoc() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.vertex.criterion</code>.
     */
    public void setCriterion(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.vertex.criterion</code>.
     */
    public String getCriterion() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.vertex.alias</code>.
     */
    public void setAlias(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.vertex.alias</code>.
     */
    public String getAlias() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.vertex.relevance</code>.
     */
    public void setRelevance(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.vertex.relevance</code>.
     */
    public Integer getRelevance() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>public.vertex.is_entry</code>.
     */
    public void setIsEntry(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.vertex.is_entry</code>.
     */
    public Boolean getIsEntry() {
        return (Boolean) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, String, Integer, String, String, String, String, Integer, Boolean> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, String, Integer, String, String, String, String, Integer, Boolean> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Vertex.VERTEX.VERTEX_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Vertex.VERTEX.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Vertex.VERTEX.TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Vertex.VERTEX.TABLE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Vertex.VERTEX.DATA_LOC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Vertex.VERTEX.CRITERION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Vertex.VERTEX.ALIAS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return Vertex.VERTEX.RELEVANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field9() {
        return Vertex.VERTEX.IS_ENTRY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getVertexId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getTableName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getDataLoc();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getCriterion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getAlias();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component8() {
        return getRelevance();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component9() {
        return getIsEntry();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getVertexId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getTableName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getDataLoc();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getCriterion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getAlias();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getRelevance();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value9() {
        return getIsEntry();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VertexRecord value1(Integer value) {
        setVertexId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VertexRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VertexRecord value3(Integer value) {
        setTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VertexRecord value4(String value) {
        setTableName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VertexRecord value5(String value) {
        setDataLoc(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VertexRecord value6(String value) {
        setCriterion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VertexRecord value7(String value) {
        setAlias(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VertexRecord value8(Integer value) {
        setRelevance(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VertexRecord value9(Boolean value) {
        setIsEntry(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VertexRecord values(Integer value1, String value2, Integer value3, String value4, String value5, String value6, String value7, Integer value8, Boolean value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VertexRecord
     */
    public VertexRecord() {
        super(Vertex.VERTEX);
    }

    /**
     * Create a detached, initialised VertexRecord
     */
    public VertexRecord(Integer vertexId, String name, Integer typeId, String tableName, String dataLoc, String criterion, String alias, Integer relevance, Boolean isEntry) {
        super(Vertex.VERTEX);

        set(0, vertexId);
        set(1, name);
        set(2, typeId);
        set(3, tableName);
        set(4, dataLoc);
        set(5, criterion);
        set(6, alias);
        set(7, relevance);
        set(8, isEntry);
    }
}
