/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.tables.records;


import java.math.BigDecimal;

import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.tables.Getminimalmarkermetadatabydatasetandmap;
import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GetminimalmarkermetadatabydatasetandmapRecord extends TableRecordImpl<GetminimalmarkermetadatabydatasetandmapRecord> implements Record5<String, String, String, BigDecimal, String> {

    private static final long serialVersionUID = 966085535;

    /**
     * Setter for <code>public.getminimalmarkermetadatabydatasetandmap.marker_name</code>.
     */
    public void setMarkerName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.getminimalmarkermetadatabydatasetandmap.marker_name</code>.
     */
    public String getMarkerName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.getminimalmarkermetadatabydatasetandmap.alleles</code>.
     */
    public void setAlleles(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.getminimalmarkermetadatabydatasetandmap.alleles</code>.
     */
    public String getAlleles() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.getminimalmarkermetadatabydatasetandmap.chrom</code>.
     */
    public void setChrom(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.getminimalmarkermetadatabydatasetandmap.chrom</code>.
     */
    public String getChrom() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.getminimalmarkermetadatabydatasetandmap.pos</code>.
     */
    public void setPos(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.getminimalmarkermetadatabydatasetandmap.pos</code>.
     */
    public BigDecimal getPos() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>public.getminimalmarkermetadatabydatasetandmap.strand</code>.
     */
    public void setStrand(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.getminimalmarkermetadatabydatasetandmap.strand</code>.
     */
    public String getStrand() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, String, String, BigDecimal, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, String, String, BigDecimal, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Getminimalmarkermetadatabydatasetandmap.GETMINIMALMARKERMETADATABYDATASETANDMAP.MARKER_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Getminimalmarkermetadatabydatasetandmap.GETMINIMALMARKERMETADATABYDATASETANDMAP.ALLELES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Getminimalmarkermetadatabydatasetandmap.GETMINIMALMARKERMETADATABYDATASETANDMAP.CHROM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field4() {
        return Getminimalmarkermetadatabydatasetandmap.GETMINIMALMARKERMETADATABYDATASETANDMAP.POS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Getminimalmarkermetadatabydatasetandmap.GETMINIMALMARKERMETADATABYDATASETANDMAP.STRAND;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getMarkerName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getAlleles();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getChrom();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component4() {
        return getPos();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getStrand();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getMarkerName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getAlleles();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getChrom();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value4() {
        return getPos();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getStrand();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetminimalmarkermetadatabydatasetandmapRecord value1(String value) {
        setMarkerName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetminimalmarkermetadatabydatasetandmapRecord value2(String value) {
        setAlleles(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetminimalmarkermetadatabydatasetandmapRecord value3(String value) {
        setChrom(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetminimalmarkermetadatabydatasetandmapRecord value4(BigDecimal value) {
        setPos(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetminimalmarkermetadatabydatasetandmapRecord value5(String value) {
        setStrand(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetminimalmarkermetadatabydatasetandmapRecord values(String value1, String value2, String value3, BigDecimal value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GetminimalmarkermetadatabydatasetandmapRecord
     */
    public GetminimalmarkermetadatabydatasetandmapRecord() {
        super(Getminimalmarkermetadatabydatasetandmap.GETMINIMALMARKERMETADATABYDATASETANDMAP);
    }

    /**
     * Create a detached, initialised GetminimalmarkermetadatabydatasetandmapRecord
     */
    public GetminimalmarkermetadatabydatasetandmapRecord(String markerName, String alleles, String chrom, BigDecimal pos, String strand) {
        super(Getminimalmarkermetadatabydatasetandmap.GETMINIMALMARKERMETADATABYDATASETANDMAP);

        set(0, markerName);
        set(1, alleles);
        set(2, chrom);
        set(3, pos);
        set(4, strand);
    }
}
