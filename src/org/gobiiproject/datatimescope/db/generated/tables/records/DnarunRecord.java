/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.tables.records;


import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.tables.Dnarun;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DnarunRecord extends UpdatableRecordImpl<DnarunRecord> implements Record7<Integer, Integer, Integer, String, String, Object, Object> {

    private static final long serialVersionUID = -186500899;

    /**
     * Setter for <code>public.dnarun.dnarun_id</code>.
     */
    public void setDnarunId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.dnarun.dnarun_id</code>.
     */
    public Integer getDnarunId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.dnarun.experiment_id</code>.
     */
    public void setExperimentId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.dnarun.experiment_id</code>.
     */
    public Integer getExperimentId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.dnarun.dnasample_id</code>.
     */
    public void setDnasampleId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.dnarun.dnasample_id</code>.
     */
    public Integer getDnasampleId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.dnarun.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.dnarun.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.dnarun.code</code>.
     */
    public void setCode(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.dnarun.code</code>.
     */
    public String getCode() {
        return (String) get(4);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setDatasetDnarunIdx(Object value) {
        set(5, value);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public Object getDatasetDnarunIdx() {
        return get(5);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setProps(Object value) {
        set(6, value);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public Object getProps() {
        return get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, Integer, String, String, Object, Object> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, Integer, String, String, Object, Object> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Dnarun.DNARUN.DNARUN_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Dnarun.DNARUN.EXPERIMENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Dnarun.DNARUN.DNASAMPLE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Dnarun.DNARUN.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Dnarun.DNARUN.CODE;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Field<Object> field6() {
        return Dnarun.DNARUN.DATASET_DNARUN_IDX;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Field<Object> field7() {
        return Dnarun.DNARUN.PROPS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getDnarunId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getExperimentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getDnasampleId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getCode();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object component6() {
        return getDatasetDnarunIdx();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object component7() {
        return getProps();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getDnarunId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getExperimentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getDnasampleId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getCode();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object value6() {
        return getDatasetDnarunIdx();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object value7() {
        return getProps();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DnarunRecord value1(Integer value) {
        setDnarunId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DnarunRecord value2(Integer value) {
        setExperimentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DnarunRecord value3(Integer value) {
        setDnasampleId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DnarunRecord value4(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DnarunRecord value5(String value) {
        setCode(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public DnarunRecord value6(Object value) {
        setDatasetDnarunIdx(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public DnarunRecord value7(Object value) {
        setProps(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DnarunRecord values(Integer value1, Integer value2, Integer value3, String value4, String value5, Object value6, Object value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DnarunRecord
     */
    public DnarunRecord() {
        super(Dnarun.DNARUN);
    }

    /**
     * Create a detached, initialised DnarunRecord
     */
    public DnarunRecord(Integer dnarunId, Integer experimentId, Integer dnasampleId, String name, String code, Object datasetDnarunIdx, Object props) {
        super(Dnarun.DNARUN);

        set(0, dnarunId);
        set(1, experimentId);
        set(2, dnasampleId);
        set(3, name);
        set(4, code);
        set(5, datasetDnarunIdx);
        set(6, props);
    }
}
