/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.tables.Dataset;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DatasetRecord extends UpdatableRecordImpl<DatasetRecord> implements Record17<Integer, Integer, Integer, Integer[], String, String, String, String, Object, Integer, Date, Integer, Date, Integer, Integer, String, Integer> {

    private static final long serialVersionUID = 172622130;

    /**
     * Setter for <code>public.dataset.dataset_id</code>.
     */
    public void setDatasetId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.dataset.dataset_id</code>.
     */
    public Integer getDatasetId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.dataset.experiment_id</code>.
     */
    public void setExperimentId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.dataset.experiment_id</code>.
     */
    public Integer getExperimentId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.dataset.callinganalysis_id</code>.
     */
    public void setCallinganalysisId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.dataset.callinganalysis_id</code>.
     */
    public Integer getCallinganalysisId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.dataset.analyses</code>.
     */
    public void setAnalyses(Integer... value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.dataset.analyses</code>.
     */
    public Integer[] getAnalyses() {
        return (Integer[]) get(3);
    }

    /**
     * Setter for <code>public.dataset.data_table</code>.
     */
    public void setDataTable(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.dataset.data_table</code>.
     */
    public String getDataTable() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.dataset.data_file</code>.
     */
    public void setDataFile(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.dataset.data_file</code>.
     */
    public String getDataFile() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.dataset.quality_table</code>.
     */
    public void setQualityTable(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.dataset.quality_table</code>.
     */
    public String getQualityTable() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.dataset.quality_file</code>.
     */
    public void setQualityFile(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.dataset.quality_file</code>.
     */
    public String getQualityFile() {
        return (String) get(7);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setScores(Object value) {
        set(8, value);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public Object getScores() {
        return get(8);
    }

    /**
     * Setter for <code>public.dataset.created_by</code>.
     */
    public void setCreatedBy(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.dataset.created_by</code>.
     */
    public Integer getCreatedBy() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>public.dataset.created_date</code>.
     */
    public void setCreatedDate(Date value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.dataset.created_date</code>.
     */
    public Date getCreatedDate() {
        return (Date) get(10);
    }

    /**
     * Setter for <code>public.dataset.modified_by</code>.
     */
    public void setModifiedBy(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.dataset.modified_by</code>.
     */
    public Integer getModifiedBy() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>public.dataset.modified_date</code>.
     */
    public void setModifiedDate(Date value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.dataset.modified_date</code>.
     */
    public Date getModifiedDate() {
        return (Date) get(12);
    }

    /**
     * Setter for <code>public.dataset.status</code>.
     */
    public void setStatus(Integer value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.dataset.status</code>.
     */
    public Integer getStatus() {
        return (Integer) get(13);
    }

    /**
     * Setter for <code>public.dataset.type_id</code>.
     */
    public void setTypeId(Integer value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.dataset.type_id</code>.
     */
    public Integer getTypeId() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>public.dataset.name</code>.
     */
    public void setName(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>public.dataset.name</code>.
     */
    public String getName() {
        return (String) get(15);
    }

    /**
     * Setter for <code>public.dataset.job_id</code>.
     */
    public void setJobId(Integer value) {
        set(16, value);
    }

    /**
     * Getter for <code>public.dataset.job_id</code>.
     */
    public Integer getJobId() {
        return (Integer) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row17<Integer, Integer, Integer, Integer[], String, String, String, String, Object, Integer, Date, Integer, Date, Integer, Integer, String, Integer> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row17<Integer, Integer, Integer, Integer[], String, String, String, String, Object, Integer, Date, Integer, Date, Integer, Integer, String, Integer> valuesRow() {
        return (Row17) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Dataset.DATASET.DATASET_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Dataset.DATASET.EXPERIMENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Dataset.DATASET.CALLINGANALYSIS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer[]> field4() {
        return Dataset.DATASET.ANALYSES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Dataset.DATASET.DATA_TABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Dataset.DATASET.DATA_FILE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Dataset.DATASET.QUALITY_TABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Dataset.DATASET.QUALITY_FILE;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Field<Object> field9() {
        return Dataset.DATASET.SCORES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field10() {
        return Dataset.DATASET.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field11() {
        return Dataset.DATASET.CREATED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field12() {
        return Dataset.DATASET.MODIFIED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field13() {
        return Dataset.DATASET.MODIFIED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field14() {
        return Dataset.DATASET.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field15() {
        return Dataset.DATASET.TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field16() {
        return Dataset.DATASET.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field17() {
        return Dataset.DATASET.JOB_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getDatasetId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getExperimentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getCallinganalysisId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer[] component4() {
        return getAnalyses();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getDataTable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getDataFile();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getQualityTable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getQualityFile();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object component9() {
        return getScores();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component10() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component11() {
        return getCreatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component12() {
        return getModifiedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component13() {
        return getModifiedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component14() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component15() {
        return getTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component16() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component17() {
        return getJobId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getDatasetId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getExperimentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getCallinganalysisId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer[] value4() {
        return getAnalyses();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getDataTable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getDataFile();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getQualityTable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getQualityFile();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object value9() {
        return getScores();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value10() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value11() {
        return getCreatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value12() {
        return getModifiedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value13() {
        return getModifiedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value14() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value15() {
        return getTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value16() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value17() {
        return getJobId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatasetRecord value1(Integer value) {
        setDatasetId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatasetRecord value2(Integer value) {
        setExperimentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatasetRecord value3(Integer value) {
        setCallinganalysisId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatasetRecord value4(Integer... value) {
        setAnalyses(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatasetRecord value5(String value) {
        setDataTable(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatasetRecord value6(String value) {
        setDataFile(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatasetRecord value7(String value) {
        setQualityTable(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatasetRecord value8(String value) {
        setQualityFile(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public DatasetRecord value9(Object value) {
        setScores(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatasetRecord value10(Integer value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatasetRecord value11(Date value) {
        setCreatedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatasetRecord value12(Integer value) {
        setModifiedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatasetRecord value13(Date value) {
        setModifiedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatasetRecord value14(Integer value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatasetRecord value15(Integer value) {
        setTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatasetRecord value16(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatasetRecord value17(Integer value) {
        setJobId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatasetRecord values(Integer value1, Integer value2, Integer value3, Integer[] value4, String value5, String value6, String value7, String value8, Object value9, Integer value10, Date value11, Integer value12, Date value13, Integer value14, Integer value15, String value16, Integer value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DatasetRecord
     */
    public DatasetRecord() {
        super(Dataset.DATASET);
    }

    /**
     * Create a detached, initialised DatasetRecord
     */
    public DatasetRecord(Integer datasetId, Integer experimentId, Integer callinganalysisId, Integer[] analyses, String dataTable, String dataFile, String qualityTable, String qualityFile, Object scores, Integer createdBy, Date createdDate, Integer modifiedBy, Date modifiedDate, Integer status, Integer typeId, String name, Integer jobId) {
        super(Dataset.DATASET);

        set(0, datasetId);
        set(1, experimentId);
        set(2, callinganalysisId);
        set(3, analyses);
        set(4, dataTable);
        set(5, dataFile);
        set(6, qualityTable);
        set(7, qualityFile);
        set(8, scores);
        set(9, createdBy);
        set(10, createdDate);
        set(11, modifiedBy);
        set(12, modifiedDate);
        set(13, status);
        set(14, typeId);
        set(15, name);
        set(16, jobId);
    }
}
