/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.tables.records;


import java.math.BigDecimal;

import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.tables.Getallmarkermetadatabydatasetandmap;
import org.jooq.Field;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GetallmarkermetadatabydatasetandmapRecord extends TableRecordImpl<GetallmarkermetadatabydatasetandmapRecord> implements Record15<String, String, BigDecimal, BigDecimal, String, String, Integer, String, String, String, String, String, Object, Object, String> {

    private static final long serialVersionUID = -895926057;

    /**
     * Setter for <code>public.getallmarkermetadatabydatasetandmap.marker_name</code>.
     */
    public void setMarkerName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.getallmarkermetadatabydatasetandmap.marker_name</code>.
     */
    public String getMarkerName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.getallmarkermetadatabydatasetandmap.linkage_group_name</code>.
     */
    public void setLinkageGroupName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.getallmarkermetadatabydatasetandmap.linkage_group_name</code>.
     */
    public String getLinkageGroupName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.getallmarkermetadatabydatasetandmap.start</code>.
     */
    public void setStart(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.getallmarkermetadatabydatasetandmap.start</code>.
     */
    public BigDecimal getStart() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>public.getallmarkermetadatabydatasetandmap.stop</code>.
     */
    public void setStop(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.getallmarkermetadatabydatasetandmap.stop</code>.
     */
    public BigDecimal getStop() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>public.getallmarkermetadatabydatasetandmap.mapset_name</code>.
     */
    public void setMapsetName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.getallmarkermetadatabydatasetandmap.mapset_name</code>.
     */
    public String getMapsetName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.getallmarkermetadatabydatasetandmap.platform_name</code>.
     */
    public void setPlatformName(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.getallmarkermetadatabydatasetandmap.platform_name</code>.
     */
    public String getPlatformName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.getallmarkermetadatabydatasetandmap.variant_id</code>.
     */
    public void setVariantId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.getallmarkermetadatabydatasetandmap.variant_id</code>.
     */
    public Integer getVariantId() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>public.getallmarkermetadatabydatasetandmap.code</code>.
     */
    public void setCode(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.getallmarkermetadatabydatasetandmap.code</code>.
     */
    public String getCode() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.getallmarkermetadatabydatasetandmap.ref</code>.
     */
    public void setRef(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.getallmarkermetadatabydatasetandmap.ref</code>.
     */
    public String getRef() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.getallmarkermetadatabydatasetandmap.alts</code>.
     */
    public void setAlts(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.getallmarkermetadatabydatasetandmap.alts</code>.
     */
    public String getAlts() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.getallmarkermetadatabydatasetandmap.sequence</code>.
     */
    public void setSequence(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.getallmarkermetadatabydatasetandmap.sequence</code>.
     */
    public String getSequence() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.getallmarkermetadatabydatasetandmap.reference_name</code>.
     */
    public void setReferenceName(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.getallmarkermetadatabydatasetandmap.reference_name</code>.
     */
    public String getReferenceName() {
        return (String) get(11);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setPrimers(Object value) {
        set(12, value);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public Object getPrimers() {
        return get(12);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setProbsets(Object value) {
        set(13, value);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public Object getProbsets() {
        return get(13);
    }

    /**
     * Setter for <code>public.getallmarkermetadatabydatasetandmap.strand_name</code>.
     */
    public void setStrandName(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.getallmarkermetadatabydatasetandmap.strand_name</code>.
     */
    public String getStrandName() {
        return (String) get(14);
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<String, String, BigDecimal, BigDecimal, String, String, Integer, String, String, String, String, String, Object, Object, String> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<String, String, BigDecimal, BigDecimal, String, String, Integer, String, String, String, String, String, Object, Object, String> valuesRow() {
        return (Row15) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Getallmarkermetadatabydatasetandmap.GETALLMARKERMETADATABYDATASETANDMAP.MARKER_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Getallmarkermetadatabydatasetandmap.GETALLMARKERMETADATABYDATASETANDMAP.LINKAGE_GROUP_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field3() {
        return Getallmarkermetadatabydatasetandmap.GETALLMARKERMETADATABYDATASETANDMAP.START;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field4() {
        return Getallmarkermetadatabydatasetandmap.GETALLMARKERMETADATABYDATASETANDMAP.STOP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Getallmarkermetadatabydatasetandmap.GETALLMARKERMETADATABYDATASETANDMAP.MAPSET_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Getallmarkermetadatabydatasetandmap.GETALLMARKERMETADATABYDATASETANDMAP.PLATFORM_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return Getallmarkermetadatabydatasetandmap.GETALLMARKERMETADATABYDATASETANDMAP.VARIANT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Getallmarkermetadatabydatasetandmap.GETALLMARKERMETADATABYDATASETANDMAP.CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return Getallmarkermetadatabydatasetandmap.GETALLMARKERMETADATABYDATASETANDMAP.REF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return Getallmarkermetadatabydatasetandmap.GETALLMARKERMETADATABYDATASETANDMAP.ALTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return Getallmarkermetadatabydatasetandmap.GETALLMARKERMETADATABYDATASETANDMAP.SEQUENCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return Getallmarkermetadatabydatasetandmap.GETALLMARKERMETADATABYDATASETANDMAP.REFERENCE_NAME;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Field<Object> field13() {
        return Getallmarkermetadatabydatasetandmap.GETALLMARKERMETADATABYDATASETANDMAP.PRIMERS;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Field<Object> field14() {
        return Getallmarkermetadatabydatasetandmap.GETALLMARKERMETADATABYDATASETANDMAP.PROBSETS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return Getallmarkermetadatabydatasetandmap.GETALLMARKERMETADATABYDATASETANDMAP.STRAND_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getMarkerName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getLinkageGroupName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component3() {
        return getStart();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component4() {
        return getStop();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getMapsetName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getPlatformName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getVariantId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getRef();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getAlts();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getSequence();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getReferenceName();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object component13() {
        return getPrimers();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object component14() {
        return getProbsets();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getStrandName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getMarkerName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getLinkageGroupName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value3() {
        return getStart();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value4() {
        return getStop();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getMapsetName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getPlatformName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getVariantId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getRef();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getAlts();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getSequence();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getReferenceName();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object value13() {
        return getPrimers();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object value14() {
        return getProbsets();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getStrandName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetallmarkermetadatabydatasetandmapRecord value1(String value) {
        setMarkerName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetallmarkermetadatabydatasetandmapRecord value2(String value) {
        setLinkageGroupName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetallmarkermetadatabydatasetandmapRecord value3(BigDecimal value) {
        setStart(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetallmarkermetadatabydatasetandmapRecord value4(BigDecimal value) {
        setStop(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetallmarkermetadatabydatasetandmapRecord value5(String value) {
        setMapsetName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetallmarkermetadatabydatasetandmapRecord value6(String value) {
        setPlatformName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetallmarkermetadatabydatasetandmapRecord value7(Integer value) {
        setVariantId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetallmarkermetadatabydatasetandmapRecord value8(String value) {
        setCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetallmarkermetadatabydatasetandmapRecord value9(String value) {
        setRef(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetallmarkermetadatabydatasetandmapRecord value10(String value) {
        setAlts(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetallmarkermetadatabydatasetandmapRecord value11(String value) {
        setSequence(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetallmarkermetadatabydatasetandmapRecord value12(String value) {
        setReferenceName(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public GetallmarkermetadatabydatasetandmapRecord value13(Object value) {
        setPrimers(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public GetallmarkermetadatabydatasetandmapRecord value14(Object value) {
        setProbsets(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetallmarkermetadatabydatasetandmapRecord value15(String value) {
        setStrandName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetallmarkermetadatabydatasetandmapRecord values(String value1, String value2, BigDecimal value3, BigDecimal value4, String value5, String value6, Integer value7, String value8, String value9, String value10, String value11, String value12, Object value13, Object value14, String value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GetallmarkermetadatabydatasetandmapRecord
     */
    public GetallmarkermetadatabydatasetandmapRecord() {
        super(Getallmarkermetadatabydatasetandmap.GETALLMARKERMETADATABYDATASETANDMAP);
    }

    /**
     * Create a detached, initialised GetallmarkermetadatabydatasetandmapRecord
     */
    public GetallmarkermetadatabydatasetandmapRecord(String markerName, String linkageGroupName, BigDecimal start, BigDecimal stop, String mapsetName, String platformName, Integer variantId, String code, String ref, String alts, String sequence, String referenceName, Object primers, Object probsets, String strandName) {
        super(Getallmarkermetadatabydatasetandmap.GETALLMARKERMETADATABYDATASETANDMAP);

        set(0, markerName);
        set(1, linkageGroupName);
        set(2, start);
        set(3, stop);
        set(4, mapsetName);
        set(5, platformName);
        set(6, variantId);
        set(7, code);
        set(8, ref);
        set(9, alts);
        set(10, sequence);
        set(11, referenceName);
        set(12, primers);
        set(13, probsets);
        set(14, strandName);
    }
}
