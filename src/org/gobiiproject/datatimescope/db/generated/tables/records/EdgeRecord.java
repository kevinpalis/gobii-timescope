/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.tables.records;


import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.tables.Edge;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EdgeRecord extends UpdatableRecordImpl<EdgeRecord> implements Record5<Integer, Integer, Integer, Integer, String> {

    private static final long serialVersionUID = 316936753;

    /**
     * Setter for <code>public.edge.edge_id</code>.
     */
    public void setEdgeId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.edge.edge_id</code>.
     */
    public Integer getEdgeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.edge.start_vertex</code>.
     */
    public void setStartVertex(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.edge.start_vertex</code>.
     */
    public Integer getStartVertex() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.edge.end_vertex</code>.
     */
    public void setEndVertex(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.edge.end_vertex</code>.
     */
    public Integer getEndVertex() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.edge.type_id</code>.
     */
    public void setTypeId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.edge.type_id</code>.
     */
    public Integer getTypeId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.edge.criterion</code>.
     */
    public void setCriterion(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.edge.criterion</code>.
     */
    public String getCriterion() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Integer, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Integer, Integer, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Edge.EDGE.EDGE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Edge.EDGE.START_VERTEX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Edge.EDGE.END_VERTEX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Edge.EDGE.TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Edge.EDGE.CRITERION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getEdgeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getStartVertex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getEndVertex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getCriterion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getEdgeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getStartVertex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getEndVertex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getCriterion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EdgeRecord value1(Integer value) {
        setEdgeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EdgeRecord value2(Integer value) {
        setStartVertex(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EdgeRecord value3(Integer value) {
        setEndVertex(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EdgeRecord value4(Integer value) {
        setTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EdgeRecord value5(String value) {
        setCriterion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EdgeRecord values(Integer value1, Integer value2, Integer value3, Integer value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EdgeRecord
     */
    public EdgeRecord() {
        super(Edge.EDGE);
    }

    /**
     * Create a detached, initialised EdgeRecord
     */
    public EdgeRecord(Integer edgeId, Integer startVertex, Integer endVertex, Integer typeId, String criterion) {
        super(Edge.EDGE);

        set(0, edgeId);
        set(1, startVertex);
        set(2, endVertex);
        set(3, typeId);
        set(4, criterion);
    }
}
