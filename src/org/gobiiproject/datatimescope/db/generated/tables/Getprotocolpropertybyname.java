/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.tables;


import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.Public;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetprotocolpropertybynameRecord;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Getprotocolpropertybyname extends TableImpl<GetprotocolpropertybynameRecord> {

    private static final long serialVersionUID = -1683034268;

    /**
     * The reference instance of <code>public.getprotocolpropertybyname</code>
     */
    public static final Getprotocolpropertybyname GETPROTOCOLPROPERTYBYNAME = new Getprotocolpropertybyname();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GetprotocolpropertybynameRecord> getRecordType() {
        return GetprotocolpropertybynameRecord.class;
    }

    /**
     * The column <code>public.getprotocolpropertybyname.property_id</code>.
     */
    public final TableField<GetprotocolpropertybynameRecord, Integer> PROPERTY_ID = createField("property_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.getprotocolpropertybyname.property_value</code>.
     */
    public final TableField<GetprotocolpropertybynameRecord, String> PROPERTY_VALUE = createField("property_value", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.getprotocolpropertybyname</code> table reference
     */
    public Getprotocolpropertybyname() {
        this(DSL.name("getprotocolpropertybyname"), null);
    }

    /**
     * Create an aliased <code>public.getprotocolpropertybyname</code> table reference
     */
    public Getprotocolpropertybyname(String alias) {
        this(DSL.name(alias), GETPROTOCOLPROPERTYBYNAME);
    }

    /**
     * Create an aliased <code>public.getprotocolpropertybyname</code> table reference
     */
    public Getprotocolpropertybyname(Name alias) {
        this(alias, GETPROTOCOLPROPERTYBYNAME);
    }

    private Getprotocolpropertybyname(Name alias, Table<GetprotocolpropertybynameRecord> aliased) {
        this(alias, aliased, new Field[2]);
    }

    private Getprotocolpropertybyname(Name alias, Table<GetprotocolpropertybynameRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Getprotocolpropertybyname as(String alias) {
        return new Getprotocolpropertybyname(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Getprotocolpropertybyname as(Name alias) {
        return new Getprotocolpropertybyname(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Getprotocolpropertybyname rename(String name) {
        return new Getprotocolpropertybyname(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Getprotocolpropertybyname rename(Name name) {
        return new Getprotocolpropertybyname(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public Getprotocolpropertybyname call(Integer protocolid, String propertyname) {
        return new Getprotocolpropertybyname(DSL.name(getName()), null, new Field[] { 
              DSL.val(protocolid, org.jooq.impl.SQLDataType.INTEGER)
            , DSL.val(propertyname, org.jooq.impl.SQLDataType.CLOB)
        });
    }

    /**
     * Call this table-valued function
     */
    public Getprotocolpropertybyname call(Field<Integer> protocolid, Field<String> propertyname) {
        return new Getprotocolpropertybyname(DSL.name(getName()), null, new Field[] { 
              protocolid
            , propertyname
        });
    }
}
