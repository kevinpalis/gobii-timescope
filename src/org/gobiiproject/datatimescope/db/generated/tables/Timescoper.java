/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.Indexes;
import org.gobiiproject.datatimescope.db.generated.Keys;
import org.gobiiproject.datatimescope.db.generated.Public;
import org.gobiiproject.datatimescope.db.generated.tables.records.TimescoperRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Timescoper extends TableImpl<TimescoperRecord> {

    private static final long serialVersionUID = 339370563;

    /**
     * The reference instance of <code>public.timescoper</code>
     */
    public static final Timescoper TIMESCOPER = new Timescoper();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TimescoperRecord> getRecordType() {
        return TimescoperRecord.class;
    }

    /**
     * The column <code>public.timescoper.timescoper_id</code>.
     */
    public final TableField<TimescoperRecord, Integer> TIMESCOPER_ID = createField("timescoper_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('timescoper_timescoper_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.timescoper.firstname</code>.
     */
    public final TableField<TimescoperRecord, String> FIRSTNAME = createField("firstname", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.timescoper.lastname</code>.
     */
    public final TableField<TimescoperRecord, String> LASTNAME = createField("lastname", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.timescoper.username</code>.
     */
    public final TableField<TimescoperRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.timescoper.password</code>.
     */
    public final TableField<TimescoperRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.timescoper.email</code>.
     */
    public final TableField<TimescoperRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.timescoper.role</code>.
     */
    public final TableField<TimescoperRecord, Integer> ROLE = createField("role", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("3", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>public.timescoper</code> table reference
     */
    public Timescoper() {
        this(DSL.name("timescoper"), null);
    }

    /**
     * Create an aliased <code>public.timescoper</code> table reference
     */
    public Timescoper(String alias) {
        this(DSL.name(alias), TIMESCOPER);
    }

    /**
     * Create an aliased <code>public.timescoper</code> table reference
     */
    public Timescoper(Name alias) {
        this(alias, TIMESCOPER);
    }

    private Timescoper(Name alias, Table<TimescoperRecord> aliased) {
        this(alias, aliased, null);
    }

    private Timescoper(Name alias, Table<TimescoperRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PK_TIMESCOPER, Indexes.USERNAME_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TimescoperRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TIMESCOPER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TimescoperRecord> getPrimaryKey() {
        return Keys.PK_TIMESCOPER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TimescoperRecord>> getKeys() {
        return Arrays.<UniqueKey<TimescoperRecord>>asList(Keys.PK_TIMESCOPER, Keys.USERNAME_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timescoper as(String alias) {
        return new Timescoper(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timescoper as(Name alias) {
        return new Timescoper(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Timescoper rename(String name) {
        return new Timescoper(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Timescoper rename(Name name) {
        return new Timescoper(name, null);
    }
}
