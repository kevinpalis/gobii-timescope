/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.tables;


import java.sql.Date;

import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.Keys;
import org.gobiiproject.datatimescope.db.generated.Public;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetexperimentsbyprojectidRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Getexperimentsbyprojectid extends TableImpl<GetexperimentsbyprojectidRecord> {

    private static final long serialVersionUID = -1599746880;

    /**
     * The reference instance of <code>public.getexperimentsbyprojectid</code>
     */
    public static final Getexperimentsbyprojectid GETEXPERIMENTSBYPROJECTID = new Getexperimentsbyprojectid();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GetexperimentsbyprojectidRecord> getRecordType() {
        return GetexperimentsbyprojectidRecord.class;
    }

    /**
     * The column <code>public.getexperimentsbyprojectid.experiment_id</code>.
     */
    public final TableField<GetexperimentsbyprojectidRecord, Integer> EXPERIMENT_ID = createField("experiment_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('experiment_experiment_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.getexperimentsbyprojectid.name</code>.
     */
    public final TableField<GetexperimentsbyprojectidRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.getexperimentsbyprojectid.code</code>.
     */
    public final TableField<GetexperimentsbyprojectidRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.getexperimentsbyprojectid.project_id</code>.
     */
    public final TableField<GetexperimentsbyprojectidRecord, Integer> PROJECT_ID = createField("project_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.getexperimentsbyprojectid.manifest_id</code>.
     */
    public final TableField<GetexperimentsbyprojectidRecord, Integer> MANIFEST_ID = createField("manifest_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.getexperimentsbyprojectid.data_file</code>.
     */
    public final TableField<GetexperimentsbyprojectidRecord, String> DATA_FILE = createField("data_file", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getexperimentsbyprojectid.created_by</code>.
     */
    public final TableField<GetexperimentsbyprojectidRecord, Integer> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.getexperimentsbyprojectid.created_date</code>.
     */
    public final TableField<GetexperimentsbyprojectidRecord, Date> CREATED_DATE = createField("created_date", org.jooq.impl.SQLDataType.DATE.defaultValue(org.jooq.impl.DSL.field("('now'::text)::date", org.jooq.impl.SQLDataType.DATE)), this, "");

    /**
     * The column <code>public.getexperimentsbyprojectid.modified_by</code>.
     */
    public final TableField<GetexperimentsbyprojectidRecord, Integer> MODIFIED_BY = createField("modified_by", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.getexperimentsbyprojectid.modified_date</code>.
     */
    public final TableField<GetexperimentsbyprojectidRecord, Date> MODIFIED_DATE = createField("modified_date", org.jooq.impl.SQLDataType.DATE.defaultValue(org.jooq.impl.DSL.field("('now'::text)::date", org.jooq.impl.SQLDataType.DATE)), this, "");

    /**
     * The column <code>public.getexperimentsbyprojectid.status</code>.
     */
    public final TableField<GetexperimentsbyprojectidRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.getexperimentsbyprojectid.vendor_protocol_id</code>.
     */
    public final TableField<GetexperimentsbyprojectidRecord, Integer> VENDOR_PROTOCOL_ID = createField("vendor_protocol_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.getexperimentsbyprojectid</code> table reference
     */
    public Getexperimentsbyprojectid() {
        this(DSL.name("getexperimentsbyprojectid"), null);
    }

    /**
     * Create an aliased <code>public.getexperimentsbyprojectid</code> table reference
     */
    public Getexperimentsbyprojectid(String alias) {
        this(DSL.name(alias), GETEXPERIMENTSBYPROJECTID);
    }

    /**
     * Create an aliased <code>public.getexperimentsbyprojectid</code> table reference
     */
    public Getexperimentsbyprojectid(Name alias) {
        this(alias, GETEXPERIMENTSBYPROJECTID);
    }

    private Getexperimentsbyprojectid(Name alias, Table<GetexperimentsbyprojectidRecord> aliased) {
        this(alias, aliased, new Field[1]);
    }

    private Getexperimentsbyprojectid(Name alias, Table<GetexperimentsbyprojectidRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<GetexperimentsbyprojectidRecord, Integer> getIdentity() {
        return Keys.IDENTITY_GETEXPERIMENTSBYPROJECTID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Getexperimentsbyprojectid as(String alias) {
        return new Getexperimentsbyprojectid(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Getexperimentsbyprojectid as(Name alias) {
        return new Getexperimentsbyprojectid(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Getexperimentsbyprojectid rename(String name) {
        return new Getexperimentsbyprojectid(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Getexperimentsbyprojectid rename(Name name) {
        return new Getexperimentsbyprojectid(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public Getexperimentsbyprojectid call(Integer projectid) {
        return new Getexperimentsbyprojectid(DSL.name(getName()), null, new Field[] { 
              DSL.val(projectid, org.jooq.impl.SQLDataType.INTEGER)
        });
    }

    /**
     * Call this table-valued function
     */
    public Getexperimentsbyprojectid call(Field<Integer> projectid) {
        return new Getexperimentsbyprojectid(DSL.name(getName()), null, new Field[] { 
              projectid
        });
    }
}
