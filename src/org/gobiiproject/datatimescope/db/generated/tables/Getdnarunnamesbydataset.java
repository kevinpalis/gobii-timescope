/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.tables;


import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.Public;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetdnarunnamesbydatasetRecord;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Getdnarunnamesbydataset extends TableImpl<GetdnarunnamesbydatasetRecord> {

    private static final long serialVersionUID = -2113305747;

    /**
     * The reference instance of <code>public.getdnarunnamesbydataset</code>
     */
    public static final Getdnarunnamesbydataset GETDNARUNNAMESBYDATASET = new Getdnarunnamesbydataset();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GetdnarunnamesbydatasetRecord> getRecordType() {
        return GetdnarunnamesbydatasetRecord.class;
    }

    /**
     * The column <code>public.getdnarunnamesbydataset.dnarun_id</code>.
     */
    public final TableField<GetdnarunnamesbydatasetRecord, Integer> DNARUN_ID = createField("dnarun_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.getdnarunnamesbydataset.dnarun_name</code>.
     */
    public final TableField<GetdnarunnamesbydatasetRecord, String> DNARUN_NAME = createField("dnarun_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.getdnarunnamesbydataset</code> table reference
     */
    public Getdnarunnamesbydataset() {
        this(DSL.name("getdnarunnamesbydataset"), null);
    }

    /**
     * Create an aliased <code>public.getdnarunnamesbydataset</code> table reference
     */
    public Getdnarunnamesbydataset(String alias) {
        this(DSL.name(alias), GETDNARUNNAMESBYDATASET);
    }

    /**
     * Create an aliased <code>public.getdnarunnamesbydataset</code> table reference
     */
    public Getdnarunnamesbydataset(Name alias) {
        this(alias, GETDNARUNNAMESBYDATASET);
    }

    private Getdnarunnamesbydataset(Name alias, Table<GetdnarunnamesbydatasetRecord> aliased) {
        this(alias, aliased, new Field[1]);
    }

    private Getdnarunnamesbydataset(Name alias, Table<GetdnarunnamesbydatasetRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Getdnarunnamesbydataset as(String alias) {
        return new Getdnarunnamesbydataset(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Getdnarunnamesbydataset as(Name alias) {
        return new Getdnarunnamesbydataset(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Getdnarunnamesbydataset rename(String name) {
        return new Getdnarunnamesbydataset(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Getdnarunnamesbydataset rename(Name name) {
        return new Getdnarunnamesbydataset(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public Getdnarunnamesbydataset call(Integer datasetid) {
        return new Getdnarunnamesbydataset(DSL.name(getName()), null, new Field[] { 
              DSL.val(datasetid, org.jooq.impl.SQLDataType.INTEGER)
        });
    }

    /**
     * Call this table-valued function
     */
    public Getdnarunnamesbydataset call(Field<Integer> datasetid) {
        return new Getdnarunnamesbydataset(DSL.name(getName()), null, new Field[] { 
              datasetid
        });
    }
}
