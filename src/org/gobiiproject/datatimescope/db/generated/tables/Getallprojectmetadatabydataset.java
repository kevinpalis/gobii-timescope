/*
 * This file is generated by jOOQ.
*/
package org.gobiiproject.datatimescope.db.generated.tables;


import javax.annotation.Generated;

import org.gobiiproject.datatimescope.db.generated.Public;
import org.gobiiproject.datatimescope.db.generated.tables.records.GetallprojectmetadatabydatasetRecord;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Getallprojectmetadatabydataset extends TableImpl<GetallprojectmetadatabydatasetRecord> {

    private static final long serialVersionUID = -5877339;

    /**
     * The reference instance of <code>public.getallprojectmetadatabydataset</code>
     */
    public static final Getallprojectmetadatabydataset GETALLPROJECTMETADATABYDATASET = new Getallprojectmetadatabydataset();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GetallprojectmetadatabydatasetRecord> getRecordType() {
        return GetallprojectmetadatabydatasetRecord.class;
    }

    /**
     * The column <code>public.getallprojectmetadatabydataset.project_pi_contact</code>.
     */
    public final TableField<GetallprojectmetadatabydatasetRecord, String> PROJECT_PI_CONTACT = createField("project_pi_contact", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getallprojectmetadatabydataset.project_name</code>.
     */
    public final TableField<GetallprojectmetadatabydatasetRecord, String> PROJECT_NAME = createField("project_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getallprojectmetadatabydataset.project_genotyping_purpose</code>.
     */
    public final TableField<GetallprojectmetadatabydatasetRecord, String> PROJECT_GENOTYPING_PURPOSE = createField("project_genotyping_purpose", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getallprojectmetadatabydataset.project_date_sampled</code>.
     */
    public final TableField<GetallprojectmetadatabydatasetRecord, String> PROJECT_DATE_SAMPLED = createField("project_date_sampled", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getallprojectmetadatabydataset.project_division</code>.
     */
    public final TableField<GetallprojectmetadatabydatasetRecord, String> PROJECT_DIVISION = createField("project_division", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getallprojectmetadatabydataset.project_study_name</code>.
     */
    public final TableField<GetallprojectmetadatabydatasetRecord, String> PROJECT_STUDY_NAME = createField("project_study_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getallprojectmetadatabydataset.experiment_name</code>.
     */
    public final TableField<GetallprojectmetadatabydatasetRecord, String> EXPERIMENT_NAME = createField("experiment_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getallprojectmetadatabydataset.platform_name</code>.
     */
    public final TableField<GetallprojectmetadatabydatasetRecord, String> PLATFORM_NAME = createField("platform_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getallprojectmetadatabydataset.vendor_protocol_name</code>.
     */
    public final TableField<GetallprojectmetadatabydatasetRecord, String> VENDOR_PROTOCOL_NAME = createField("vendor_protocol_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getallprojectmetadatabydataset.vendor_name</code>.
     */
    public final TableField<GetallprojectmetadatabydatasetRecord, String> VENDOR_NAME = createField("vendor_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getallprojectmetadatabydataset.protocol_name</code>.
     */
    public final TableField<GetallprojectmetadatabydatasetRecord, String> PROTOCOL_NAME = createField("protocol_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getallprojectmetadatabydataset.analysis_name</code>.
     */
    public final TableField<GetallprojectmetadatabydatasetRecord, String> ANALYSIS_NAME = createField("analysis_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getallprojectmetadatabydataset.dataset_name</code>.
     */
    public final TableField<GetallprojectmetadatabydatasetRecord, String> DATASET_NAME = createField("dataset_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.getallprojectmetadatabydataset.dataset_type</code>.
     */
    public final TableField<GetallprojectmetadatabydatasetRecord, String> DATASET_TYPE = createField("dataset_type", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.getallprojectmetadatabydataset</code> table reference
     */
    public Getallprojectmetadatabydataset() {
        this(DSL.name("getallprojectmetadatabydataset"), null);
    }

    /**
     * Create an aliased <code>public.getallprojectmetadatabydataset</code> table reference
     */
    public Getallprojectmetadatabydataset(String alias) {
        this(DSL.name(alias), GETALLPROJECTMETADATABYDATASET);
    }

    /**
     * Create an aliased <code>public.getallprojectmetadatabydataset</code> table reference
     */
    public Getallprojectmetadatabydataset(Name alias) {
        this(alias, GETALLPROJECTMETADATABYDATASET);
    }

    private Getallprojectmetadatabydataset(Name alias, Table<GetallprojectmetadatabydatasetRecord> aliased) {
        this(alias, aliased, new Field[1]);
    }

    private Getallprojectmetadatabydataset(Name alias, Table<GetallprojectmetadatabydatasetRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Getallprojectmetadatabydataset as(String alias) {
        return new Getallprojectmetadatabydataset(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Getallprojectmetadatabydataset as(Name alias) {
        return new Getallprojectmetadatabydataset(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Getallprojectmetadatabydataset rename(String name) {
        return new Getallprojectmetadatabydataset(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Getallprojectmetadatabydataset rename(Name name) {
        return new Getallprojectmetadatabydataset(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public Getallprojectmetadatabydataset call(Integer datasetid) {
        return new Getallprojectmetadatabydataset(DSL.name(getName()), null, new Field[] { 
              DSL.val(datasetid, org.jooq.impl.SQLDataType.INTEGER)
        });
    }

    /**
     * Call this table-valued function
     */
    public Getallprojectmetadatabydataset call(Field<Integer> datasetid) {
        return new Getallprojectmetadatabydataset(DSL.name(getName()), null, new Field[] { 
              datasetid
        });
    }
}
